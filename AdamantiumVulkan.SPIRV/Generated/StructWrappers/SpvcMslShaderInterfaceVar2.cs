// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Spirv.Cross.Interop;
using AdamantiumVulkan.Spirv;

namespace AdamantiumVulkan.Spirv.Cross;

public unsafe partial class SpvcMslShaderInterfaceVar2 : QBDisposableObject
{
    public SpvcMslShaderInterfaceVar2()
    {
    }

    public SpvcMslShaderInterfaceVar2(AdamantiumVulkan.Spirv.Cross.Interop.SpvcMslShaderInterfaceVar2 _internal)
    {
        Location = _internal.location;
        Format = _internal.format;
        Builtin = _internal.builtin;
        Vecsize = _internal.vecsize;
        Rate = _internal.rate;
    }

    public uint Location { get; set; }
    public MslShaderVariableFormat Format { get; set; }
    public SpvBuiltIn Builtin { get; set; }
    public uint Vecsize { get; set; }
    public MslShaderVariableRate Rate { get; set; }
    ///<summary>
    /// Initializes the shader interface variable struct.
    ///</summary>
    public void MslShaderInterfaceVarInit2()
    {
        var arg0 = NativeUtils.StructOrEnumToPointer(ToNative());
        AdamantiumVulkan.Spirv.Cross.Interop.SpirvCrossInterop.spvc_msl_shader_interface_var_init_2(arg0);
        NativeUtils.Free(arg0);
    }


    public AdamantiumVulkan.Spirv.Cross.Interop.SpvcMslShaderInterfaceVar2 ToNative()
    {
        var _internal = new AdamantiumVulkan.Spirv.Cross.Interop.SpvcMslShaderInterfaceVar2();
        if (Location != default)
        {
            _internal.location = Location;
        }
        if (Format != default)
        {
            _internal.format = Format;
        }
        if (Builtin != default)
        {
            _internal.builtin = Builtin;
        }
        if (Vecsize != default)
        {
            _internal.vecsize = Vecsize;
        }
        if (Rate != default)
        {
            _internal.rate = Rate;
        }
        return _internal;
    }

    public static implicit operator SpvcMslShaderInterfaceVar2(AdamantiumVulkan.Spirv.Cross.Interop.SpvcMslShaderInterfaceVar2 s)
    {
        return new SpvcMslShaderInterfaceVar2(s);
    }

}



