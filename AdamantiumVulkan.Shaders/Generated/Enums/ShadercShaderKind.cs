// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace AdamantiumVulkan.Shaders;

// File: C:\VulkanSDK\1.3.283.0\Include\shaderc\shaderc.h Line: 36 Column: 9
public enum ShadercShaderKind : uint
{
    ///<summary>
    /// Forced shader kinds. These shader kinds force the compiler to compile the source code as the specified kind of shader.
    ///</summary>
    VertexShader = 0,

    ///<summary>
    /// Forced shader kinds. These shader kinds force the compiler to compile the source code as the specified kind of shader.
    ///</summary>
    FragmentShader = 1,

    ///<summary>
    /// Forced shader kinds. These shader kinds force the compiler to compile the source code as the specified kind of shader.
    ///</summary>
    ComputeShader = 2,

    ///<summary>
    /// Forced shader kinds. These shader kinds force the compiler to compile the source code as the specified kind of shader.
    ///</summary>
    GeometryShader = 3,

    ///<summary>
    /// Forced shader kinds. These shader kinds force the compiler to compile the source code as the specified kind of shader.
    ///</summary>
    TessControlShader = 4,

    ///<summary>
    /// Forced shader kinds. These shader kinds force the compiler to compile the source code as the specified kind of shader.
    ///</summary>
    TessEvaluationShader = 5,

    ///<summary>
    /// Deduce the shader kind from #pragma annotation in the source code. Compiler will emit error if #pragma annotation is not found.
    ///</summary>
    GlslInferFromSource = 6,

    ///<summary>
    /// Default shader kinds. Compiler will fall back to compile the source code as the specified kind of shader when #pragma annotation is not found in the source code.
    ///</summary>
    GlslDefaultVertexShader = 7,

    ///<summary>
    /// Default shader kinds. Compiler will fall back to compile the source code as the specified kind of shader when #pragma annotation is not found in the source code.
    ///</summary>
    GlslDefaultFragmentShader = 8,

    ///<summary>
    /// Default shader kinds. Compiler will fall back to compile the source code as the specified kind of shader when #pragma annotation is not found in the source code.
    ///</summary>
    GlslDefaultComputeShader = 9,

    ///<summary>
    /// Default shader kinds. Compiler will fall back to compile the source code as the specified kind of shader when #pragma annotation is not found in the source code.
    ///</summary>
    GlslDefaultGeometryShader = 10,

    ///<summary>
    /// Default shader kinds. Compiler will fall back to compile the source code as the specified kind of shader when #pragma annotation is not found in the source code.
    ///</summary>
    GlslDefaultTessControlShader = 11,

    ///<summary>
    /// Default shader kinds. Compiler will fall back to compile the source code as the specified kind of shader when #pragma annotation is not found in the source code.
    ///</summary>
    GlslDefaultTessEvaluationShader = 12,

    ///<summary>
    /// Default shader kinds. Compiler will fall back to compile the source code as the specified kind of shader when #pragma annotation is not found in the source code.
    ///</summary>
    SpirvAssembly = 13,

    ///<summary>
    /// Default shader kinds. Compiler will fall back to compile the source code as the specified kind of shader when #pragma annotation is not found in the source code.
    ///</summary>
    RaygenShader = 14,

    ///<summary>
    /// Default shader kinds. Compiler will fall back to compile the source code as the specified kind of shader when #pragma annotation is not found in the source code.
    ///</summary>
    AnyhitShader = 15,

    ///<summary>
    /// Default shader kinds. Compiler will fall back to compile the source code as the specified kind of shader when #pragma annotation is not found in the source code.
    ///</summary>
    ClosesthitShader = 16,

    ///<summary>
    /// Default shader kinds. Compiler will fall back to compile the source code as the specified kind of shader when #pragma annotation is not found in the source code.
    ///</summary>
    MissShader = 17,

    ///<summary>
    /// Default shader kinds. Compiler will fall back to compile the source code as the specified kind of shader when #pragma annotation is not found in the source code.
    ///</summary>
    IntersectionShader = 18,

    ///<summary>
    /// Default shader kinds. Compiler will fall back to compile the source code as the specified kind of shader when #pragma annotation is not found in the source code.
    ///</summary>
    CallableShader = 19,

    ///<summary>
    /// Default shader kinds. Compiler will fall back to compile the source code as the specified kind of shader when #pragma annotation is not found in the source code.
    ///</summary>
    GlslDefaultRaygenShader = 20,

    ///<summary>
    /// Default shader kinds. Compiler will fall back to compile the source code as the specified kind of shader when #pragma annotation is not found in the source code.
    ///</summary>
    GlslDefaultAnyhitShader = 21,

    ///<summary>
    /// Default shader kinds. Compiler will fall back to compile the source code as the specified kind of shader when #pragma annotation is not found in the source code.
    ///</summary>
    GlslDefaultClosesthitShader = 22,

    ///<summary>
    /// Default shader kinds. Compiler will fall back to compile the source code as the specified kind of shader when #pragma annotation is not found in the source code.
    ///</summary>
    GlslDefaultMissShader = 23,

    ///<summary>
    /// Default shader kinds. Compiler will fall back to compile the source code as the specified kind of shader when #pragma annotation is not found in the source code.
    ///</summary>
    GlslDefaultIntersectionShader = 24,

    ///<summary>
    /// Default shader kinds. Compiler will fall back to compile the source code as the specified kind of shader when #pragma annotation is not found in the source code.
    ///</summary>
    GlslDefaultCallableShader = 25,

    ///<summary>
    /// Default shader kinds. Compiler will fall back to compile the source code as the specified kind of shader when #pragma annotation is not found in the source code.
    ///</summary>
    TaskShader = 26,

    ///<summary>
    /// Default shader kinds. Compiler will fall back to compile the source code as the specified kind of shader when #pragma annotation is not found in the source code.
    ///</summary>
    MeshShader = 27,

    ///<summary>
    /// Default shader kinds. Compiler will fall back to compile the source code as the specified kind of shader when #pragma annotation is not found in the source code.
    ///</summary>
    GlslDefaultTaskShader = 28,

    ///<summary>
    /// Default shader kinds. Compiler will fall back to compile the source code as the specified kind of shader when #pragma annotation is not found in the source code.
    ///</summary>
    GlslDefaultMeshShader = 29,

}



