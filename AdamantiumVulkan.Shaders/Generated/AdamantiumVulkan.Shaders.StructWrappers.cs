// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------


namespace AdamantiumVulkan.Shaders
{
    using System.Runtime.InteropServices;
    using AdamantiumVulkan.Common;
    using AdamantiumVulkan.Shaders;

    public partial class ShadercIncludeResult : QBDisposableObject
    {
        private StringReference source_name;

        private StringReference content;

        public ShadercIncludeResult()
        {
        }

        public ShadercIncludeResult(AdamantiumVulkan.Shaders.Interop.ShadercIncludeResult _internal)
        {
            Source_name = Marshal.PtrToStringAnsi(_internal.source_name);
            Source_name_length = _internal.source_name_length;
            Content = Marshal.PtrToStringAnsi(_internal.content);
            Content_length = _internal.content_length;
            User_data = _internal.user_data;
        }

        public string Source_name { get; set; }
        public ulong Source_name_length { get; set; }
        public string Content { get; set; }
        public ulong Content_length { get; set; }
        public System.IntPtr User_data { get; set; }

        public AdamantiumVulkan.Shaders.Interop.ShadercIncludeResult ToInternal()
        {
            var _internal = new AdamantiumVulkan.Shaders.Interop.ShadercIncludeResult();
            source_name?.Dispose();
            if (Source_name != null)
            {
                source_name = new StringReference(Source_name, false);
                _internal.source_name = source_name.Handle;
            }
            _internal.source_name_length = Source_name_length;
            content?.Dispose();
            if (Content != null)
            {
                content = new StringReference(Content, false);
                _internal.content = content.Handle;
            }
            _internal.content_length = Content_length;
            _internal.user_data = User_data;
            return _internal;
        }

        protected override void UnmanagedDisposeOverride()
        {
            source_name?.Dispose();
            content?.Dispose();
        }


        public static implicit operator ShadercIncludeResult(AdamantiumVulkan.Shaders.Interop.ShadercIncludeResult s)
        {
            return new ShadercIncludeResult(s);
        }

    }


}
