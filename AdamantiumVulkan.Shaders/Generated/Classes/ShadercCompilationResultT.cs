// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Shaders.Interop;

namespace AdamantiumVulkan.Shaders;

// File: C:\VulkanSDK\1.3.283.0\Include\shaderc\shaderc.h Line: 511 Column: 44
///<summary>
/// An opaque handle to the results of a call to any shaderc_compile_into_*() function.
///</summary>
public unsafe partial class ShadercCompilationResultT
{
    internal ShadercCompilationResult __Instance;
    public ShadercCompilationResultT()
    {
    }

    public ShadercCompilationResultT(AdamantiumVulkan.Shaders.Interop.ShadercCompilationResult __Instance)
    {
        this.__Instance = __Instance;
    }

    ///<summary>
    /// Returns a pointer to the start of the compilation output data bytes, either SPIR-V binary or char string. When the source string is compiled into SPIR-V binary, this is guaranteed to be castable to a uint32_t*. If the result contains assembly text or preprocessed source text, the pointer will point to the resulting array of characters.
    ///</summary>
    public System.IntPtr GetBytes()
    {
        return AdamantiumVulkan.Shaders.Interop.VulkanShadersInterop.shaderc_result_get_bytes(this);
    }

    ///<summary>
    /// Returns the compilation status, indicating whether the compilation succeeded, or failed due to some reasons, like invalid shader stage or compilation errors.
    ///</summary>
    public ShadercCompilationStatus GetCompilationStatus()
    {
        return AdamantiumVulkan.Shaders.Interop.VulkanShadersInterop.shaderc_result_get_compilation_status(this);
    }

    ///<summary>
    /// Returns a null-terminated string that contains any error messages generated during the compilation.
    ///</summary>
    public string GetErrorMessage()
    {
        var result = AdamantiumVulkan.Shaders.Interop.VulkanShadersInterop.shaderc_result_get_error_message(this);
        return new string(result);
    }

    ///<summary>
    /// Returns the number of bytes of the compilation output data in a result object.
    ///</summary>
    public ulong GetLength()
    {
        return AdamantiumVulkan.Shaders.Interop.VulkanShadersInterop.shaderc_result_get_length(this);
    }

    ///<summary>
    /// Returns the number of errors generated during the compilation.
    ///</summary>
    public ulong GetNumErrors()
    {
        return AdamantiumVulkan.Shaders.Interop.VulkanShadersInterop.shaderc_result_get_num_errors(this);
    }

    ///<summary>
    /// Returns the number of warnings generated during the compilation.
    ///</summary>
    public ulong GetNumWarnings()
    {
        return AdamantiumVulkan.Shaders.Interop.VulkanShadersInterop.shaderc_result_get_num_warnings(this);
    }

    ///<summary>
    /// Releases the resources held by the result object. It is invalid to use the result object for any further operations.
    ///</summary>
    public void Release()
    {
        AdamantiumVulkan.Shaders.Interop.VulkanShadersInterop.shaderc_result_release(this);
    }

    public ref readonly ShadercCompilationResult GetPinnableReference() => ref __Instance;

    public static implicit operator AdamantiumVulkan.Shaders.Interop.ShadercCompilationResult(ShadercCompilationResultT s)
    {
        return s?.__Instance ?? new AdamantiumVulkan.Shaders.Interop.ShadercCompilationResult();
    }

    public static implicit operator ShadercCompilationResultT(AdamantiumVulkan.Shaders.Interop.ShadercCompilationResult s)
    {
        return new ShadercCompilationResultT(s);
    }

}



