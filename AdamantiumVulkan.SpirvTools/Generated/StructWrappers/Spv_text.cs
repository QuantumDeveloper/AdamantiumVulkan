// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.SpirvTools.Interop;

namespace AdamantiumVulkan.SpirvTools;

public unsafe partial class Spv_text : QBDisposableObject
{
    private MarshaledString _str;

    public Spv_text()
    {
    }

    public Spv_text(AdamantiumVulkan.SpirvTools.Interop.spv_text _internal)
    {
        Str = new string(_internal.str);
        Length = _internal.length;
    }

    public string Str { get; set; }
    public ulong Length { get; set; }
    ///<summary>
    /// Frees an allocated text stream. This is a no-op if the text parameter is a null pointer.
    ///</summary>
    public void SpvTextDestroy()
    {
        AdamantiumVulkan.SpirvTools.Interop.SpirvToolsInterop.spvTextDestroy(ToNative());
    }


    public AdamantiumVulkan.SpirvTools.Interop.spv_text ToNative()
    {
        var _internal = new AdamantiumVulkan.SpirvTools.Interop.spv_text();
        _str.Dispose();
        if (Str != default)
        {
            _str = new MarshaledString(Str, false);
            _internal.str = (sbyte*)_str;
        }
        if (Length != default)
        {
            _internal.length = Length;
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        _str.Dispose();
    }


    public static implicit operator Spv_text(AdamantiumVulkan.SpirvTools.Interop.spv_text s)
    {
        return new Spv_text(s);
    }

}



