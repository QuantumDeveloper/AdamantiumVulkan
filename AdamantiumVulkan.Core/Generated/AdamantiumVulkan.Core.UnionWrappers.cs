// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------


namespace AdamantiumVulkan.Core
{
    using System.Runtime.InteropServices;
    using AdamantiumVulkan;
    using AdamantiumVulkan.Core.Interop;

    public partial class ClearColorValue
    {
        public ClearColorValue()
        {
        }

        public ClearColorValue(AdamantiumVulkan.Core.Interop.VkClearColorValue _internal)
        {
            var tmpArr0 = new float[4];
            unsafe
            {
                for (int i = 0; i < 4; ++i)
                {
                    tmpArr0[i] = _internal.float32[i];
                }
            }
            Float32 = tmpArr0;
            var tmpArr1 = new int[4];
            unsafe
            {
                for (int i = 0; i < 4; ++i)
                {
                    tmpArr1[i] = _internal.int32[i];
                }
            }
            Int32 = tmpArr1;
            var tmpArr2 = new uint[4];
            unsafe
            {
                for (int i = 0; i < 4; ++i)
                {
                    tmpArr2[i] = _internal.uint32[i];
                }
            }
            Uint32 = tmpArr2;
        }

        public float[] Float32 { get; set; }
        public int[] Int32 { get; set; }
        public uint[] Uint32 { get; set; }

        public AdamantiumVulkan.Core.Interop.VkClearColorValue ToInternal()
        {
            var _internal = new AdamantiumVulkan.Core.Interop.VkClearColorValue();
            if(Float32 != null)
            {
                if (Float32.Length > 4)
                    throw new System.ArgumentOutOfRangeException(nameof(Float32), "Array is out of bounds. Size should not be more than 4");

                var inputArray0 = Float32;
                unsafe
                {
                    if (inputArray0 != null)
                    {
                        for (int i = 0; i < inputArray0.Length; ++i)
                        {
                            _internal.float32[i] = inputArray0[i];
                        }
                    }
                }
            }
            if(Int32 != null)
            {
                if (Int32.Length > 4)
                    throw new System.ArgumentOutOfRangeException(nameof(Int32), "Array is out of bounds. Size should not be more than 4");

                var inputArray1 = Int32;
                unsafe
                {
                    if (inputArray1 != null)
                    {
                        for (int i = 0; i < inputArray1.Length; ++i)
                        {
                            _internal.int32[i] = inputArray1[i];
                        }
                    }
                }
            }
            if(Uint32 != null)
            {
                if (Uint32.Length > 4)
                    throw new System.ArgumentOutOfRangeException(nameof(Uint32), "Array is out of bounds. Size should not be more than 4");

                var inputArray2 = Uint32;
                unsafe
                {
                    if (inputArray2 != null)
                    {
                        for (int i = 0; i < inputArray2.Length; ++i)
                        {
                            _internal.uint32[i] = inputArray2[i];
                        }
                    }
                }
            }
            return _internal;
        }

        public static implicit operator ClearColorValue(AdamantiumVulkan.Core.Interop.VkClearColorValue c)
        {
            return new ClearColorValue(c);
        }

    }

    public partial class ClearValue
    {
        public ClearValue()
        {
        }

        public ClearValue(AdamantiumVulkan.Core.Interop.VkClearValue _internal)
        {
            Color = new ClearColorValue(_internal.color);
            DepthStencil = new ClearDepthStencilValue(_internal.depthStencil);
        }

        public ClearColorValue Color { get; set; }
        public ClearDepthStencilValue DepthStencil { get; set; }

        public AdamantiumVulkan.Core.Interop.VkClearValue ToInternal()
        {
            var _internal = new AdamantiumVulkan.Core.Interop.VkClearValue();
            if (Color != null)
            {
                _internal.color = Color.ToInternal();
            }
            if (DepthStencil != null)
            {
                _internal.depthStencil = DepthStencil.ToInternal();
            }
            return _internal;
        }

        public static implicit operator ClearValue(AdamantiumVulkan.Core.Interop.VkClearValue c)
        {
            return new ClearValue(c);
        }

    }

    public partial class PerformanceCounterResultKHR
    {
        public PerformanceCounterResultKHR()
        {
        }

        public PerformanceCounterResultKHR(AdamantiumVulkan.Core.Interop.VkPerformanceCounterResultKHR _internal)
        {
            Int32 = _internal.int32;
            Int64 = _internal.int64;
            Uint32 = _internal.uint32;
            Uint64 = _internal.uint64;
            Float32 = _internal.float32;
            Float64 = _internal.float64;
        }

        public int Int32 { get; set; }
        public long Int64 { get; set; }
        public uint Uint32 { get; set; }
        public ulong Uint64 { get; set; }
        public float Float32 { get; set; }
        public double Float64 { get; set; }

        public AdamantiumVulkan.Core.Interop.VkPerformanceCounterResultKHR ToInternal()
        {
            var _internal = new AdamantiumVulkan.Core.Interop.VkPerformanceCounterResultKHR();
            _internal.int32 = Int32;
            _internal.int64 = Int64;
            _internal.uint32 = Uint32;
            _internal.uint64 = Uint64;
            _internal.float32 = Float32;
            _internal.float64 = Float64;
            return _internal;
        }

        public static implicit operator PerformanceCounterResultKHR(AdamantiumVulkan.Core.Interop.VkPerformanceCounterResultKHR p)
        {
            return new PerformanceCounterResultKHR(p);
        }

    }

    public partial class PipelineExecutableStatisticValueKHR
    {
        public PipelineExecutableStatisticValueKHR()
        {
        }

        public PipelineExecutableStatisticValueKHR(AdamantiumVulkan.Core.Interop.VkPipelineExecutableStatisticValueKHR _internal)
        {
            B32 = System.Convert.ToBoolean(_internal.b32);
            I64 = _internal.i64;
            U64 = _internal.u64;
            F64 = _internal.f64;
        }

        public bool B32 { get; set; }
        public long I64 { get; set; }
        public ulong U64 { get; set; }
        public double F64 { get; set; }

        public AdamantiumVulkan.Core.Interop.VkPipelineExecutableStatisticValueKHR ToInternal()
        {
            var _internal = new AdamantiumVulkan.Core.Interop.VkPipelineExecutableStatisticValueKHR();
            _internal.b32 = System.Convert.ToUInt32(B32);
            _internal.i64 = I64;
            _internal.u64 = U64;
            _internal.f64 = F64;
            return _internal;
        }

        public static implicit operator PipelineExecutableStatisticValueKHR(AdamantiumVulkan.Core.Interop.VkPipelineExecutableStatisticValueKHR p)
        {
            return new PipelineExecutableStatisticValueKHR(p);
        }

    }

    public partial class PerformanceValueDataINTEL : QBDisposableObject
    {
        private StringReference refvalueString;

        public PerformanceValueDataINTEL()
        {
        }

        public PerformanceValueDataINTEL(AdamantiumVulkan.Core.Interop.VkPerformanceValueDataINTEL _internal)
        {
            Value32 = _internal.value32;
            Value64 = _internal.value64;
            ValueFloat = _internal.valueFloat;
            ValueBool = System.Convert.ToBoolean(_internal.valueBool);
            ValueString = Marshal.PtrToStringAnsi(_internal.valueString);
        }

        public uint Value32 { get; set; }
        public ulong Value64 { get; set; }
        public float ValueFloat { get; set; }
        public bool ValueBool { get; set; }
        public string ValueString { get; set; }

        public AdamantiumVulkan.Core.Interop.VkPerformanceValueDataINTEL ToInternal()
        {
            var _internal = new AdamantiumVulkan.Core.Interop.VkPerformanceValueDataINTEL();
            _internal.value32 = Value32;
            _internal.value64 = Value64;
            _internal.valueFloat = ValueFloat;
            _internal.valueBool = System.Convert.ToUInt32(ValueBool);
            refvalueString?.Dispose();
            if (ValueString != null)
            {
                refvalueString = new StringReference(ValueString, false);
                _internal.valueString = refvalueString.Handle;
            }
            return _internal;
        }

        protected override void UnmanagedDisposeOverride()
        {
            refvalueString?.Dispose();
        }


        public static implicit operator PerformanceValueDataINTEL(AdamantiumVulkan.Core.Interop.VkPerformanceValueDataINTEL p)
        {
            return new PerformanceValueDataINTEL(p);
        }

    }

    public partial class DeviceOrHostAddressKHR : QBDisposableObject
    {
        public DeviceOrHostAddressKHR()
        {
        }

        public DeviceOrHostAddressKHR(AdamantiumVulkan.Core.Interop.VkDeviceOrHostAddressKHR _internal)
        {
            DeviceAddress = _internal.deviceAddress;
            HostAddress = _internal.hostAddress;
        }

        public ulong DeviceAddress { get; set; }
        public System.IntPtr HostAddress { get; set; }

        public AdamantiumVulkan.Core.Interop.VkDeviceOrHostAddressKHR ToInternal()
        {
            var _internal = new AdamantiumVulkan.Core.Interop.VkDeviceOrHostAddressKHR();
            _internal.deviceAddress = DeviceAddress;
            _internal.hostAddress = HostAddress;
            return _internal;
        }

        public static implicit operator DeviceOrHostAddressKHR(AdamantiumVulkan.Core.Interop.VkDeviceOrHostAddressKHR d)
        {
            return new DeviceOrHostAddressKHR(d);
        }

    }

    public partial class DeviceOrHostAddressConstKHR : QBDisposableObject
    {
        public DeviceOrHostAddressConstKHR()
        {
        }

        public DeviceOrHostAddressConstKHR(AdamantiumVulkan.Core.Interop.VkDeviceOrHostAddressConstKHR _internal)
        {
            DeviceAddress = _internal.deviceAddress;
            HostAddress = _internal.hostAddress;
        }

        public ulong DeviceAddress { get; set; }
        public System.IntPtr HostAddress { get; set; }

        public AdamantiumVulkan.Core.Interop.VkDeviceOrHostAddressConstKHR ToInternal()
        {
            var _internal = new AdamantiumVulkan.Core.Interop.VkDeviceOrHostAddressConstKHR();
            _internal.deviceAddress = DeviceAddress;
            _internal.hostAddress = HostAddress;
            return _internal;
        }

        public static implicit operator DeviceOrHostAddressConstKHR(AdamantiumVulkan.Core.Interop.VkDeviceOrHostAddressConstKHR d)
        {
            return new DeviceOrHostAddressConstKHR(d);
        }

    }

    public partial class AccelerationStructureGeometryDataKHR
    {
        public AccelerationStructureGeometryDataKHR()
        {
        }

        public AccelerationStructureGeometryDataKHR(AdamantiumVulkan.Core.Interop.VkAccelerationStructureGeometryDataKHR _internal)
        {
            Triangles = new AccelerationStructureGeometryTrianglesDataKHR(_internal.triangles);
            Aabbs = new AccelerationStructureGeometryAabbsDataKHR(_internal.aabbs);
            Instances = new AccelerationStructureGeometryInstancesDataKHR(_internal.instances);
        }

        public AccelerationStructureGeometryTrianglesDataKHR Triangles { get; set; }
        public AccelerationStructureGeometryAabbsDataKHR Aabbs { get; set; }
        public AccelerationStructureGeometryInstancesDataKHR Instances { get; set; }

        public AdamantiumVulkan.Core.Interop.VkAccelerationStructureGeometryDataKHR ToInternal()
        {
            var _internal = new AdamantiumVulkan.Core.Interop.VkAccelerationStructureGeometryDataKHR();
            if (Triangles != null)
            {
                _internal.triangles = Triangles.ToInternal();
            }
            if (Aabbs != null)
            {
                _internal.aabbs = Aabbs.ToInternal();
            }
            if (Instances != null)
            {
                _internal.instances = Instances.ToInternal();
            }
            return _internal;
        }

        public static implicit operator AccelerationStructureGeometryDataKHR(AdamantiumVulkan.Core.Interop.VkAccelerationStructureGeometryDataKHR a)
        {
            return new AccelerationStructureGeometryDataKHR(a);
        }

    }


}
