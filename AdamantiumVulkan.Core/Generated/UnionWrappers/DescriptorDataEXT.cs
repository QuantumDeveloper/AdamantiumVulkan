// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class DescriptorDataEXT : QBDisposableObject
{
    private NativeStruct<AdamantiumVulkan.Core.Interop.VkSampler_T> _pSampler;

    private NativeStruct<AdamantiumVulkan.Core.Interop.VkDescriptorImageInfo> _pCombinedImageSampler;

    private NativeStruct<AdamantiumVulkan.Core.Interop.VkDescriptorImageInfo> _pInputAttachmentImage;

    private NativeStruct<AdamantiumVulkan.Core.Interop.VkDescriptorImageInfo> _pSampledImage;

    private NativeStruct<AdamantiumVulkan.Core.Interop.VkDescriptorImageInfo> _pStorageImage;

    private NativeStruct<AdamantiumVulkan.Core.Interop.VkDescriptorAddressInfoEXT> _pUniformTexelBuffer;

    private NativeStruct<AdamantiumVulkan.Core.Interop.VkDescriptorAddressInfoEXT> _pStorageTexelBuffer;

    private NativeStruct<AdamantiumVulkan.Core.Interop.VkDescriptorAddressInfoEXT> _pUniformBuffer;

    private NativeStruct<AdamantiumVulkan.Core.Interop.VkDescriptorAddressInfoEXT> _pStorageBuffer;

    public DescriptorDataEXT()
    {
    }

    public DescriptorDataEXT(AdamantiumVulkan.Core.Interop.VkDescriptorDataEXT _internal)
    {
        PSampler = new Sampler(*_internal.pSampler);
        NativeUtils.Free(_internal.pSampler);
        PCombinedImageSampler = new DescriptorImageInfo(*_internal.pCombinedImageSampler);
        NativeUtils.Free(_internal.pCombinedImageSampler);
        PInputAttachmentImage = new DescriptorImageInfo(*_internal.pInputAttachmentImage);
        NativeUtils.Free(_internal.pInputAttachmentImage);
        PSampledImage = new DescriptorImageInfo(*_internal.pSampledImage);
        NativeUtils.Free(_internal.pSampledImage);
        PStorageImage = new DescriptorImageInfo(*_internal.pStorageImage);
        NativeUtils.Free(_internal.pStorageImage);
        PUniformTexelBuffer = new DescriptorAddressInfoEXT(*_internal.pUniformTexelBuffer);
        NativeUtils.Free(_internal.pUniformTexelBuffer);
        PStorageTexelBuffer = new DescriptorAddressInfoEXT(*_internal.pStorageTexelBuffer);
        NativeUtils.Free(_internal.pStorageTexelBuffer);
        PUniformBuffer = new DescriptorAddressInfoEXT(*_internal.pUniformBuffer);
        NativeUtils.Free(_internal.pUniformBuffer);
        PStorageBuffer = new DescriptorAddressInfoEXT(*_internal.pStorageBuffer);
        NativeUtils.Free(_internal.pStorageBuffer);
        AccelerationStructure = _internal.accelerationStructure;
    }

    public Sampler PSampler { get; set; }
    public DescriptorImageInfo PCombinedImageSampler { get; set; }
    public DescriptorImageInfo PInputAttachmentImage { get; set; }
    public DescriptorImageInfo PSampledImage { get; set; }
    public DescriptorImageInfo PStorageImage { get; set; }
    public DescriptorAddressInfoEXT PUniformTexelBuffer { get; set; }
    public DescriptorAddressInfoEXT PStorageTexelBuffer { get; set; }
    public DescriptorAddressInfoEXT PUniformBuffer { get; set; }
    public DescriptorAddressInfoEXT PStorageBuffer { get; set; }
    public VkDeviceAddress AccelerationStructure { get; set; }

    public AdamantiumVulkan.Core.Interop.VkDescriptorDataEXT ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkDescriptorDataEXT();
        _pSampler.Dispose();
        if (PSampler != null)
        {
            AdamantiumVulkan.Core.Interop.VkSampler_T struct0 = PSampler;
            _pSampler = new NativeStruct<AdamantiumVulkan.Core.Interop.VkSampler_T>(struct0);
            _internal.pSampler = _pSampler.Handle;
        }
        _pCombinedImageSampler.Dispose();
        if (PCombinedImageSampler != null)
        {
            var struct1 = PCombinedImageSampler.ToNative();
            _pCombinedImageSampler = new NativeStruct<AdamantiumVulkan.Core.Interop.VkDescriptorImageInfo>(struct1);
            _internal.pCombinedImageSampler = _pCombinedImageSampler.Handle;
        }
        _pInputAttachmentImage.Dispose();
        if (PInputAttachmentImage != null)
        {
            var struct2 = PInputAttachmentImage.ToNative();
            _pInputAttachmentImage = new NativeStruct<AdamantiumVulkan.Core.Interop.VkDescriptorImageInfo>(struct2);
            _internal.pInputAttachmentImage = _pInputAttachmentImage.Handle;
        }
        _pSampledImage.Dispose();
        if (PSampledImage != null)
        {
            var struct3 = PSampledImage.ToNative();
            _pSampledImage = new NativeStruct<AdamantiumVulkan.Core.Interop.VkDescriptorImageInfo>(struct3);
            _internal.pSampledImage = _pSampledImage.Handle;
        }
        _pStorageImage.Dispose();
        if (PStorageImage != null)
        {
            var struct4 = PStorageImage.ToNative();
            _pStorageImage = new NativeStruct<AdamantiumVulkan.Core.Interop.VkDescriptorImageInfo>(struct4);
            _internal.pStorageImage = _pStorageImage.Handle;
        }
        _pUniformTexelBuffer.Dispose();
        if (PUniformTexelBuffer != null)
        {
            var struct5 = PUniformTexelBuffer.ToNative();
            _pUniformTexelBuffer = new NativeStruct<AdamantiumVulkan.Core.Interop.VkDescriptorAddressInfoEXT>(struct5);
            _internal.pUniformTexelBuffer = _pUniformTexelBuffer.Handle;
        }
        _pStorageTexelBuffer.Dispose();
        if (PStorageTexelBuffer != null)
        {
            var struct6 = PStorageTexelBuffer.ToNative();
            _pStorageTexelBuffer = new NativeStruct<AdamantiumVulkan.Core.Interop.VkDescriptorAddressInfoEXT>(struct6);
            _internal.pStorageTexelBuffer = _pStorageTexelBuffer.Handle;
        }
        _pUniformBuffer.Dispose();
        if (PUniformBuffer != null)
        {
            var struct7 = PUniformBuffer.ToNative();
            _pUniformBuffer = new NativeStruct<AdamantiumVulkan.Core.Interop.VkDescriptorAddressInfoEXT>(struct7);
            _internal.pUniformBuffer = _pUniformBuffer.Handle;
        }
        _pStorageBuffer.Dispose();
        if (PStorageBuffer != null)
        {
            var struct8 = PStorageBuffer.ToNative();
            _pStorageBuffer = new NativeStruct<AdamantiumVulkan.Core.Interop.VkDescriptorAddressInfoEXT>(struct8);
            _internal.pStorageBuffer = _pStorageBuffer.Handle;
        }
        _internal.accelerationStructure = AccelerationStructure;
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        _pSampler.Dispose();
        _pCombinedImageSampler.Dispose();
        _pInputAttachmentImage.Dispose();
        _pSampledImage.Dispose();
        _pStorageImage.Dispose();
        _pUniformTexelBuffer.Dispose();
        _pStorageTexelBuffer.Dispose();
        _pUniformBuffer.Dispose();
        _pStorageBuffer.Dispose();
    }


    public static implicit operator DescriptorDataEXT(AdamantiumVulkan.Core.Interop.VkDescriptorDataEXT d)
    {
        return new DescriptorDataEXT(d);
    }

}



