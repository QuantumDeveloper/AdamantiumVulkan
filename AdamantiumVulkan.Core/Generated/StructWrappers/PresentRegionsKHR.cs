// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class PresentRegionsKHR : QBDisposableObject
{
    private NativeStruct<AdamantiumVulkan.Core.Interop.VkPresentRegionKHR> pRegions;

    public PresentRegionsKHR()
    {
    }

    public PresentRegionsKHR(AdamantiumVulkan.Core.Interop.VkPresentRegionsKHR _internal)
    {
        PNext = _internal.pNext;
        SwapchainCount = _internal.swapchainCount;
        PRegions = new PresentRegionKHR(*_internal.pRegions);
        NativeUtils.Free(_internal.pRegions);
    }

    public StructureType SType => StructureType.PresentRegionsKhr;
    public void* PNext { get; set; }
    public uint SwapchainCount { get; set; }
    public PresentRegionKHR PRegions { get; set; }

    public AdamantiumVulkan.Core.Interop.VkPresentRegionsKHR ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkPresentRegionsKHR();
        _internal.sType = SType;
        _internal.pNext = PNext;
        _internal.swapchainCount = SwapchainCount;
        pRegions.Dispose();
        if (PRegions != null)
        {
            var struct0 = PRegions.ToNative();
            pRegions = new NativeStruct<AdamantiumVulkan.Core.Interop.VkPresentRegionKHR>(struct0);
            _internal.pRegions = pRegions.Handle;
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        pRegions.Dispose();
    }


    public static implicit operator PresentRegionsKHR(AdamantiumVulkan.Core.Interop.VkPresentRegionsKHR p)
    {
        return new PresentRegionsKHR(p);
    }

}



