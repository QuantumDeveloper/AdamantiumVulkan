// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class DisplaySurfaceCreateInfoKHR : QBDisposableObject
{
    public DisplaySurfaceCreateInfoKHR()
    {
    }

    public DisplaySurfaceCreateInfoKHR(AdamantiumVulkan.Core.Interop.VkDisplaySurfaceCreateInfoKHR _internal)
    {
        PNext = _internal.pNext;
        Flags = _internal.flags;
        DisplayMode = new DisplayModeKHR(_internal.displayMode);
        PlaneIndex = _internal.planeIndex;
        PlaneStackIndex = _internal.planeStackIndex;
        Transform = _internal.transform;
        GlobalAlpha = _internal.globalAlpha;
        AlphaMode = _internal.alphaMode;
        ImageExtent = new Extent2D(_internal.imageExtent);
    }

    public StructureType SType => StructureType.DisplaySurfaceCreateInfoKhr;
    public void* PNext { get; set; }
    public VkDisplaySurfaceCreateFlagsKHR Flags { get; set; }
    public DisplayModeKHR DisplayMode { get; set; }
    public uint PlaneIndex { get; set; }
    public uint PlaneStackIndex { get; set; }
    public SurfaceTransformFlagBitsKHR Transform { get; set; }
    public float GlobalAlpha { get; set; }
    public DisplayPlaneAlphaFlagBitsKHR AlphaMode { get; set; }
    public Extent2D ImageExtent { get; set; }

    public AdamantiumVulkan.Core.Interop.VkDisplaySurfaceCreateInfoKHR ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkDisplaySurfaceCreateInfoKHR();
        if (SType != default)
        {
            _internal.sType = SType;
        }
        _internal.pNext = PNext;
        if (Flags != (uint)default)
        {
            _internal.flags = Flags;
        }
        if (DisplayMode != default)
        {
            _internal.displayMode = DisplayMode;
        }
        if (PlaneIndex != default)
        {
            _internal.planeIndex = PlaneIndex;
        }
        if (PlaneStackIndex != default)
        {
            _internal.planeStackIndex = PlaneStackIndex;
        }
        if (Transform != default)
        {
            _internal.transform = Transform;
        }
        if (GlobalAlpha != default)
        {
            _internal.globalAlpha = GlobalAlpha;
        }
        if (AlphaMode != default)
        {
            _internal.alphaMode = AlphaMode;
        }
        if (ImageExtent != default)
        {
            _internal.imageExtent = ImageExtent.ToNative();
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        ImageExtent?.Dispose();
    }


    public static implicit operator DisplaySurfaceCreateInfoKHR(AdamantiumVulkan.Core.Interop.VkDisplaySurfaceCreateInfoKHR d)
    {
        return new DisplaySurfaceCreateInfoKHR(d);
    }

}



