// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class SparseMemoryBind : QBDisposableObject
{
    public SparseMemoryBind()
    {
    }

    public SparseMemoryBind(AdamantiumVulkan.Core.Interop.VkSparseMemoryBind _internal)
    {
        ResourceOffset = _internal.resourceOffset;
        Size = _internal.size;
        Memory = new DeviceMemory(_internal.memory);
        MemoryOffset = _internal.memoryOffset;
        Flags = _internal.flags;
    }

    public VkDeviceSize ResourceOffset { get; set; }
    public VkDeviceSize Size { get; set; }
    public DeviceMemory Memory { get; set; }
    public VkDeviceSize MemoryOffset { get; set; }
    public VkSparseMemoryBindFlags Flags { get; set; }

    public AdamantiumVulkan.Core.Interop.VkSparseMemoryBind ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkSparseMemoryBind();
        if (ResourceOffset != (ulong)default)
        {
            _internal.resourceOffset = ResourceOffset;
        }
        if (Size != (ulong)default)
        {
            _internal.size = Size;
        }
        if (Memory != default)
        {
            _internal.memory = Memory;
        }
        if (MemoryOffset != (ulong)default)
        {
            _internal.memoryOffset = MemoryOffset;
        }
        if (Flags != (uint)default)
        {
            _internal.flags = Flags;
        }
        return _internal;
    }

    public static implicit operator SparseMemoryBind(AdamantiumVulkan.Core.Interop.VkSparseMemoryBind s)
    {
        return new SparseMemoryBind(s);
    }

}



