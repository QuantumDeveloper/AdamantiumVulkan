// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class CopyBufferToImageInfo2 : QBDisposableObject
{
    private NativeStruct<AdamantiumVulkan.Core.Interop.VkBufferImageCopy2> _pRegions;

    public CopyBufferToImageInfo2()
    {
    }

    public CopyBufferToImageInfo2(AdamantiumVulkan.Core.Interop.VkCopyBufferToImageInfo2 _internal)
    {
        SType = _internal.sType;
        PNext = _internal.pNext;
        SrcBuffer = new Buffer(_internal.srcBuffer);
        DstImage = new Image(_internal.dstImage);
        DstImageLayout = _internal.dstImageLayout;
        RegionCount = _internal.regionCount;
        PRegions = new BufferImageCopy2(*_internal.pRegions);
        NativeUtils.Free(_internal.pRegions);
    }

    public StructureType SType { get; set; }
    public void* PNext { get; set; }
    public Buffer SrcBuffer { get; set; }
    public Image DstImage { get; set; }
    public ImageLayout DstImageLayout { get; set; }
    public uint RegionCount { get; set; }
    public BufferImageCopy2 PRegions { get; set; }

    public AdamantiumVulkan.Core.Interop.VkCopyBufferToImageInfo2 ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkCopyBufferToImageInfo2();
        if (SType != default)
        {
            _internal.sType = SType;
        }
        _internal.pNext = PNext;
        if (SrcBuffer != default)
        {
            _internal.srcBuffer = SrcBuffer;
        }
        if (DstImage != default)
        {
            _internal.dstImage = DstImage;
        }
        if (DstImageLayout != default)
        {
            _internal.dstImageLayout = DstImageLayout;
        }
        if (RegionCount != default)
        {
            _internal.regionCount = RegionCount;
        }
        _pRegions.Dispose();
        if (PRegions != default)
        {
            var struct0 = PRegions.ToNative();
            _pRegions = new NativeStruct<AdamantiumVulkan.Core.Interop.VkBufferImageCopy2>(struct0);
            _internal.pRegions = _pRegions.Handle;
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        _pRegions.Dispose();
    }


    public static implicit operator CopyBufferToImageInfo2(AdamantiumVulkan.Core.Interop.VkCopyBufferToImageInfo2 c)
    {
        return new CopyBufferToImageInfo2(c);
    }

}



