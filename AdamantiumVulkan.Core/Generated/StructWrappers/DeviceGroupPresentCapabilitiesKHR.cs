// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class DeviceGroupPresentCapabilitiesKHR : QBDisposableObject
{
    public DeviceGroupPresentCapabilitiesKHR()
    {
    }

    public DeviceGroupPresentCapabilitiesKHR(AdamantiumVulkan.Core.Interop.VkDeviceGroupPresentCapabilitiesKHR _internal)
    {
        PNext = _internal.pNext;
        PresentMask = NativeUtils.PointerToManagedArray(_internal.presentMask, 32);
        Modes = _internal.modes;
    }

    public StructureType SType => StructureType.DeviceGroupPresentCapabilitiesKhr;
    public void* PNext { get; set; }
    public uint[] PresentMask { get; set; }
    public VkDeviceGroupPresentModeFlagsKHR Modes { get; set; }

    public AdamantiumVulkan.Core.Interop.VkDeviceGroupPresentCapabilitiesKHR ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkDeviceGroupPresentCapabilitiesKHR();
        if (SType != default)
        {
            _internal.sType = SType;
        }
        _internal.pNext = PNext;
        if (PresentMask != default)
        {
            if (PresentMask.Length > 32)
                throw new System.ArgumentOutOfRangeException(nameof(PresentMask), "Array is out of bounds. Size should not be more than 32");

            NativeUtils.PrimitiveToFixedArray(_internal.presentMask, 32, PresentMask);
        }
        if (Modes != (uint)default)
        {
            _internal.modes = Modes;
        }
        return _internal;
    }

    public static implicit operator DeviceGroupPresentCapabilitiesKHR(AdamantiumVulkan.Core.Interop.VkDeviceGroupPresentCapabilitiesKHR d)
    {
        return new DeviceGroupPresentCapabilitiesKHR(d);
    }

}



