// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class TraceRaysIndirectCommand2KHR : QBDisposableObject
{
    public TraceRaysIndirectCommand2KHR()
    {
    }

    public TraceRaysIndirectCommand2KHR(AdamantiumVulkan.Core.Interop.VkTraceRaysIndirectCommand2KHR _internal)
    {
        RaygenShaderRecordAddress = _internal.raygenShaderRecordAddress;
        RaygenShaderRecordSize = _internal.raygenShaderRecordSize;
        MissShaderBindingTableAddress = _internal.missShaderBindingTableAddress;
        MissShaderBindingTableSize = _internal.missShaderBindingTableSize;
        MissShaderBindingTableStride = _internal.missShaderBindingTableStride;
        HitShaderBindingTableAddress = _internal.hitShaderBindingTableAddress;
        HitShaderBindingTableSize = _internal.hitShaderBindingTableSize;
        HitShaderBindingTableStride = _internal.hitShaderBindingTableStride;
        CallableShaderBindingTableAddress = _internal.callableShaderBindingTableAddress;
        CallableShaderBindingTableSize = _internal.callableShaderBindingTableSize;
        CallableShaderBindingTableStride = _internal.callableShaderBindingTableStride;
        Width = _internal.width;
        Height = _internal.height;
        Depth = _internal.depth;
    }

    public VkDeviceAddress RaygenShaderRecordAddress { get; set; }
    public VkDeviceSize RaygenShaderRecordSize { get; set; }
    public VkDeviceAddress MissShaderBindingTableAddress { get; set; }
    public VkDeviceSize MissShaderBindingTableSize { get; set; }
    public VkDeviceSize MissShaderBindingTableStride { get; set; }
    public VkDeviceAddress HitShaderBindingTableAddress { get; set; }
    public VkDeviceSize HitShaderBindingTableSize { get; set; }
    public VkDeviceSize HitShaderBindingTableStride { get; set; }
    public VkDeviceAddress CallableShaderBindingTableAddress { get; set; }
    public VkDeviceSize CallableShaderBindingTableSize { get; set; }
    public VkDeviceSize CallableShaderBindingTableStride { get; set; }
    public uint Width { get; set; }
    public uint Height { get; set; }
    public uint Depth { get; set; }

    public AdamantiumVulkan.Core.Interop.VkTraceRaysIndirectCommand2KHR ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkTraceRaysIndirectCommand2KHR();
        if (RaygenShaderRecordAddress != (ulong)default)
        {
            _internal.raygenShaderRecordAddress = RaygenShaderRecordAddress;
        }
        if (RaygenShaderRecordSize != (ulong)default)
        {
            _internal.raygenShaderRecordSize = RaygenShaderRecordSize;
        }
        if (MissShaderBindingTableAddress != (ulong)default)
        {
            _internal.missShaderBindingTableAddress = MissShaderBindingTableAddress;
        }
        if (MissShaderBindingTableSize != (ulong)default)
        {
            _internal.missShaderBindingTableSize = MissShaderBindingTableSize;
        }
        if (MissShaderBindingTableStride != (ulong)default)
        {
            _internal.missShaderBindingTableStride = MissShaderBindingTableStride;
        }
        if (HitShaderBindingTableAddress != (ulong)default)
        {
            _internal.hitShaderBindingTableAddress = HitShaderBindingTableAddress;
        }
        if (HitShaderBindingTableSize != (ulong)default)
        {
            _internal.hitShaderBindingTableSize = HitShaderBindingTableSize;
        }
        if (HitShaderBindingTableStride != (ulong)default)
        {
            _internal.hitShaderBindingTableStride = HitShaderBindingTableStride;
        }
        if (CallableShaderBindingTableAddress != (ulong)default)
        {
            _internal.callableShaderBindingTableAddress = CallableShaderBindingTableAddress;
        }
        if (CallableShaderBindingTableSize != (ulong)default)
        {
            _internal.callableShaderBindingTableSize = CallableShaderBindingTableSize;
        }
        if (CallableShaderBindingTableStride != (ulong)default)
        {
            _internal.callableShaderBindingTableStride = CallableShaderBindingTableStride;
        }
        if (Width != default)
        {
            _internal.width = Width;
        }
        if (Height != default)
        {
            _internal.height = Height;
        }
        if (Depth != default)
        {
            _internal.depth = Depth;
        }
        return _internal;
    }

    public static implicit operator TraceRaysIndirectCommand2KHR(AdamantiumVulkan.Core.Interop.VkTraceRaysIndirectCommand2KHR t)
    {
        return new TraceRaysIndirectCommand2KHR(t);
    }

}



