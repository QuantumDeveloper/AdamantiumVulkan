// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class RayTracingPipelineInterfaceCreateInfoKHR : QBDisposableObject
{
    public RayTracingPipelineInterfaceCreateInfoKHR()
    {
    }

    public RayTracingPipelineInterfaceCreateInfoKHR(AdamantiumVulkan.Core.Interop.VkRayTracingPipelineInterfaceCreateInfoKHR _internal)
    {
        SType = _internal.sType;
        PNext = _internal.pNext;
        MaxPipelineRayPayloadSize = _internal.maxPipelineRayPayloadSize;
        MaxPipelineRayHitAttributeSize = _internal.maxPipelineRayHitAttributeSize;
    }

    public StructureType SType { get; set; }
    public void* PNext { get; set; }
    public uint MaxPipelineRayPayloadSize { get; set; }
    public uint MaxPipelineRayHitAttributeSize { get; set; }

    public AdamantiumVulkan.Core.Interop.VkRayTracingPipelineInterfaceCreateInfoKHR ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkRayTracingPipelineInterfaceCreateInfoKHR();
        if (SType != default)
        {
            _internal.sType = SType;
        }
        _internal.pNext = PNext;
        if (MaxPipelineRayPayloadSize != default)
        {
            _internal.maxPipelineRayPayloadSize = MaxPipelineRayPayloadSize;
        }
        if (MaxPipelineRayHitAttributeSize != default)
        {
            _internal.maxPipelineRayHitAttributeSize = MaxPipelineRayHitAttributeSize;
        }
        return _internal;
    }

    public static implicit operator RayTracingPipelineInterfaceCreateInfoKHR(AdamantiumVulkan.Core.Interop.VkRayTracingPipelineInterfaceCreateInfoKHR r)
    {
        return new RayTracingPipelineInterfaceCreateInfoKHR(r);
    }

}



