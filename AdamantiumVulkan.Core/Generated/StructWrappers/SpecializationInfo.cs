// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class SpecializationInfo : QBDisposableObject
{
    private NativeStruct<VkSpecializationMapEntry> pMapEntries;

    public SpecializationInfo()
    {
    }

    public SpecializationInfo(AdamantiumVulkan.Core.Interop.VkSpecializationInfo _internal)
    {
        MapEntryCount = _internal.mapEntryCount;
        PMapEntries = new SpecializationMapEntry(*_internal.pMapEntries);
        NativeUtils.Free(_internal.pMapEntries);
        DataSize = _internal.dataSize;
        PData = _internal.pData;
    }

    public uint MapEntryCount { get; set; }
    public SpecializationMapEntry PMapEntries { get; set; }
    public ulong DataSize { get; set; }
    public void* PData { get; set; }

    public AdamantiumVulkan.Core.Interop.VkSpecializationInfo ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkSpecializationInfo();
        _internal.mapEntryCount = MapEntryCount;
        pMapEntries.Dispose();
        if (PMapEntries != null)
        {
            var struct0 = PMapEntries.ToNative();
            pMapEntries = new NativeStruct<VkSpecializationMapEntry>(struct0);
            _internal.pMapEntries = pMapEntries.Handle;
        }
        _internal.dataSize = DataSize;
        _internal.pData = PData;
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        pMapEntries.Dispose();
    }


    public static implicit operator SpecializationInfo(AdamantiumVulkan.Core.Interop.VkSpecializationInfo s)
    {
        return new SpecializationInfo(s);
    }

}



