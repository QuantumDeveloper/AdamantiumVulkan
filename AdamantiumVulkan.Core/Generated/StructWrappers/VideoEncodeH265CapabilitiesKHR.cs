// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;
using AdamantiumVulkan;

namespace AdamantiumVulkan.Core;

public unsafe partial class VideoEncodeH265CapabilitiesKHR : QBDisposableObject
{
    public VideoEncodeH265CapabilitiesKHR()
    {
    }

    public VideoEncodeH265CapabilitiesKHR(AdamantiumVulkan.Core.Interop.VkVideoEncodeH265CapabilitiesKHR _internal)
    {
        SType = _internal.sType;
        PNext = _internal.pNext;
        Flags = _internal.flags;
        MaxLevelIdc = _internal.maxLevelIdc;
        MaxSliceSegmentCount = _internal.maxSliceSegmentCount;
        MaxTiles = new Extent2D(_internal.maxTiles);
        CtbSizes = _internal.ctbSizes;
        TransformBlockSizes = _internal.transformBlockSizes;
        MaxPPictureL0ReferenceCount = _internal.maxPPictureL0ReferenceCount;
        MaxBPictureL0ReferenceCount = _internal.maxBPictureL0ReferenceCount;
        MaxL1ReferenceCount = _internal.maxL1ReferenceCount;
        MaxSubLayerCount = _internal.maxSubLayerCount;
        ExpectDyadicTemporalSubLayerPattern = _internal.expectDyadicTemporalSubLayerPattern;
        MinQp = _internal.minQp;
        MaxQp = _internal.maxQp;
        PrefersGopRemainingFrames = _internal.prefersGopRemainingFrames;
        RequiresGopRemainingFrames = _internal.requiresGopRemainingFrames;
        StdSyntaxFlags = _internal.stdSyntaxFlags;
    }

    public StructureType SType { get; set; }
    public void* PNext { get; set; }
    public VkVideoEncodeH265CapabilityFlagsKHR Flags { get; set; }
    public StdVideoH265LevelIdc MaxLevelIdc { get; set; }
    public uint MaxSliceSegmentCount { get; set; }
    public Extent2D MaxTiles { get; set; }
    public VkVideoEncodeH265CtbSizeFlagsKHR CtbSizes { get; set; }
    public VkVideoEncodeH265TransformBlockSizeFlagsKHR TransformBlockSizes { get; set; }
    public uint MaxPPictureL0ReferenceCount { get; set; }
    public uint MaxBPictureL0ReferenceCount { get; set; }
    public uint MaxL1ReferenceCount { get; set; }
    public uint MaxSubLayerCount { get; set; }
    public VkBool32 ExpectDyadicTemporalSubLayerPattern { get; set; }
    public int MinQp { get; set; }
    public int MaxQp { get; set; }
    public VkBool32 PrefersGopRemainingFrames { get; set; }
    public VkBool32 RequiresGopRemainingFrames { get; set; }
    public VkVideoEncodeH265StdFlagsKHR StdSyntaxFlags { get; set; }

    public AdamantiumVulkan.Core.Interop.VkVideoEncodeH265CapabilitiesKHR ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkVideoEncodeH265CapabilitiesKHR();
        if (SType != default)
        {
            _internal.sType = SType;
        }
        _internal.pNext = PNext;
        if (Flags != (uint)default)
        {
            _internal.flags = Flags;
        }
        if (MaxLevelIdc != default)
        {
            _internal.maxLevelIdc = MaxLevelIdc;
        }
        if (MaxSliceSegmentCount != default)
        {
            _internal.maxSliceSegmentCount = MaxSliceSegmentCount;
        }
        if (MaxTiles != default)
        {
            _internal.maxTiles = MaxTiles.ToNative();
        }
        if (CtbSizes != (uint)default)
        {
            _internal.ctbSizes = CtbSizes;
        }
        if (TransformBlockSizes != (uint)default)
        {
            _internal.transformBlockSizes = TransformBlockSizes;
        }
        if (MaxPPictureL0ReferenceCount != default)
        {
            _internal.maxPPictureL0ReferenceCount = MaxPPictureL0ReferenceCount;
        }
        if (MaxBPictureL0ReferenceCount != default)
        {
            _internal.maxBPictureL0ReferenceCount = MaxBPictureL0ReferenceCount;
        }
        if (MaxL1ReferenceCount != default)
        {
            _internal.maxL1ReferenceCount = MaxL1ReferenceCount;
        }
        if (MaxSubLayerCount != default)
        {
            _internal.maxSubLayerCount = MaxSubLayerCount;
        }
        if (ExpectDyadicTemporalSubLayerPattern != (uint)default)
        {
            _internal.expectDyadicTemporalSubLayerPattern = ExpectDyadicTemporalSubLayerPattern;
        }
        if (MinQp != default)
        {
            _internal.minQp = MinQp;
        }
        if (MaxQp != default)
        {
            _internal.maxQp = MaxQp;
        }
        if (PrefersGopRemainingFrames != (uint)default)
        {
            _internal.prefersGopRemainingFrames = PrefersGopRemainingFrames;
        }
        if (RequiresGopRemainingFrames != (uint)default)
        {
            _internal.requiresGopRemainingFrames = RequiresGopRemainingFrames;
        }
        if (StdSyntaxFlags != (uint)default)
        {
            _internal.stdSyntaxFlags = StdSyntaxFlags;
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        MaxTiles?.Dispose();
    }


    public static implicit operator VideoEncodeH265CapabilitiesKHR(AdamantiumVulkan.Core.Interop.VkVideoEncodeH265CapabilitiesKHR v)
    {
        return new VideoEncodeH265CapabilitiesKHR(v);
    }

}



