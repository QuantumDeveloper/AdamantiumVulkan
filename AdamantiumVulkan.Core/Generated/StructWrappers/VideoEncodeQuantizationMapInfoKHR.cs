// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class VideoEncodeQuantizationMapInfoKHR : QBDisposableObject
{
    public VideoEncodeQuantizationMapInfoKHR()
    {
    }

    public VideoEncodeQuantizationMapInfoKHR(AdamantiumVulkan.Core.Interop.VkVideoEncodeQuantizationMapInfoKHR _internal)
    {
        SType = _internal.sType;
        PNext = _internal.pNext;
        QuantizationMap = new ImageView(_internal.quantizationMap);
        QuantizationMapExtent = new Extent2D(_internal.quantizationMapExtent);
    }

    public StructureType SType { get; set; }
    public void* PNext { get; set; }
    public ImageView QuantizationMap { get; set; }
    public Extent2D QuantizationMapExtent { get; set; }

    public AdamantiumVulkan.Core.Interop.VkVideoEncodeQuantizationMapInfoKHR ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkVideoEncodeQuantizationMapInfoKHR();
        if (SType != default)
        {
            _internal.sType = SType;
        }
        _internal.pNext = PNext;
        if (QuantizationMap != default)
        {
            _internal.quantizationMap = QuantizationMap;
        }
        if (QuantizationMapExtent != default)
        {
            _internal.quantizationMapExtent = QuantizationMapExtent.ToNative();
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        QuantizationMapExtent?.Dispose();
    }


    public static implicit operator VideoEncodeQuantizationMapInfoKHR(AdamantiumVulkan.Core.Interop.VkVideoEncodeQuantizationMapInfoKHR v)
    {
        return new VideoEncodeQuantizationMapInfoKHR(v);
    }

}



