// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class PhysicalDeviceDriverProperties : QBDisposableObject
{
    public PhysicalDeviceDriverProperties()
    {
    }

    public PhysicalDeviceDriverProperties(AdamantiumVulkan.Core.Interop.VkPhysicalDeviceDriverProperties _internal)
    {
        SType = _internal.sType;
        PNext = _internal.pNext;
        DriverID = _internal.driverID;
        DriverName = new string((sbyte*)_internal.driverName);
        DriverInfo = new string((sbyte*)_internal.driverInfo);
        ConformanceVersion = new ConformanceVersion(_internal.conformanceVersion);
    }

    public StructureType SType { get; set; }
    public void* PNext { get; set; }
    public DriverId DriverID { get; set; }
    public string DriverName { get; set; }
    public string DriverInfo { get; set; }
    public ConformanceVersion ConformanceVersion { get; set; }

    public AdamantiumVulkan.Core.Interop.VkPhysicalDeviceDriverProperties ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkPhysicalDeviceDriverProperties();
        if (SType != default)
        {
            _internal.sType = SType;
        }
        _internal.pNext = PNext;
        if (DriverID != default)
        {
            _internal.driverID = DriverID;
        }
        if (DriverName != default)
        {
            if (DriverName.Length > 256)
                throw new System.ArgumentOutOfRangeException(nameof(DriverName), "Array is out of bounds. Size should not be more than 256");

            NativeUtils.StringToFixedArray(_internal.driverName, 256, DriverName, false);
        }
        if (DriverInfo != default)
        {
            if (DriverInfo.Length > 256)
                throw new System.ArgumentOutOfRangeException(nameof(DriverInfo), "Array is out of bounds. Size should not be more than 256");

            NativeUtils.StringToFixedArray(_internal.driverInfo, 256, DriverInfo, false);
        }
        if (ConformanceVersion != default)
        {
            _internal.conformanceVersion = ConformanceVersion.ToNative();
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        ConformanceVersion?.Dispose();
    }


    public static implicit operator PhysicalDeviceDriverProperties(AdamantiumVulkan.Core.Interop.VkPhysicalDeviceDriverProperties p)
    {
        return new PhysicalDeviceDriverProperties(p);
    }

}



