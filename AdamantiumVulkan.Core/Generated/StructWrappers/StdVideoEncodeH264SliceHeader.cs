// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Interop;

namespace AdamantiumVulkan;

public unsafe partial class StdVideoEncodeH264SliceHeader : QBDisposableObject
{
    private NativeStruct<AdamantiumVulkan.Interop.StdVideoEncodeH264WeightTable> _pWeightTable;

    public StdVideoEncodeH264SliceHeader()
    {
    }

    public StdVideoEncodeH264SliceHeader(AdamantiumVulkan.Interop.StdVideoEncodeH264SliceHeader _internal)
    {
        Flags = new StdVideoEncodeH264SliceHeaderFlags(_internal.flags);
        First_mb_in_slice = _internal.first_mb_in_slice;
        Slice_type = _internal.slice_type;
        Slice_alpha_c0_offset_div2 = _internal.slice_alpha_c0_offset_div2;
        Slice_beta_offset_div2 = _internal.slice_beta_offset_div2;
        Slice_qp_delta = _internal.slice_qp_delta;
        Reserved1 = _internal.reserved1;
        Cabac_init_idc = _internal.cabac_init_idc;
        Disable_deblocking_filter_idc = _internal.disable_deblocking_filter_idc;
        PWeightTable = new StdVideoEncodeH264WeightTable(*_internal.pWeightTable);
        NativeUtils.Free(_internal.pWeightTable);
    }

    public StdVideoEncodeH264SliceHeaderFlags Flags { get; set; }
    public uint First_mb_in_slice { get; set; }
    public StdVideoH264SliceType Slice_type { get; set; }
    public sbyte Slice_alpha_c0_offset_div2 { get; set; }
    public sbyte Slice_beta_offset_div2 { get; set; }
    public sbyte Slice_qp_delta { get; set; }
    public byte Reserved1 { get; set; }
    public StdVideoH264CabacInitIdc Cabac_init_idc { get; set; }
    public StdVideoH264DisableDeblockingFilterIdc Disable_deblocking_filter_idc { get; set; }
    public StdVideoEncodeH264WeightTable PWeightTable { get; set; }

    public AdamantiumVulkan.Interop.StdVideoEncodeH264SliceHeader ToNative()
    {
        var _internal = new AdamantiumVulkan.Interop.StdVideoEncodeH264SliceHeader();
        if (Flags != default)
        {
            _internal.flags = Flags.ToNative();
        }
        if (First_mb_in_slice != default)
        {
            _internal.first_mb_in_slice = First_mb_in_slice;
        }
        if (Slice_type != default)
        {
            _internal.slice_type = Slice_type;
        }
        if (Slice_alpha_c0_offset_div2 != default)
        {
            _internal.slice_alpha_c0_offset_div2 = Slice_alpha_c0_offset_div2;
        }
        if (Slice_beta_offset_div2 != default)
        {
            _internal.slice_beta_offset_div2 = Slice_beta_offset_div2;
        }
        if (Slice_qp_delta != default)
        {
            _internal.slice_qp_delta = Slice_qp_delta;
        }
        if (Reserved1 != default)
        {
            _internal.reserved1 = Reserved1;
        }
        if (Cabac_init_idc != default)
        {
            _internal.cabac_init_idc = Cabac_init_idc;
        }
        if (Disable_deblocking_filter_idc != default)
        {
            _internal.disable_deblocking_filter_idc = Disable_deblocking_filter_idc;
        }
        _pWeightTable.Dispose();
        if (PWeightTable != default)
        {
            var struct0 = PWeightTable.ToNative();
            _pWeightTable = new NativeStruct<AdamantiumVulkan.Interop.StdVideoEncodeH264WeightTable>(struct0);
            _internal.pWeightTable = _pWeightTable.Handle;
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        _pWeightTable.Dispose();
        Flags?.Dispose();
    }


    public static implicit operator StdVideoEncodeH264SliceHeader(AdamantiumVulkan.Interop.StdVideoEncodeH264SliceHeader s)
    {
        return new StdVideoEncodeH264SliceHeader(s);
    }

}



