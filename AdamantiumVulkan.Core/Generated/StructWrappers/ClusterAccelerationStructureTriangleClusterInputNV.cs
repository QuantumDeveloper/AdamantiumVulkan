// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class ClusterAccelerationStructureTriangleClusterInputNV : QBDisposableObject
{
    public ClusterAccelerationStructureTriangleClusterInputNV()
    {
    }

    public ClusterAccelerationStructureTriangleClusterInputNV(AdamantiumVulkan.Core.Interop.VkClusterAccelerationStructureTriangleClusterInputNV _internal)
    {
        SType = _internal.sType;
        PNext = _internal.pNext;
        VertexFormat = _internal.vertexFormat;
        MaxGeometryIndexValue = _internal.maxGeometryIndexValue;
        MaxClusterUniqueGeometryCount = _internal.maxClusterUniqueGeometryCount;
        MaxClusterTriangleCount = _internal.maxClusterTriangleCount;
        MaxClusterVertexCount = _internal.maxClusterVertexCount;
        MaxTotalTriangleCount = _internal.maxTotalTriangleCount;
        MaxTotalVertexCount = _internal.maxTotalVertexCount;
        MinPositionTruncateBitCount = _internal.minPositionTruncateBitCount;
    }

    public StructureType SType { get; set; }
    public void* PNext { get; set; }
    public Format VertexFormat { get; set; }
    public uint MaxGeometryIndexValue { get; set; }
    public uint MaxClusterUniqueGeometryCount { get; set; }
    public uint MaxClusterTriangleCount { get; set; }
    public uint MaxClusterVertexCount { get; set; }
    public uint MaxTotalTriangleCount { get; set; }
    public uint MaxTotalVertexCount { get; set; }
    public uint MinPositionTruncateBitCount { get; set; }

    public AdamantiumVulkan.Core.Interop.VkClusterAccelerationStructureTriangleClusterInputNV ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkClusterAccelerationStructureTriangleClusterInputNV();
        if (SType != default)
        {
            _internal.sType = SType;
        }
        _internal.pNext = PNext;
        if (VertexFormat != default)
        {
            _internal.vertexFormat = VertexFormat;
        }
        if (MaxGeometryIndexValue != default)
        {
            _internal.maxGeometryIndexValue = MaxGeometryIndexValue;
        }
        if (MaxClusterUniqueGeometryCount != default)
        {
            _internal.maxClusterUniqueGeometryCount = MaxClusterUniqueGeometryCount;
        }
        if (MaxClusterTriangleCount != default)
        {
            _internal.maxClusterTriangleCount = MaxClusterTriangleCount;
        }
        if (MaxClusterVertexCount != default)
        {
            _internal.maxClusterVertexCount = MaxClusterVertexCount;
        }
        if (MaxTotalTriangleCount != default)
        {
            _internal.maxTotalTriangleCount = MaxTotalTriangleCount;
        }
        if (MaxTotalVertexCount != default)
        {
            _internal.maxTotalVertexCount = MaxTotalVertexCount;
        }
        if (MinPositionTruncateBitCount != default)
        {
            _internal.minPositionTruncateBitCount = MinPositionTruncateBitCount;
        }
        return _internal;
    }

    public static implicit operator ClusterAccelerationStructureTriangleClusterInputNV(AdamantiumVulkan.Core.Interop.VkClusterAccelerationStructureTriangleClusterInputNV c)
    {
        return new ClusterAccelerationStructureTriangleClusterInputNV(c);
    }

}



