// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;
using AdamantiumVulkan;
using AdamantiumVulkan.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class VideoDecodeH265InlineSessionParametersInfoKHR : QBDisposableObject
{
    private NativeStruct<AdamantiumVulkan.Interop.StdVideoH265VideoParameterSet> _pStdVPS;

    private NativeStruct<AdamantiumVulkan.Interop.StdVideoH265SequenceParameterSet> _pStdSPS;

    private NativeStruct<AdamantiumVulkan.Interop.StdVideoH265PictureParameterSet> _pStdPPS;

    public VideoDecodeH265InlineSessionParametersInfoKHR()
    {
    }

    public VideoDecodeH265InlineSessionParametersInfoKHR(AdamantiumVulkan.Core.Interop.VkVideoDecodeH265InlineSessionParametersInfoKHR _internal)
    {
        SType = _internal.sType;
        PNext = _internal.pNext;
        PStdVPS = new StdVideoH265VideoParameterSet(*_internal.pStdVPS);
        NativeUtils.Free(_internal.pStdVPS);
        PStdSPS = new StdVideoH265SequenceParameterSet(*_internal.pStdSPS);
        NativeUtils.Free(_internal.pStdSPS);
        PStdPPS = new StdVideoH265PictureParameterSet(*_internal.pStdPPS);
        NativeUtils.Free(_internal.pStdPPS);
    }

    public StructureType SType { get; set; }
    public void* PNext { get; set; }
    public StdVideoH265VideoParameterSet PStdVPS { get; set; }
    public StdVideoH265SequenceParameterSet PStdSPS { get; set; }
    public StdVideoH265PictureParameterSet PStdPPS { get; set; }

    public AdamantiumVulkan.Core.Interop.VkVideoDecodeH265InlineSessionParametersInfoKHR ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkVideoDecodeH265InlineSessionParametersInfoKHR();
        if (SType != default)
        {
            _internal.sType = SType;
        }
        _internal.pNext = PNext;
        _pStdVPS.Dispose();
        if (PStdVPS != default)
        {
            var struct0 = PStdVPS.ToNative();
            _pStdVPS = new NativeStruct<AdamantiumVulkan.Interop.StdVideoH265VideoParameterSet>(struct0);
            _internal.pStdVPS = _pStdVPS.Handle;
        }
        _pStdSPS.Dispose();
        if (PStdSPS != default)
        {
            var struct1 = PStdSPS.ToNative();
            _pStdSPS = new NativeStruct<AdamantiumVulkan.Interop.StdVideoH265SequenceParameterSet>(struct1);
            _internal.pStdSPS = _pStdSPS.Handle;
        }
        _pStdPPS.Dispose();
        if (PStdPPS != default)
        {
            var struct2 = PStdPPS.ToNative();
            _pStdPPS = new NativeStruct<AdamantiumVulkan.Interop.StdVideoH265PictureParameterSet>(struct2);
            _internal.pStdPPS = _pStdPPS.Handle;
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        _pStdVPS.Dispose();
        _pStdSPS.Dispose();
        _pStdPPS.Dispose();
    }


    public static implicit operator VideoDecodeH265InlineSessionParametersInfoKHR(AdamantiumVulkan.Core.Interop.VkVideoDecodeH265InlineSessionParametersInfoKHR v)
    {
        return new VideoDecodeH265InlineSessionParametersInfoKHR(v);
    }

}



