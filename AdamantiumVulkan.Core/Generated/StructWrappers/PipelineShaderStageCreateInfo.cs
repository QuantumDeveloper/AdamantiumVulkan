// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class PipelineShaderStageCreateInfo : QBDisposableObject
{
    private MarshaledString _pName;

    private NativeStruct<AdamantiumVulkan.Core.Interop.VkSpecializationInfo> _pSpecializationInfo;

    public PipelineShaderStageCreateInfo()
    {
    }

    public PipelineShaderStageCreateInfo(AdamantiumVulkan.Core.Interop.VkPipelineShaderStageCreateInfo _internal)
    {
        PNext = _internal.pNext;
        Flags = _internal.flags;
        Stage = _internal.stage;
        Module = new ShaderModule(_internal.module);
        PName = new string(_internal.pName);
        PSpecializationInfo = new SpecializationInfo(*_internal.pSpecializationInfo);
        NativeUtils.Free(_internal.pSpecializationInfo);
    }

    public StructureType SType => StructureType.PipelineShaderStageCreateInfo;
    public void* PNext { get; set; }
    public VkPipelineShaderStageCreateFlags Flags { get; set; }
    public ShaderStageFlagBits Stage { get; set; }
    public ShaderModule Module { get; set; }
    public string PName { get; set; }
    public SpecializationInfo PSpecializationInfo { get; set; }

    public AdamantiumVulkan.Core.Interop.VkPipelineShaderStageCreateInfo ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkPipelineShaderStageCreateInfo();
        if (SType != default)
        {
            _internal.sType = SType;
        }
        _internal.pNext = PNext;
        if (Flags != (uint)default)
        {
            _internal.flags = Flags;
        }
        if (Stage != default)
        {
            _internal.stage = Stage;
        }
        if (Module != default)
        {
            _internal.module = Module;
        }
        _pName.Dispose();
        if (PName != default)
        {
            _pName = new MarshaledString(PName, false);
            _internal.pName = (sbyte*)_pName;
        }
        _pSpecializationInfo.Dispose();
        if (PSpecializationInfo != default)
        {
            var struct0 = PSpecializationInfo.ToNative();
            _pSpecializationInfo = new NativeStruct<AdamantiumVulkan.Core.Interop.VkSpecializationInfo>(struct0);
            _internal.pSpecializationInfo = _pSpecializationInfo.Handle;
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        _pName.Dispose();
        _pSpecializationInfo.Dispose();
    }


    public static implicit operator PipelineShaderStageCreateInfo(AdamantiumVulkan.Core.Interop.VkPipelineShaderStageCreateInfo p)
    {
        return new PipelineShaderStageCreateInfo(p);
    }

}



