// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class SamplerCreateInfo : QBDisposableObject
{
    public SamplerCreateInfo()
    {
    }

    public SamplerCreateInfo(AdamantiumVulkan.Core.Interop.VkSamplerCreateInfo _internal)
    {
        PNext = _internal.pNext;
        Flags = _internal.flags;
        MagFilter = _internal.magFilter;
        MinFilter = _internal.minFilter;
        MipmapMode = _internal.mipmapMode;
        AddressModeU = _internal.addressModeU;
        AddressModeV = _internal.addressModeV;
        AddressModeW = _internal.addressModeW;
        MipLodBias = _internal.mipLodBias;
        AnisotropyEnable = _internal.anisotropyEnable;
        MaxAnisotropy = _internal.maxAnisotropy;
        CompareEnable = _internal.compareEnable;
        CompareOp = _internal.compareOp;
        MinLod = _internal.minLod;
        MaxLod = _internal.maxLod;
        BorderColor = _internal.borderColor;
        UnnormalizedCoordinates = _internal.unnormalizedCoordinates;
    }

    public StructureType SType => StructureType.SamplerCreateInfo;
    public void* PNext { get; set; }
    public VkSamplerCreateFlags Flags { get; set; }
    public Filter MagFilter { get; set; }
    public Filter MinFilter { get; set; }
    public SamplerMipmapMode MipmapMode { get; set; }
    public SamplerAddressMode AddressModeU { get; set; }
    public SamplerAddressMode AddressModeV { get; set; }
    public SamplerAddressMode AddressModeW { get; set; }
    public float MipLodBias { get; set; }
    public VkBool32 AnisotropyEnable { get; set; }
    public float MaxAnisotropy { get; set; }
    public VkBool32 CompareEnable { get; set; }
    public CompareOp CompareOp { get; set; }
    public float MinLod { get; set; }
    public float MaxLod { get; set; }
    public BorderColor BorderColor { get; set; }
    public VkBool32 UnnormalizedCoordinates { get; set; }

    public AdamantiumVulkan.Core.Interop.VkSamplerCreateInfo ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkSamplerCreateInfo();
        _internal.sType = SType;
        _internal.pNext = PNext;
        _internal.flags = Flags;
        _internal.magFilter = MagFilter;
        _internal.minFilter = MinFilter;
        _internal.mipmapMode = MipmapMode;
        _internal.addressModeU = AddressModeU;
        _internal.addressModeV = AddressModeV;
        _internal.addressModeW = AddressModeW;
        _internal.mipLodBias = MipLodBias;
        _internal.anisotropyEnable = AnisotropyEnable;
        _internal.maxAnisotropy = MaxAnisotropy;
        _internal.compareEnable = CompareEnable;
        _internal.compareOp = CompareOp;
        _internal.minLod = MinLod;
        _internal.maxLod = MaxLod;
        _internal.borderColor = BorderColor;
        _internal.unnormalizedCoordinates = UnnormalizedCoordinates;
        return _internal;
    }

    public static implicit operator SamplerCreateInfo(AdamantiumVulkan.Core.Interop.VkSamplerCreateInfo s)
    {
        return new SamplerCreateInfo(s);
    }

}



