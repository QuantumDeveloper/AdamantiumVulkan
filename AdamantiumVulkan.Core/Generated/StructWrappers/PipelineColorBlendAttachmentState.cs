// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class PipelineColorBlendAttachmentState : QBDisposableObject
{
    public PipelineColorBlendAttachmentState()
    {
    }

    public PipelineColorBlendAttachmentState(AdamantiumVulkan.Core.Interop.VkPipelineColorBlendAttachmentState _internal)
    {
        BlendEnable = _internal.blendEnable;
        SrcColorBlendFactor = _internal.srcColorBlendFactor;
        DstColorBlendFactor = _internal.dstColorBlendFactor;
        ColorBlendOp = _internal.colorBlendOp;
        SrcAlphaBlendFactor = _internal.srcAlphaBlendFactor;
        DstAlphaBlendFactor = _internal.dstAlphaBlendFactor;
        AlphaBlendOp = _internal.alphaBlendOp;
        ColorWriteMask = _internal.colorWriteMask;
    }

    public VkBool32 BlendEnable { get; set; }
    public BlendFactor SrcColorBlendFactor { get; set; }
    public BlendFactor DstColorBlendFactor { get; set; }
    public BlendOp ColorBlendOp { get; set; }
    public BlendFactor SrcAlphaBlendFactor { get; set; }
    public BlendFactor DstAlphaBlendFactor { get; set; }
    public BlendOp AlphaBlendOp { get; set; }
    public ColorComponentFlagBits ColorWriteMask { get; set; }

    public AdamantiumVulkan.Core.Interop.VkPipelineColorBlendAttachmentState ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkPipelineColorBlendAttachmentState();
        if (BlendEnable != (uint)default)
        {
            _internal.blendEnable = BlendEnable;
        }
        if (SrcColorBlendFactor != default)
        {
            _internal.srcColorBlendFactor = SrcColorBlendFactor;
        }
        if (DstColorBlendFactor != default)
        {
            _internal.dstColorBlendFactor = DstColorBlendFactor;
        }
        if (ColorBlendOp != default)
        {
            _internal.colorBlendOp = ColorBlendOp;
        }
        if (SrcAlphaBlendFactor != default)
        {
            _internal.srcAlphaBlendFactor = SrcAlphaBlendFactor;
        }
        if (DstAlphaBlendFactor != default)
        {
            _internal.dstAlphaBlendFactor = DstAlphaBlendFactor;
        }
        if (AlphaBlendOp != default)
        {
            _internal.alphaBlendOp = AlphaBlendOp;
        }
        if (ColorWriteMask != default)
        {
            _internal.colorWriteMask = ColorWriteMask;
        }
        return _internal;
    }

    public static implicit operator PipelineColorBlendAttachmentState(AdamantiumVulkan.Core.Interop.VkPipelineColorBlendAttachmentState p)
    {
        return new PipelineColorBlendAttachmentState(p);
    }

}



