// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Interop;

namespace AdamantiumVulkan;

public unsafe partial class StdVideoH265HrdParameters : QBDisposableObject
{
    private NativeStruct<AdamantiumVulkan.Interop.StdVideoH265SubLayerHrdParameters> _pSubLayerHrdParametersNal;

    private NativeStruct<AdamantiumVulkan.Interop.StdVideoH265SubLayerHrdParameters> _pSubLayerHrdParametersVcl;

    public StdVideoH265HrdParameters()
    {
    }

    public StdVideoH265HrdParameters(AdamantiumVulkan.Interop.StdVideoH265HrdParameters _internal)
    {
        Flags = new StdVideoH265HrdFlags(_internal.flags);
        Tick_divisor_minus2 = _internal.tick_divisor_minus2;
        Du_cpb_removal_delay_increment_length_minus1 = _internal.du_cpb_removal_delay_increment_length_minus1;
        Dpb_output_delay_du_length_minus1 = _internal.dpb_output_delay_du_length_minus1;
        Bit_rate_scale = _internal.bit_rate_scale;
        Cpb_size_scale = _internal.cpb_size_scale;
        Cpb_size_du_scale = _internal.cpb_size_du_scale;
        Initial_cpb_removal_delay_length_minus1 = _internal.initial_cpb_removal_delay_length_minus1;
        Au_cpb_removal_delay_length_minus1 = _internal.au_cpb_removal_delay_length_minus1;
        Dpb_output_delay_length_minus1 = _internal.dpb_output_delay_length_minus1;
        Cpb_cnt_minus1 = NativeUtils.PointerToManagedArray(_internal.cpb_cnt_minus1, 7);
        Elemental_duration_in_tc_minus1 = NativeUtils.PointerToManagedArray(_internal.elemental_duration_in_tc_minus1, 7);
        Reserved = NativeUtils.PointerToManagedArray(_internal.reserved, 3);
        PSubLayerHrdParametersNal = new StdVideoH265SubLayerHrdParameters(*_internal.pSubLayerHrdParametersNal);
        NativeUtils.Free(_internal.pSubLayerHrdParametersNal);
        PSubLayerHrdParametersVcl = new StdVideoH265SubLayerHrdParameters(*_internal.pSubLayerHrdParametersVcl);
        NativeUtils.Free(_internal.pSubLayerHrdParametersVcl);
    }

    public StdVideoH265HrdFlags Flags { get; set; }
    public byte Tick_divisor_minus2 { get; set; }
    public byte Du_cpb_removal_delay_increment_length_minus1 { get; set; }
    public byte Dpb_output_delay_du_length_minus1 { get; set; }
    public byte Bit_rate_scale { get; set; }
    public byte Cpb_size_scale { get; set; }
    public byte Cpb_size_du_scale { get; set; }
    public byte Initial_cpb_removal_delay_length_minus1 { get; set; }
    public byte Au_cpb_removal_delay_length_minus1 { get; set; }
    public byte Dpb_output_delay_length_minus1 { get; set; }
    public byte[] Cpb_cnt_minus1 { get; set; }
    public ushort[] Elemental_duration_in_tc_minus1 { get; set; }
    public ushort[] Reserved { get; set; }
    public StdVideoH265SubLayerHrdParameters PSubLayerHrdParametersNal { get; set; }
    public StdVideoH265SubLayerHrdParameters PSubLayerHrdParametersVcl { get; set; }

    public AdamantiumVulkan.Interop.StdVideoH265HrdParameters ToNative()
    {
        var _internal = new AdamantiumVulkan.Interop.StdVideoH265HrdParameters();
        if (Flags != default)
        {
            _internal.flags = Flags.ToNative();
        }
        if (Tick_divisor_minus2 != default)
        {
            _internal.tick_divisor_minus2 = Tick_divisor_minus2;
        }
        if (Du_cpb_removal_delay_increment_length_minus1 != default)
        {
            _internal.du_cpb_removal_delay_increment_length_minus1 = Du_cpb_removal_delay_increment_length_minus1;
        }
        if (Dpb_output_delay_du_length_minus1 != default)
        {
            _internal.dpb_output_delay_du_length_minus1 = Dpb_output_delay_du_length_minus1;
        }
        if (Bit_rate_scale != default)
        {
            _internal.bit_rate_scale = Bit_rate_scale;
        }
        if (Cpb_size_scale != default)
        {
            _internal.cpb_size_scale = Cpb_size_scale;
        }
        if (Cpb_size_du_scale != default)
        {
            _internal.cpb_size_du_scale = Cpb_size_du_scale;
        }
        if (Initial_cpb_removal_delay_length_minus1 != default)
        {
            _internal.initial_cpb_removal_delay_length_minus1 = Initial_cpb_removal_delay_length_minus1;
        }
        if (Au_cpb_removal_delay_length_minus1 != default)
        {
            _internal.au_cpb_removal_delay_length_minus1 = Au_cpb_removal_delay_length_minus1;
        }
        if (Dpb_output_delay_length_minus1 != default)
        {
            _internal.dpb_output_delay_length_minus1 = Dpb_output_delay_length_minus1;
        }
        if (Cpb_cnt_minus1 != default)
        {
            if (Cpb_cnt_minus1.Length > 7)
                throw new System.ArgumentOutOfRangeException(nameof(Cpb_cnt_minus1), "Array is out of bounds. Size should not be more than 7");

            NativeUtils.PrimitiveToFixedArray(_internal.cpb_cnt_minus1, 7, Cpb_cnt_minus1);
        }
        if (Elemental_duration_in_tc_minus1 != default)
        {
            if (Elemental_duration_in_tc_minus1.Length > 7)
                throw new System.ArgumentOutOfRangeException(nameof(Elemental_duration_in_tc_minus1), "Array is out of bounds. Size should not be more than 7");

            NativeUtils.PrimitiveToFixedArray(_internal.elemental_duration_in_tc_minus1, 7, Elemental_duration_in_tc_minus1);
        }
        if (Reserved != default)
        {
            if (Reserved.Length > 3)
                throw new System.ArgumentOutOfRangeException(nameof(Reserved), "Array is out of bounds. Size should not be more than 3");

            NativeUtils.PrimitiveToFixedArray(_internal.reserved, 3, Reserved);
        }
        _pSubLayerHrdParametersNal.Dispose();
        if (PSubLayerHrdParametersNal != default)
        {
            var struct0 = PSubLayerHrdParametersNal.ToNative();
            _pSubLayerHrdParametersNal = new NativeStruct<AdamantiumVulkan.Interop.StdVideoH265SubLayerHrdParameters>(struct0);
            _internal.pSubLayerHrdParametersNal = _pSubLayerHrdParametersNal.Handle;
        }
        _pSubLayerHrdParametersVcl.Dispose();
        if (PSubLayerHrdParametersVcl != default)
        {
            var struct1 = PSubLayerHrdParametersVcl.ToNative();
            _pSubLayerHrdParametersVcl = new NativeStruct<AdamantiumVulkan.Interop.StdVideoH265SubLayerHrdParameters>(struct1);
            _internal.pSubLayerHrdParametersVcl = _pSubLayerHrdParametersVcl.Handle;
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        _pSubLayerHrdParametersNal.Dispose();
        _pSubLayerHrdParametersVcl.Dispose();
        Flags?.Dispose();
    }


    public static implicit operator StdVideoH265HrdParameters(AdamantiumVulkan.Interop.StdVideoH265HrdParameters s)
    {
        return new StdVideoH265HrdParameters(s);
    }

}



