// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class ExternalImageFormatPropertiesNV : QBDisposableObject
{
    public ExternalImageFormatPropertiesNV()
    {
    }

    public ExternalImageFormatPropertiesNV(AdamantiumVulkan.Core.Interop.VkExternalImageFormatPropertiesNV _internal)
    {
        ImageFormatProperties = new ImageFormatProperties(_internal.imageFormatProperties);
        ExternalMemoryFeatures = _internal.externalMemoryFeatures;
        ExportFromImportedHandleTypes = _internal.exportFromImportedHandleTypes;
        CompatibleHandleTypes = _internal.compatibleHandleTypes;
    }

    public ImageFormatProperties ImageFormatProperties { get; set; }
    public VkExternalMemoryFeatureFlagsNV ExternalMemoryFeatures { get; set; }
    public VkExternalMemoryHandleTypeFlagsNV ExportFromImportedHandleTypes { get; set; }
    public VkExternalMemoryHandleTypeFlagsNV CompatibleHandleTypes { get; set; }

    public AdamantiumVulkan.Core.Interop.VkExternalImageFormatPropertiesNV ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkExternalImageFormatPropertiesNV();
        if (ImageFormatProperties != default)
        {
            _internal.imageFormatProperties = ImageFormatProperties.ToNative();
        }
        if (ExternalMemoryFeatures != (uint)default)
        {
            _internal.externalMemoryFeatures = ExternalMemoryFeatures;
        }
        if (ExportFromImportedHandleTypes != (uint)default)
        {
            _internal.exportFromImportedHandleTypes = ExportFromImportedHandleTypes;
        }
        if (CompatibleHandleTypes != (uint)default)
        {
            _internal.compatibleHandleTypes = CompatibleHandleTypes;
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        ImageFormatProperties?.Dispose();
    }


    public static implicit operator ExternalImageFormatPropertiesNV(AdamantiumVulkan.Core.Interop.VkExternalImageFormatPropertiesNV e)
    {
        return new ExternalImageFormatPropertiesNV(e);
    }

}



