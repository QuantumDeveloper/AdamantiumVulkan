// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Interop;

namespace AdamantiumVulkan;

public unsafe partial class StdVideoAV1Segmentation : QBDisposableObject
{
    public StdVideoAV1Segmentation()
    {
    }

    public StdVideoAV1Segmentation(AdamantiumVulkan.Interop.StdVideoAV1Segmentation _internal)
    {
        FeatureEnabled = NativeUtils.PointerToManagedArray(_internal.FeatureEnabled, 8);
        FeatureData = NativeUtils.PointerToManagedArray(_internal.FeatureData, 64);
    }

    public byte[] FeatureEnabled { get; set; }
    public short[] FeatureData { get; set; }

    public AdamantiumVulkan.Interop.StdVideoAV1Segmentation ToNative()
    {
        var _internal = new AdamantiumVulkan.Interop.StdVideoAV1Segmentation();
        if (FeatureEnabled != default)
        {
            if (FeatureEnabled.Length > 8)
                throw new System.ArgumentOutOfRangeException(nameof(FeatureEnabled), "Array is out of bounds. Size should not be more than 8");

            NativeUtils.PrimitiveToFixedArray(_internal.FeatureEnabled, 8, FeatureEnabled);
        }
        if (FeatureData != default)
        {
            if (FeatureData.Length > 64)
                throw new System.ArgumentOutOfRangeException(nameof(FeatureData), "Array is out of bounds. Size should not be more than 64");

            NativeUtils.PrimitiveToFixedArray(_internal.FeatureData, 64, FeatureData);
        }
        return _internal;
    }

    public static implicit operator StdVideoAV1Segmentation(AdamantiumVulkan.Interop.StdVideoAV1Segmentation s)
    {
        return new StdVideoAV1Segmentation(s);
    }

}



