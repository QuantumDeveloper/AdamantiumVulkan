// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class WriteDescriptorSetAccelerationStructureKHR : QBDisposableObject
{
    private NativeStruct<VkAccelerationStructureKHR_T> pAccelerationStructures;

    public WriteDescriptorSetAccelerationStructureKHR()
    {
    }

    public WriteDescriptorSetAccelerationStructureKHR(AdamantiumVulkan.Core.Interop.VkWriteDescriptorSetAccelerationStructureKHR _internal)
    {
        SType = _internal.sType;
        PNext = _internal.pNext;
        AccelerationStructureCount = _internal.accelerationStructureCount;
        PAccelerationStructures = new AccelerationStructureKHR(*_internal.pAccelerationStructures);
        NativeUtils.Free(_internal.pAccelerationStructures);
    }

    public StructureType SType { get; set; }
    public void* PNext { get; set; }
    public uint AccelerationStructureCount { get; set; }
    public AccelerationStructureKHR PAccelerationStructures { get; set; }

    public AdamantiumVulkan.Core.Interop.VkWriteDescriptorSetAccelerationStructureKHR ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkWriteDescriptorSetAccelerationStructureKHR();
        _internal.sType = SType;
        _internal.pNext = PNext;
        _internal.accelerationStructureCount = AccelerationStructureCount;
        pAccelerationStructures.Dispose();
        if (PAccelerationStructures != null)
        {
            AdamantiumVulkan.Core.Interop.VkAccelerationStructureKHR_T struct0 = PAccelerationStructures;
            pAccelerationStructures = new NativeStruct<VkAccelerationStructureKHR_T>(struct0);
            _internal.pAccelerationStructures = pAccelerationStructures.Handle;
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        pAccelerationStructures.Dispose();
    }


    public static implicit operator WriteDescriptorSetAccelerationStructureKHR(AdamantiumVulkan.Core.Interop.VkWriteDescriptorSetAccelerationStructureKHR w)
    {
        return new WriteDescriptorSetAccelerationStructureKHR(w);
    }

}



