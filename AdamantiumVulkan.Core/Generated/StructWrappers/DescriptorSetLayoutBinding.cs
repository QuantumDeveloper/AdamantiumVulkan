// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class DescriptorSetLayoutBinding : QBDisposableObject
{
    private NativeStruct<AdamantiumVulkan.Core.Interop.VkSampler_T> _pImmutableSamplers;

    public DescriptorSetLayoutBinding()
    {
    }

    public DescriptorSetLayoutBinding(AdamantiumVulkan.Core.Interop.VkDescriptorSetLayoutBinding _internal)
    {
        Binding = _internal.binding;
        DescriptorType = _internal.descriptorType;
        DescriptorCount = _internal.descriptorCount;
        StageFlags = _internal.stageFlags;
        PImmutableSamplers = new Sampler(*_internal.pImmutableSamplers);
        NativeUtils.Free(_internal.pImmutableSamplers);
    }

    public uint Binding { get; set; }
    public DescriptorType DescriptorType { get; set; }
    public uint DescriptorCount { get; set; }
    public ShaderStageFlagBits StageFlags { get; set; }
    public Sampler PImmutableSamplers { get; set; }

    public AdamantiumVulkan.Core.Interop.VkDescriptorSetLayoutBinding ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkDescriptorSetLayoutBinding();
        if (Binding != default)
        {
            _internal.binding = Binding;
        }
        if (DescriptorType != default)
        {
            _internal.descriptorType = DescriptorType;
        }
        if (DescriptorCount != default)
        {
            _internal.descriptorCount = DescriptorCount;
        }
        if (StageFlags != default)
        {
            _internal.stageFlags = StageFlags;
        }
        _pImmutableSamplers.Dispose();
        if (PImmutableSamplers != default)
        {
            AdamantiumVulkan.Core.Interop.VkSampler_T struct0 = PImmutableSamplers;
            _pImmutableSamplers = new NativeStruct<AdamantiumVulkan.Core.Interop.VkSampler_T>(struct0);
            _internal.pImmutableSamplers = _pImmutableSamplers.Handle;
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        _pImmutableSamplers.Dispose();
    }


    public static implicit operator DescriptorSetLayoutBinding(AdamantiumVulkan.Core.Interop.VkDescriptorSetLayoutBinding d)
    {
        return new DescriptorSetLayoutBinding(d);
    }

}



