// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class PhysicalDeviceBlendOperationAdvancedPropertiesEXT : QBDisposableObject
{
    public PhysicalDeviceBlendOperationAdvancedPropertiesEXT()
    {
    }

    public PhysicalDeviceBlendOperationAdvancedPropertiesEXT(AdamantiumVulkan.Core.Interop.VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT _internal)
    {
        PNext = _internal.pNext;
        AdvancedBlendMaxColorAttachments = _internal.advancedBlendMaxColorAttachments;
        AdvancedBlendIndependentBlend = _internal.advancedBlendIndependentBlend;
        AdvancedBlendNonPremultipliedSrcColor = _internal.advancedBlendNonPremultipliedSrcColor;
        AdvancedBlendNonPremultipliedDstColor = _internal.advancedBlendNonPremultipliedDstColor;
        AdvancedBlendCorrelatedOverlap = _internal.advancedBlendCorrelatedOverlap;
        AdvancedBlendAllOperations = _internal.advancedBlendAllOperations;
    }

    public StructureType SType => StructureType.PhysicalDeviceBlendOperationAdvancedPropertiesExt;
    public void* PNext { get; set; }
    public uint AdvancedBlendMaxColorAttachments { get; set; }
    public VkBool32 AdvancedBlendIndependentBlend { get; set; }
    public VkBool32 AdvancedBlendNonPremultipliedSrcColor { get; set; }
    public VkBool32 AdvancedBlendNonPremultipliedDstColor { get; set; }
    public VkBool32 AdvancedBlendCorrelatedOverlap { get; set; }
    public VkBool32 AdvancedBlendAllOperations { get; set; }

    public AdamantiumVulkan.Core.Interop.VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT();
        if (SType != default)
        {
            _internal.sType = SType;
        }
        _internal.pNext = PNext;
        if (AdvancedBlendMaxColorAttachments != default)
        {
            _internal.advancedBlendMaxColorAttachments = AdvancedBlendMaxColorAttachments;
        }
        if (AdvancedBlendIndependentBlend != (uint)default)
        {
            _internal.advancedBlendIndependentBlend = AdvancedBlendIndependentBlend;
        }
        if (AdvancedBlendNonPremultipliedSrcColor != (uint)default)
        {
            _internal.advancedBlendNonPremultipliedSrcColor = AdvancedBlendNonPremultipliedSrcColor;
        }
        if (AdvancedBlendNonPremultipliedDstColor != (uint)default)
        {
            _internal.advancedBlendNonPremultipliedDstColor = AdvancedBlendNonPremultipliedDstColor;
        }
        if (AdvancedBlendCorrelatedOverlap != (uint)default)
        {
            _internal.advancedBlendCorrelatedOverlap = AdvancedBlendCorrelatedOverlap;
        }
        if (AdvancedBlendAllOperations != (uint)default)
        {
            _internal.advancedBlendAllOperations = AdvancedBlendAllOperations;
        }
        return _internal;
    }

    public static implicit operator PhysicalDeviceBlendOperationAdvancedPropertiesEXT(AdamantiumVulkan.Core.Interop.VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT p)
    {
        return new PhysicalDeviceBlendOperationAdvancedPropertiesEXT(p);
    }

}



