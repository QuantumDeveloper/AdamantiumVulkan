// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class PhysicalDeviceFragmentDensityMapPropertiesEXT : QBDisposableObject
{
    public PhysicalDeviceFragmentDensityMapPropertiesEXT()
    {
    }

    public PhysicalDeviceFragmentDensityMapPropertiesEXT(AdamantiumVulkan.Core.Interop.VkPhysicalDeviceFragmentDensityMapPropertiesEXT _internal)
    {
        PNext = _internal.pNext;
        MinFragmentDensityTexelSize = new Extent2D(_internal.minFragmentDensityTexelSize);
        MaxFragmentDensityTexelSize = new Extent2D(_internal.maxFragmentDensityTexelSize);
        FragmentDensityInvocations = _internal.fragmentDensityInvocations;
    }

    public StructureType SType => StructureType.PhysicalDeviceFragmentDensityMapPropertiesExt;
    public void* PNext { get; set; }
    public Extent2D MinFragmentDensityTexelSize { get; set; }
    public Extent2D MaxFragmentDensityTexelSize { get; set; }
    public VkBool32 FragmentDensityInvocations { get; set; }

    public AdamantiumVulkan.Core.Interop.VkPhysicalDeviceFragmentDensityMapPropertiesEXT ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkPhysicalDeviceFragmentDensityMapPropertiesEXT();
        if (SType != default)
        {
            _internal.sType = SType;
        }
        _internal.pNext = PNext;
        if (MinFragmentDensityTexelSize != default)
        {
            _internal.minFragmentDensityTexelSize = MinFragmentDensityTexelSize.ToNative();
        }
        if (MaxFragmentDensityTexelSize != default)
        {
            _internal.maxFragmentDensityTexelSize = MaxFragmentDensityTexelSize.ToNative();
        }
        if (FragmentDensityInvocations != (uint)default)
        {
            _internal.fragmentDensityInvocations = FragmentDensityInvocations;
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        MinFragmentDensityTexelSize?.Dispose();
        MaxFragmentDensityTexelSize?.Dispose();
    }


    public static implicit operator PhysicalDeviceFragmentDensityMapPropertiesEXT(AdamantiumVulkan.Core.Interop.VkPhysicalDeviceFragmentDensityMapPropertiesEXT p)
    {
        return new PhysicalDeviceFragmentDensityMapPropertiesEXT(p);
    }

}



