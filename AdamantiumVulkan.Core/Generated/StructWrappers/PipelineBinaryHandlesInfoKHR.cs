// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class PipelineBinaryHandlesInfoKHR : QBDisposableObject
{
    private NativeStruct<AdamantiumVulkan.Core.Interop.VkPipelineBinaryKHR_T> _pPipelineBinaries;

    public PipelineBinaryHandlesInfoKHR()
    {
    }

    public PipelineBinaryHandlesInfoKHR(AdamantiumVulkan.Core.Interop.VkPipelineBinaryHandlesInfoKHR _internal)
    {
        SType = _internal.sType;
        PNext = _internal.pNext;
        PipelineBinaryCount = _internal.pipelineBinaryCount;
        PipelineBinaries = new PipelineBinaryKHR(*_internal.pPipelineBinaries);
        NativeUtils.Free(_internal.pPipelineBinaries);
    }

    public StructureType SType { get; set; }
    public void* PNext { get; set; }
    public uint PipelineBinaryCount { get; set; }
    public PipelineBinaryKHR PipelineBinaries { get; set; }

    public AdamantiumVulkan.Core.Interop.VkPipelineBinaryHandlesInfoKHR ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkPipelineBinaryHandlesInfoKHR();
        if (SType != default)
        {
            _internal.sType = SType;
        }
        _internal.pNext = PNext;
        if (PipelineBinaryCount != default)
        {
            _internal.pipelineBinaryCount = PipelineBinaryCount;
        }
        _pPipelineBinaries.Dispose();
        if (PipelineBinaries != default)
        {
            AdamantiumVulkan.Core.Interop.VkPipelineBinaryKHR_T struct0 = PipelineBinaries;
            _pPipelineBinaries = new NativeStruct<AdamantiumVulkan.Core.Interop.VkPipelineBinaryKHR_T>(struct0);
            _internal.pPipelineBinaries = _pPipelineBinaries.Handle;
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        _pPipelineBinaries.Dispose();
    }


    public static implicit operator PipelineBinaryHandlesInfoKHR(AdamantiumVulkan.Core.Interop.VkPipelineBinaryHandlesInfoKHR p)
    {
        return new PipelineBinaryHandlesInfoKHR(p);
    }

}



