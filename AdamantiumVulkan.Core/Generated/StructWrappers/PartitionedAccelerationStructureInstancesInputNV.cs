// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class PartitionedAccelerationStructureInstancesInputNV : QBDisposableObject
{
    public PartitionedAccelerationStructureInstancesInputNV()
    {
    }

    public PartitionedAccelerationStructureInstancesInputNV(AdamantiumVulkan.Core.Interop.VkPartitionedAccelerationStructureInstancesInputNV _internal)
    {
        SType = _internal.sType;
        PNext = _internal.pNext;
        Flags = _internal.flags;
        InstanceCount = _internal.instanceCount;
        MaxInstancePerPartitionCount = _internal.maxInstancePerPartitionCount;
        PartitionCount = _internal.partitionCount;
        MaxInstanceInGlobalPartitionCount = _internal.maxInstanceInGlobalPartitionCount;
    }

    public StructureType SType { get; set; }
    public void* PNext { get; set; }
    public VkBuildAccelerationStructureFlagsKHR Flags { get; set; }
    public uint InstanceCount { get; set; }
    public uint MaxInstancePerPartitionCount { get; set; }
    public uint PartitionCount { get; set; }
    public uint MaxInstanceInGlobalPartitionCount { get; set; }

    public AdamantiumVulkan.Core.Interop.VkPartitionedAccelerationStructureInstancesInputNV ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkPartitionedAccelerationStructureInstancesInputNV();
        if (SType != default)
        {
            _internal.sType = SType;
        }
        _internal.pNext = PNext;
        if (Flags != (uint)default)
        {
            _internal.flags = Flags;
        }
        if (InstanceCount != default)
        {
            _internal.instanceCount = InstanceCount;
        }
        if (MaxInstancePerPartitionCount != default)
        {
            _internal.maxInstancePerPartitionCount = MaxInstancePerPartitionCount;
        }
        if (PartitionCount != default)
        {
            _internal.partitionCount = PartitionCount;
        }
        if (MaxInstanceInGlobalPartitionCount != default)
        {
            _internal.maxInstanceInGlobalPartitionCount = MaxInstanceInGlobalPartitionCount;
        }
        return _internal;
    }

    public static implicit operator PartitionedAccelerationStructureInstancesInputNV(AdamantiumVulkan.Core.Interop.VkPartitionedAccelerationStructureInstancesInputNV p)
    {
        return new PartitionedAccelerationStructureInstancesInputNV(p);
    }

}



