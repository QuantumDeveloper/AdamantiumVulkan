// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class PushDescriptorSetInfoKHR : QBDisposableObject
{
    private NativeStruct<AdamantiumVulkan.Core.Interop.VkWriteDescriptorSet> _pDescriptorWrites;

    public PushDescriptorSetInfoKHR()
    {
    }

    public PushDescriptorSetInfoKHR(AdamantiumVulkan.Core.Interop.VkPushDescriptorSetInfoKHR _internal)
    {
        SType = _internal.sType;
        PNext = _internal.pNext;
        StageFlags = _internal.stageFlags;
        Layout = new PipelineLayout(_internal.layout);
        Set = _internal.set;
        DescriptorWriteCount = _internal.descriptorWriteCount;
        PDescriptorWrites = new WriteDescriptorSet(*_internal.pDescriptorWrites);
        NativeUtils.Free(_internal.pDescriptorWrites);
    }

    public StructureType SType { get; set; }
    public void* PNext { get; set; }
    public VkShaderStageFlags StageFlags { get; set; }
    public PipelineLayout Layout { get; set; }
    public uint Set { get; set; }
    public uint DescriptorWriteCount { get; set; }
    public WriteDescriptorSet PDescriptorWrites { get; set; }

    public AdamantiumVulkan.Core.Interop.VkPushDescriptorSetInfoKHR ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkPushDescriptorSetInfoKHR();
        _internal.sType = SType;
        _internal.pNext = PNext;
        _internal.stageFlags = StageFlags;
        _internal.layout = Layout;
        _internal.set = Set;
        _internal.descriptorWriteCount = DescriptorWriteCount;
        _pDescriptorWrites.Dispose();
        if (PDescriptorWrites != null)
        {
            var struct0 = PDescriptorWrites.ToNative();
            _pDescriptorWrites = new NativeStruct<AdamantiumVulkan.Core.Interop.VkWriteDescriptorSet>(struct0);
            _internal.pDescriptorWrites = _pDescriptorWrites.Handle;
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        _pDescriptorWrites.Dispose();
    }


    public static implicit operator PushDescriptorSetInfoKHR(AdamantiumVulkan.Core.Interop.VkPushDescriptorSetInfoKHR p)
    {
        return new PushDescriptorSetInfoKHR(p);
    }

}



