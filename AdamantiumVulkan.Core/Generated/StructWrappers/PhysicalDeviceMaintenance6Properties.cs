// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class PhysicalDeviceMaintenance6Properties : QBDisposableObject
{
    public PhysicalDeviceMaintenance6Properties()
    {
    }

    public PhysicalDeviceMaintenance6Properties(AdamantiumVulkan.Core.Interop.VkPhysicalDeviceMaintenance6Properties _internal)
    {
        SType = _internal.sType;
        PNext = _internal.pNext;
        BlockTexelViewCompatibleMultipleLayers = _internal.blockTexelViewCompatibleMultipleLayers;
        MaxCombinedImageSamplerDescriptorCount = _internal.maxCombinedImageSamplerDescriptorCount;
        FragmentShadingRateClampCombinerInputs = _internal.fragmentShadingRateClampCombinerInputs;
    }

    public StructureType SType { get; set; }
    public void* PNext { get; set; }
    public VkBool32 BlockTexelViewCompatibleMultipleLayers { get; set; }
    public uint MaxCombinedImageSamplerDescriptorCount { get; set; }
    public VkBool32 FragmentShadingRateClampCombinerInputs { get; set; }

    public AdamantiumVulkan.Core.Interop.VkPhysicalDeviceMaintenance6Properties ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkPhysicalDeviceMaintenance6Properties();
        if (SType != default)
        {
            _internal.sType = SType;
        }
        _internal.pNext = PNext;
        if (BlockTexelViewCompatibleMultipleLayers != (uint)default)
        {
            _internal.blockTexelViewCompatibleMultipleLayers = BlockTexelViewCompatibleMultipleLayers;
        }
        if (MaxCombinedImageSamplerDescriptorCount != default)
        {
            _internal.maxCombinedImageSamplerDescriptorCount = MaxCombinedImageSamplerDescriptorCount;
        }
        if (FragmentShadingRateClampCombinerInputs != (uint)default)
        {
            _internal.fragmentShadingRateClampCombinerInputs = FragmentShadingRateClampCombinerInputs;
        }
        return _internal;
    }

    public static implicit operator PhysicalDeviceMaintenance6Properties(AdamantiumVulkan.Core.Interop.VkPhysicalDeviceMaintenance6Properties p)
    {
        return new PhysicalDeviceMaintenance6Properties(p);
    }

}



