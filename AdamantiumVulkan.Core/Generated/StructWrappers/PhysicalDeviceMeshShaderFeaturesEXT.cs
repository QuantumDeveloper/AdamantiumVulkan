// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class PhysicalDeviceMeshShaderFeaturesEXT : QBDisposableObject
{
    public PhysicalDeviceMeshShaderFeaturesEXT()
    {
    }

    public PhysicalDeviceMeshShaderFeaturesEXT(AdamantiumVulkan.Core.Interop.VkPhysicalDeviceMeshShaderFeaturesEXT _internal)
    {
        SType = _internal.sType;
        PNext = _internal.pNext;
        TaskShader = _internal.taskShader;
        MeshShader = _internal.meshShader;
        MultiviewMeshShader = _internal.multiviewMeshShader;
        PrimitiveFragmentShadingRateMeshShader = _internal.primitiveFragmentShadingRateMeshShader;
        MeshShaderQueries = _internal.meshShaderQueries;
    }

    public StructureType SType { get; set; }
    public void* PNext { get; set; }
    public VkBool32 TaskShader { get; set; }
    public VkBool32 MeshShader { get; set; }
    public VkBool32 MultiviewMeshShader { get; set; }
    public VkBool32 PrimitiveFragmentShadingRateMeshShader { get; set; }
    public VkBool32 MeshShaderQueries { get; set; }

    public AdamantiumVulkan.Core.Interop.VkPhysicalDeviceMeshShaderFeaturesEXT ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkPhysicalDeviceMeshShaderFeaturesEXT();
        if (SType != default)
        {
            _internal.sType = SType;
        }
        _internal.pNext = PNext;
        if (TaskShader != (uint)default)
        {
            _internal.taskShader = TaskShader;
        }
        if (MeshShader != (uint)default)
        {
            _internal.meshShader = MeshShader;
        }
        if (MultiviewMeshShader != (uint)default)
        {
            _internal.multiviewMeshShader = MultiviewMeshShader;
        }
        if (PrimitiveFragmentShadingRateMeshShader != (uint)default)
        {
            _internal.primitiveFragmentShadingRateMeshShader = PrimitiveFragmentShadingRateMeshShader;
        }
        if (MeshShaderQueries != (uint)default)
        {
            _internal.meshShaderQueries = MeshShaderQueries;
        }
        return _internal;
    }

    public static implicit operator PhysicalDeviceMeshShaderFeaturesEXT(AdamantiumVulkan.Core.Interop.VkPhysicalDeviceMeshShaderFeaturesEXT p)
    {
        return new PhysicalDeviceMeshShaderFeaturesEXT(p);
    }

}



