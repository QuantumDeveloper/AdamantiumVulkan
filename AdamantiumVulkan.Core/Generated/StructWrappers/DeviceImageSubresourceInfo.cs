// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class DeviceImageSubresourceInfo : QBDisposableObject
{
    private NativeStruct<AdamantiumVulkan.Core.Interop.VkImageCreateInfo> _pCreateInfo;

    private NativeStruct<AdamantiumVulkan.Core.Interop.VkImageSubresource2> _pSubresource;

    public DeviceImageSubresourceInfo()
    {
    }

    public DeviceImageSubresourceInfo(AdamantiumVulkan.Core.Interop.VkDeviceImageSubresourceInfo _internal)
    {
        SType = _internal.sType;
        PNext = _internal.pNext;
        PCreateInfo = new ImageCreateInfo(*_internal.pCreateInfo);
        NativeUtils.Free(_internal.pCreateInfo);
        PSubresource = new ImageSubresource2(*_internal.pSubresource);
        NativeUtils.Free(_internal.pSubresource);
    }

    public StructureType SType { get; set; }
    public void* PNext { get; set; }
    public ImageCreateInfo PCreateInfo { get; set; }
    public ImageSubresource2 PSubresource { get; set; }

    public AdamantiumVulkan.Core.Interop.VkDeviceImageSubresourceInfo ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkDeviceImageSubresourceInfo();
        if (SType != default)
        {
            _internal.sType = SType;
        }
        _internal.pNext = PNext;
        _pCreateInfo.Dispose();
        if (PCreateInfo != default)
        {
            var struct0 = PCreateInfo.ToNative();
            _pCreateInfo = new NativeStruct<AdamantiumVulkan.Core.Interop.VkImageCreateInfo>(struct0);
            _internal.pCreateInfo = _pCreateInfo.Handle;
        }
        _pSubresource.Dispose();
        if (PSubresource != default)
        {
            var struct1 = PSubresource.ToNative();
            _pSubresource = new NativeStruct<AdamantiumVulkan.Core.Interop.VkImageSubresource2>(struct1);
            _internal.pSubresource = _pSubresource.Handle;
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        _pCreateInfo.Dispose();
        _pSubresource.Dispose();
    }


    public static implicit operator DeviceImageSubresourceInfo(AdamantiumVulkan.Core.Interop.VkDeviceImageSubresourceInfo d)
    {
        return new DeviceImageSubresourceInfo(d);
    }

}



