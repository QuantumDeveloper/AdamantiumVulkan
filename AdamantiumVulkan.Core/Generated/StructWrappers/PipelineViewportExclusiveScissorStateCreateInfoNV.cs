// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class PipelineViewportExclusiveScissorStateCreateInfoNV : QBDisposableObject
{
    private NativeStruct<AdamantiumVulkan.Core.Interop.VkRect2D> _pExclusiveScissors;

    public PipelineViewportExclusiveScissorStateCreateInfoNV()
    {
    }

    public PipelineViewportExclusiveScissorStateCreateInfoNV(AdamantiumVulkan.Core.Interop.VkPipelineViewportExclusiveScissorStateCreateInfoNV _internal)
    {
        PNext = _internal.pNext;
        ExclusiveScissorCount = _internal.exclusiveScissorCount;
        PExclusiveScissors = new Rect2D(*_internal.pExclusiveScissors);
        NativeUtils.Free(_internal.pExclusiveScissors);
    }

    public StructureType SType => StructureType.PipelineViewportExclusiveScissorStateCreateInfoNv;
    public void* PNext { get; set; }
    public uint ExclusiveScissorCount { get; set; }
    public Rect2D PExclusiveScissors { get; set; }

    public AdamantiumVulkan.Core.Interop.VkPipelineViewportExclusiveScissorStateCreateInfoNV ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkPipelineViewportExclusiveScissorStateCreateInfoNV();
        _internal.sType = SType;
        _internal.pNext = PNext;
        _internal.exclusiveScissorCount = ExclusiveScissorCount;
        _pExclusiveScissors.Dispose();
        if (PExclusiveScissors != null)
        {
            var struct0 = PExclusiveScissors.ToNative();
            _pExclusiveScissors = new NativeStruct<AdamantiumVulkan.Core.Interop.VkRect2D>(struct0);
            _internal.pExclusiveScissors = _pExclusiveScissors.Handle;
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        _pExclusiveScissors.Dispose();
    }


    public static implicit operator PipelineViewportExclusiveScissorStateCreateInfoNV(AdamantiumVulkan.Core.Interop.VkPipelineViewportExclusiveScissorStateCreateInfoNV p)
    {
        return new PipelineViewportExclusiveScissorStateCreateInfoNV(p);
    }

}



