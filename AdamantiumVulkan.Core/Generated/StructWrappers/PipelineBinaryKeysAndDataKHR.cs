// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class PipelineBinaryKeysAndDataKHR : QBDisposableObject
{
    private NativeStruct<AdamantiumVulkan.Core.Interop.VkPipelineBinaryKeyKHR> _pPipelineBinaryKeys;

    private NativeStruct<AdamantiumVulkan.Core.Interop.VkPipelineBinaryDataKHR> _pPipelineBinaryData;

    public PipelineBinaryKeysAndDataKHR()
    {
    }

    public PipelineBinaryKeysAndDataKHR(AdamantiumVulkan.Core.Interop.VkPipelineBinaryKeysAndDataKHR _internal)
    {
        BinaryCount = _internal.binaryCount;
        PipelineBinaryKeys = new PipelineBinaryKeyKHR(*_internal.pPipelineBinaryKeys);
        NativeUtils.Free(_internal.pPipelineBinaryKeys);
        PipelineBinaryData = new PipelineBinaryDataKHR(*_internal.pPipelineBinaryData);
        NativeUtils.Free(_internal.pPipelineBinaryData);
    }

    public uint BinaryCount { get; set; }
    public PipelineBinaryKeyKHR PipelineBinaryKeys { get; set; }
    public PipelineBinaryDataKHR PipelineBinaryData { get; set; }

    public AdamantiumVulkan.Core.Interop.VkPipelineBinaryKeysAndDataKHR ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkPipelineBinaryKeysAndDataKHR();
        if (BinaryCount != default)
        {
            _internal.binaryCount = BinaryCount;
        }
        _pPipelineBinaryKeys.Dispose();
        if (PipelineBinaryKeys != default)
        {
            var struct0 = PipelineBinaryKeys.ToNative();
            _pPipelineBinaryKeys = new NativeStruct<AdamantiumVulkan.Core.Interop.VkPipelineBinaryKeyKHR>(struct0);
            _internal.pPipelineBinaryKeys = _pPipelineBinaryKeys.Handle;
        }
        _pPipelineBinaryData.Dispose();
        if (PipelineBinaryData != default)
        {
            var struct1 = PipelineBinaryData.ToNative();
            _pPipelineBinaryData = new NativeStruct<AdamantiumVulkan.Core.Interop.VkPipelineBinaryDataKHR>(struct1);
            _internal.pPipelineBinaryData = _pPipelineBinaryData.Handle;
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        _pPipelineBinaryKeys.Dispose();
        _pPipelineBinaryData.Dispose();
    }


    public static implicit operator PipelineBinaryKeysAndDataKHR(AdamantiumVulkan.Core.Interop.VkPipelineBinaryKeysAndDataKHR p)
    {
        return new PipelineBinaryKeysAndDataKHR(p);
    }

}



