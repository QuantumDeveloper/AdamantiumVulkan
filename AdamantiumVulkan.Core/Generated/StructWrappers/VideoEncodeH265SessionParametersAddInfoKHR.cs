// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;
using AdamantiumVulkan;
using AdamantiumVulkan.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class VideoEncodeH265SessionParametersAddInfoKHR : QBDisposableObject
{
    private NativeStruct<AdamantiumVulkan.Interop.StdVideoH265VideoParameterSet> _pStdVPSs;

    private NativeStruct<AdamantiumVulkan.Interop.StdVideoH265SequenceParameterSet> _pStdSPSs;

    private NativeStruct<AdamantiumVulkan.Interop.StdVideoH265PictureParameterSet> _pStdPPSs;

    public VideoEncodeH265SessionParametersAddInfoKHR()
    {
    }

    public VideoEncodeH265SessionParametersAddInfoKHR(AdamantiumVulkan.Core.Interop.VkVideoEncodeH265SessionParametersAddInfoKHR _internal)
    {
        SType = _internal.sType;
        PNext = _internal.pNext;
        StdVPSCount = _internal.stdVPSCount;
        PStdVPSs = new StdVideoH265VideoParameterSet(*_internal.pStdVPSs);
        NativeUtils.Free(_internal.pStdVPSs);
        StdSPSCount = _internal.stdSPSCount;
        PStdSPSs = new StdVideoH265SequenceParameterSet(*_internal.pStdSPSs);
        NativeUtils.Free(_internal.pStdSPSs);
        StdPPSCount = _internal.stdPPSCount;
        PStdPPSs = new StdVideoH265PictureParameterSet(*_internal.pStdPPSs);
        NativeUtils.Free(_internal.pStdPPSs);
    }

    public StructureType SType { get; set; }
    public void* PNext { get; set; }
    public uint StdVPSCount { get; set; }
    public StdVideoH265VideoParameterSet PStdVPSs { get; set; }
    public uint StdSPSCount { get; set; }
    public StdVideoH265SequenceParameterSet PStdSPSs { get; set; }
    public uint StdPPSCount { get; set; }
    public StdVideoH265PictureParameterSet PStdPPSs { get; set; }

    public AdamantiumVulkan.Core.Interop.VkVideoEncodeH265SessionParametersAddInfoKHR ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkVideoEncodeH265SessionParametersAddInfoKHR();
        _internal.sType = SType;
        _internal.pNext = PNext;
        _internal.stdVPSCount = StdVPSCount;
        _pStdVPSs.Dispose();
        if (PStdVPSs != null)
        {
            var struct0 = PStdVPSs.ToNative();
            _pStdVPSs = new NativeStruct<AdamantiumVulkan.Interop.StdVideoH265VideoParameterSet>(struct0);
            _internal.pStdVPSs = _pStdVPSs.Handle;
        }
        _internal.stdSPSCount = StdSPSCount;
        _pStdSPSs.Dispose();
        if (PStdSPSs != null)
        {
            var struct1 = PStdSPSs.ToNative();
            _pStdSPSs = new NativeStruct<AdamantiumVulkan.Interop.StdVideoH265SequenceParameterSet>(struct1);
            _internal.pStdSPSs = _pStdSPSs.Handle;
        }
        _internal.stdPPSCount = StdPPSCount;
        _pStdPPSs.Dispose();
        if (PStdPPSs != null)
        {
            var struct2 = PStdPPSs.ToNative();
            _pStdPPSs = new NativeStruct<AdamantiumVulkan.Interop.StdVideoH265PictureParameterSet>(struct2);
            _internal.pStdPPSs = _pStdPPSs.Handle;
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        _pStdVPSs.Dispose();
        _pStdSPSs.Dispose();
        _pStdPPSs.Dispose();
    }


    public static implicit operator VideoEncodeH265SessionParametersAddInfoKHR(AdamantiumVulkan.Core.Interop.VkVideoEncodeH265SessionParametersAddInfoKHR v)
    {
        return new VideoEncodeH265SessionParametersAddInfoKHR(v);
    }

}



