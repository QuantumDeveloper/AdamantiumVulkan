// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class PhysicalDeviceLimits
{
    public PhysicalDeviceLimits()
    {
    }

    public PhysicalDeviceLimits(AdamantiumVulkan.Core.Interop.VkPhysicalDeviceLimits _internal)
    {
        MaxImageDimension1D = _internal.maxImageDimension1D;
        MaxImageDimension2D = _internal.maxImageDimension2D;
        MaxImageDimension3D = _internal.maxImageDimension3D;
        MaxImageDimensionCube = _internal.maxImageDimensionCube;
        MaxImageArrayLayers = _internal.maxImageArrayLayers;
        MaxTexelBufferElements = _internal.maxTexelBufferElements;
        MaxUniformBufferRange = _internal.maxUniformBufferRange;
        MaxStorageBufferRange = _internal.maxStorageBufferRange;
        MaxPushConstantsSize = _internal.maxPushConstantsSize;
        MaxMemoryAllocationCount = _internal.maxMemoryAllocationCount;
        MaxSamplerAllocationCount = _internal.maxSamplerAllocationCount;
        BufferImageGranularity = _internal.bufferImageGranularity;
        SparseAddressSpaceSize = _internal.sparseAddressSpaceSize;
        MaxBoundDescriptorSets = _internal.maxBoundDescriptorSets;
        MaxPerStageDescriptorSamplers = _internal.maxPerStageDescriptorSamplers;
        MaxPerStageDescriptorUniformBuffers = _internal.maxPerStageDescriptorUniformBuffers;
        MaxPerStageDescriptorStorageBuffers = _internal.maxPerStageDescriptorStorageBuffers;
        MaxPerStageDescriptorSampledImages = _internal.maxPerStageDescriptorSampledImages;
        MaxPerStageDescriptorStorageImages = _internal.maxPerStageDescriptorStorageImages;
        MaxPerStageDescriptorInputAttachments = _internal.maxPerStageDescriptorInputAttachments;
        MaxPerStageResources = _internal.maxPerStageResources;
        MaxDescriptorSetSamplers = _internal.maxDescriptorSetSamplers;
        MaxDescriptorSetUniformBuffers = _internal.maxDescriptorSetUniformBuffers;
        MaxDescriptorSetUniformBuffersDynamic = _internal.maxDescriptorSetUniformBuffersDynamic;
        MaxDescriptorSetStorageBuffers = _internal.maxDescriptorSetStorageBuffers;
        MaxDescriptorSetStorageBuffersDynamic = _internal.maxDescriptorSetStorageBuffersDynamic;
        MaxDescriptorSetSampledImages = _internal.maxDescriptorSetSampledImages;
        MaxDescriptorSetStorageImages = _internal.maxDescriptorSetStorageImages;
        MaxDescriptorSetInputAttachments = _internal.maxDescriptorSetInputAttachments;
        MaxVertexInputAttributes = _internal.maxVertexInputAttributes;
        MaxVertexInputBindings = _internal.maxVertexInputBindings;
        MaxVertexInputAttributeOffset = _internal.maxVertexInputAttributeOffset;
        MaxVertexInputBindingStride = _internal.maxVertexInputBindingStride;
        MaxVertexOutputComponents = _internal.maxVertexOutputComponents;
        MaxTessellationGenerationLevel = _internal.maxTessellationGenerationLevel;
        MaxTessellationPatchSize = _internal.maxTessellationPatchSize;
        MaxTessellationControlPerVertexInputComponents = _internal.maxTessellationControlPerVertexInputComponents;
        MaxTessellationControlPerVertexOutputComponents = _internal.maxTessellationControlPerVertexOutputComponents;
        MaxTessellationControlPerPatchOutputComponents = _internal.maxTessellationControlPerPatchOutputComponents;
        MaxTessellationControlTotalOutputComponents = _internal.maxTessellationControlTotalOutputComponents;
        MaxTessellationEvaluationInputComponents = _internal.maxTessellationEvaluationInputComponents;
        MaxTessellationEvaluationOutputComponents = _internal.maxTessellationEvaluationOutputComponents;
        MaxGeometryShaderInvocations = _internal.maxGeometryShaderInvocations;
        MaxGeometryInputComponents = _internal.maxGeometryInputComponents;
        MaxGeometryOutputComponents = _internal.maxGeometryOutputComponents;
        MaxGeometryOutputVertices = _internal.maxGeometryOutputVertices;
        MaxGeometryTotalOutputComponents = _internal.maxGeometryTotalOutputComponents;
        MaxFragmentInputComponents = _internal.maxFragmentInputComponents;
        MaxFragmentOutputAttachments = _internal.maxFragmentOutputAttachments;
        MaxFragmentDualSrcAttachments = _internal.maxFragmentDualSrcAttachments;
        MaxFragmentCombinedOutputResources = _internal.maxFragmentCombinedOutputResources;
        MaxComputeSharedMemorySize = _internal.maxComputeSharedMemorySize;
        MaxComputeWorkGroupCount = NativeUtils.PointerToManagedArray(_internal.maxComputeWorkGroupCount, 3);
        MaxComputeWorkGroupInvocations = _internal.maxComputeWorkGroupInvocations;
        MaxComputeWorkGroupSize = NativeUtils.PointerToManagedArray(_internal.maxComputeWorkGroupSize, 3);
        SubPixelPrecisionBits = _internal.subPixelPrecisionBits;
        SubTexelPrecisionBits = _internal.subTexelPrecisionBits;
        MipmapPrecisionBits = _internal.mipmapPrecisionBits;
        MaxDrawIndexedIndexValue = _internal.maxDrawIndexedIndexValue;
        MaxDrawIndirectCount = _internal.maxDrawIndirectCount;
        MaxSamplerLodBias = _internal.maxSamplerLodBias;
        MaxSamplerAnisotropy = _internal.maxSamplerAnisotropy;
        MaxViewports = _internal.maxViewports;
        MaxViewportDimensions = NativeUtils.PointerToManagedArray(_internal.maxViewportDimensions, 2);
        ViewportBoundsRange = NativeUtils.PointerToManagedArray(_internal.viewportBoundsRange, 2);
        ViewportSubPixelBits = _internal.viewportSubPixelBits;
        MinMemoryMapAlignment = _internal.minMemoryMapAlignment;
        MinTexelBufferOffsetAlignment = _internal.minTexelBufferOffsetAlignment;
        MinUniformBufferOffsetAlignment = _internal.minUniformBufferOffsetAlignment;
        MinStorageBufferOffsetAlignment = _internal.minStorageBufferOffsetAlignment;
        MinTexelOffset = _internal.minTexelOffset;
        MaxTexelOffset = _internal.maxTexelOffset;
        MinTexelGatherOffset = _internal.minTexelGatherOffset;
        MaxTexelGatherOffset = _internal.maxTexelGatherOffset;
        MinInterpolationOffset = _internal.minInterpolationOffset;
        MaxInterpolationOffset = _internal.maxInterpolationOffset;
        SubPixelInterpolationOffsetBits = _internal.subPixelInterpolationOffsetBits;
        MaxFramebufferWidth = _internal.maxFramebufferWidth;
        MaxFramebufferHeight = _internal.maxFramebufferHeight;
        MaxFramebufferLayers = _internal.maxFramebufferLayers;
        FramebufferColorSampleCounts = _internal.framebufferColorSampleCounts;
        FramebufferDepthSampleCounts = _internal.framebufferDepthSampleCounts;
        FramebufferStencilSampleCounts = _internal.framebufferStencilSampleCounts;
        FramebufferNoAttachmentsSampleCounts = _internal.framebufferNoAttachmentsSampleCounts;
        MaxColorAttachments = _internal.maxColorAttachments;
        SampledImageColorSampleCounts = _internal.sampledImageColorSampleCounts;
        SampledImageIntegerSampleCounts = _internal.sampledImageIntegerSampleCounts;
        SampledImageDepthSampleCounts = _internal.sampledImageDepthSampleCounts;
        SampledImageStencilSampleCounts = _internal.sampledImageStencilSampleCounts;
        StorageImageSampleCounts = _internal.storageImageSampleCounts;
        MaxSampleMaskWords = _internal.maxSampleMaskWords;
        TimestampComputeAndGraphics = _internal.timestampComputeAndGraphics;
        TimestampPeriod = _internal.timestampPeriod;
        MaxClipDistances = _internal.maxClipDistances;
        MaxCullDistances = _internal.maxCullDistances;
        MaxCombinedClipAndCullDistances = _internal.maxCombinedClipAndCullDistances;
        DiscreteQueuePriorities = _internal.discreteQueuePriorities;
        PointSizeRange = NativeUtils.PointerToManagedArray(_internal.pointSizeRange, 2);
        LineWidthRange = NativeUtils.PointerToManagedArray(_internal.lineWidthRange, 2);
        PointSizeGranularity = _internal.pointSizeGranularity;
        LineWidthGranularity = _internal.lineWidthGranularity;
        StrictLines = _internal.strictLines;
        StandardSampleLocations = _internal.standardSampleLocations;
        OptimalBufferCopyOffsetAlignment = _internal.optimalBufferCopyOffsetAlignment;
        OptimalBufferCopyRowPitchAlignment = _internal.optimalBufferCopyRowPitchAlignment;
        NonCoherentAtomSize = _internal.nonCoherentAtomSize;
    }

    public uint MaxImageDimension1D { get; set; }
    public uint MaxImageDimension2D { get; set; }
    public uint MaxImageDimension3D { get; set; }
    public uint MaxImageDimensionCube { get; set; }
    public uint MaxImageArrayLayers { get; set; }
    public uint MaxTexelBufferElements { get; set; }
    public uint MaxUniformBufferRange { get; set; }
    public uint MaxStorageBufferRange { get; set; }
    public uint MaxPushConstantsSize { get; set; }
    public uint MaxMemoryAllocationCount { get; set; }
    public uint MaxSamplerAllocationCount { get; set; }
    public VkDeviceSize BufferImageGranularity { get; set; }
    public VkDeviceSize SparseAddressSpaceSize { get; set; }
    public uint MaxBoundDescriptorSets { get; set; }
    public uint MaxPerStageDescriptorSamplers { get; set; }
    public uint MaxPerStageDescriptorUniformBuffers { get; set; }
    public uint MaxPerStageDescriptorStorageBuffers { get; set; }
    public uint MaxPerStageDescriptorSampledImages { get; set; }
    public uint MaxPerStageDescriptorStorageImages { get; set; }
    public uint MaxPerStageDescriptorInputAttachments { get; set; }
    public uint MaxPerStageResources { get; set; }
    public uint MaxDescriptorSetSamplers { get; set; }
    public uint MaxDescriptorSetUniformBuffers { get; set; }
    public uint MaxDescriptorSetUniformBuffersDynamic { get; set; }
    public uint MaxDescriptorSetStorageBuffers { get; set; }
    public uint MaxDescriptorSetStorageBuffersDynamic { get; set; }
    public uint MaxDescriptorSetSampledImages { get; set; }
    public uint MaxDescriptorSetStorageImages { get; set; }
    public uint MaxDescriptorSetInputAttachments { get; set; }
    public uint MaxVertexInputAttributes { get; set; }
    public uint MaxVertexInputBindings { get; set; }
    public uint MaxVertexInputAttributeOffset { get; set; }
    public uint MaxVertexInputBindingStride { get; set; }
    public uint MaxVertexOutputComponents { get; set; }
    public uint MaxTessellationGenerationLevel { get; set; }
    public uint MaxTessellationPatchSize { get; set; }
    public uint MaxTessellationControlPerVertexInputComponents { get; set; }
    public uint MaxTessellationControlPerVertexOutputComponents { get; set; }
    public uint MaxTessellationControlPerPatchOutputComponents { get; set; }
    public uint MaxTessellationControlTotalOutputComponents { get; set; }
    public uint MaxTessellationEvaluationInputComponents { get; set; }
    public uint MaxTessellationEvaluationOutputComponents { get; set; }
    public uint MaxGeometryShaderInvocations { get; set; }
    public uint MaxGeometryInputComponents { get; set; }
    public uint MaxGeometryOutputComponents { get; set; }
    public uint MaxGeometryOutputVertices { get; set; }
    public uint MaxGeometryTotalOutputComponents { get; set; }
    public uint MaxFragmentInputComponents { get; set; }
    public uint MaxFragmentOutputAttachments { get; set; }
    public uint MaxFragmentDualSrcAttachments { get; set; }
    public uint MaxFragmentCombinedOutputResources { get; set; }
    public uint MaxComputeSharedMemorySize { get; set; }
    public uint[] MaxComputeWorkGroupCount { get; set; }
    public uint MaxComputeWorkGroupInvocations { get; set; }
    public uint[] MaxComputeWorkGroupSize { get; set; }
    public uint SubPixelPrecisionBits { get; set; }
    public uint SubTexelPrecisionBits { get; set; }
    public uint MipmapPrecisionBits { get; set; }
    public uint MaxDrawIndexedIndexValue { get; set; }
    public uint MaxDrawIndirectCount { get; set; }
    public float MaxSamplerLodBias { get; set; }
    public float MaxSamplerAnisotropy { get; set; }
    public uint MaxViewports { get; set; }
    public uint[] MaxViewportDimensions { get; set; }
    public float[] ViewportBoundsRange { get; set; }
    public uint ViewportSubPixelBits { get; set; }
    public ulong MinMemoryMapAlignment { get; set; }
    public VkDeviceSize MinTexelBufferOffsetAlignment { get; set; }
    public VkDeviceSize MinUniformBufferOffsetAlignment { get; set; }
    public VkDeviceSize MinStorageBufferOffsetAlignment { get; set; }
    public int MinTexelOffset { get; set; }
    public uint MaxTexelOffset { get; set; }
    public int MinTexelGatherOffset { get; set; }
    public uint MaxTexelGatherOffset { get; set; }
    public float MinInterpolationOffset { get; set; }
    public float MaxInterpolationOffset { get; set; }
    public uint SubPixelInterpolationOffsetBits { get; set; }
    public uint MaxFramebufferWidth { get; set; }
    public uint MaxFramebufferHeight { get; set; }
    public uint MaxFramebufferLayers { get; set; }
    public VkSampleCountFlags FramebufferColorSampleCounts { get; set; }
    public VkSampleCountFlags FramebufferDepthSampleCounts { get; set; }
    public VkSampleCountFlags FramebufferStencilSampleCounts { get; set; }
    public VkSampleCountFlags FramebufferNoAttachmentsSampleCounts { get; set; }
    public uint MaxColorAttachments { get; set; }
    public VkSampleCountFlags SampledImageColorSampleCounts { get; set; }
    public VkSampleCountFlags SampledImageIntegerSampleCounts { get; set; }
    public VkSampleCountFlags SampledImageDepthSampleCounts { get; set; }
    public VkSampleCountFlags SampledImageStencilSampleCounts { get; set; }
    public VkSampleCountFlags StorageImageSampleCounts { get; set; }
    public uint MaxSampleMaskWords { get; set; }
    public VkBool32 TimestampComputeAndGraphics { get; set; }
    public float TimestampPeriod { get; set; }
    public uint MaxClipDistances { get; set; }
    public uint MaxCullDistances { get; set; }
    public uint MaxCombinedClipAndCullDistances { get; set; }
    public uint DiscreteQueuePriorities { get; set; }
    public float[] PointSizeRange { get; set; }
    public float[] LineWidthRange { get; set; }
    public float PointSizeGranularity { get; set; }
    public float LineWidthGranularity { get; set; }
    public VkBool32 StrictLines { get; set; }
    public VkBool32 StandardSampleLocations { get; set; }
    public VkDeviceSize OptimalBufferCopyOffsetAlignment { get; set; }
    public VkDeviceSize OptimalBufferCopyRowPitchAlignment { get; set; }
    public VkDeviceSize NonCoherentAtomSize { get; set; }

    public AdamantiumVulkan.Core.Interop.VkPhysicalDeviceLimits ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkPhysicalDeviceLimits();
        _internal.maxImageDimension1D = MaxImageDimension1D;
        _internal.maxImageDimension2D = MaxImageDimension2D;
        _internal.maxImageDimension3D = MaxImageDimension3D;
        _internal.maxImageDimensionCube = MaxImageDimensionCube;
        _internal.maxImageArrayLayers = MaxImageArrayLayers;
        _internal.maxTexelBufferElements = MaxTexelBufferElements;
        _internal.maxUniformBufferRange = MaxUniformBufferRange;
        _internal.maxStorageBufferRange = MaxStorageBufferRange;
        _internal.maxPushConstantsSize = MaxPushConstantsSize;
        _internal.maxMemoryAllocationCount = MaxMemoryAllocationCount;
        _internal.maxSamplerAllocationCount = MaxSamplerAllocationCount;
        _internal.bufferImageGranularity = BufferImageGranularity;
        _internal.sparseAddressSpaceSize = SparseAddressSpaceSize;
        _internal.maxBoundDescriptorSets = MaxBoundDescriptorSets;
        _internal.maxPerStageDescriptorSamplers = MaxPerStageDescriptorSamplers;
        _internal.maxPerStageDescriptorUniformBuffers = MaxPerStageDescriptorUniformBuffers;
        _internal.maxPerStageDescriptorStorageBuffers = MaxPerStageDescriptorStorageBuffers;
        _internal.maxPerStageDescriptorSampledImages = MaxPerStageDescriptorSampledImages;
        _internal.maxPerStageDescriptorStorageImages = MaxPerStageDescriptorStorageImages;
        _internal.maxPerStageDescriptorInputAttachments = MaxPerStageDescriptorInputAttachments;
        _internal.maxPerStageResources = MaxPerStageResources;
        _internal.maxDescriptorSetSamplers = MaxDescriptorSetSamplers;
        _internal.maxDescriptorSetUniformBuffers = MaxDescriptorSetUniformBuffers;
        _internal.maxDescriptorSetUniformBuffersDynamic = MaxDescriptorSetUniformBuffersDynamic;
        _internal.maxDescriptorSetStorageBuffers = MaxDescriptorSetStorageBuffers;
        _internal.maxDescriptorSetStorageBuffersDynamic = MaxDescriptorSetStorageBuffersDynamic;
        _internal.maxDescriptorSetSampledImages = MaxDescriptorSetSampledImages;
        _internal.maxDescriptorSetStorageImages = MaxDescriptorSetStorageImages;
        _internal.maxDescriptorSetInputAttachments = MaxDescriptorSetInputAttachments;
        _internal.maxVertexInputAttributes = MaxVertexInputAttributes;
        _internal.maxVertexInputBindings = MaxVertexInputBindings;
        _internal.maxVertexInputAttributeOffset = MaxVertexInputAttributeOffset;
        _internal.maxVertexInputBindingStride = MaxVertexInputBindingStride;
        _internal.maxVertexOutputComponents = MaxVertexOutputComponents;
        _internal.maxTessellationGenerationLevel = MaxTessellationGenerationLevel;
        _internal.maxTessellationPatchSize = MaxTessellationPatchSize;
        _internal.maxTessellationControlPerVertexInputComponents = MaxTessellationControlPerVertexInputComponents;
        _internal.maxTessellationControlPerVertexOutputComponents = MaxTessellationControlPerVertexOutputComponents;
        _internal.maxTessellationControlPerPatchOutputComponents = MaxTessellationControlPerPatchOutputComponents;
        _internal.maxTessellationControlTotalOutputComponents = MaxTessellationControlTotalOutputComponents;
        _internal.maxTessellationEvaluationInputComponents = MaxTessellationEvaluationInputComponents;
        _internal.maxTessellationEvaluationOutputComponents = MaxTessellationEvaluationOutputComponents;
        _internal.maxGeometryShaderInvocations = MaxGeometryShaderInvocations;
        _internal.maxGeometryInputComponents = MaxGeometryInputComponents;
        _internal.maxGeometryOutputComponents = MaxGeometryOutputComponents;
        _internal.maxGeometryOutputVertices = MaxGeometryOutputVertices;
        _internal.maxGeometryTotalOutputComponents = MaxGeometryTotalOutputComponents;
        _internal.maxFragmentInputComponents = MaxFragmentInputComponents;
        _internal.maxFragmentOutputAttachments = MaxFragmentOutputAttachments;
        _internal.maxFragmentDualSrcAttachments = MaxFragmentDualSrcAttachments;
        _internal.maxFragmentCombinedOutputResources = MaxFragmentCombinedOutputResources;
        _internal.maxComputeSharedMemorySize = MaxComputeSharedMemorySize;
        if(MaxComputeWorkGroupCount != null)
        {
            if (MaxComputeWorkGroupCount.Length > 3)
                throw new System.ArgumentOutOfRangeException(nameof(MaxComputeWorkGroupCount), "Array is out of bounds. Size should not be more than 3");

            NativeUtils.PrimitiveToFixedArray(_internal.maxComputeWorkGroupCount, 3, MaxComputeWorkGroupCount);
        }
        _internal.maxComputeWorkGroupInvocations = MaxComputeWorkGroupInvocations;
        if(MaxComputeWorkGroupSize != null)
        {
            if (MaxComputeWorkGroupSize.Length > 3)
                throw new System.ArgumentOutOfRangeException(nameof(MaxComputeWorkGroupSize), "Array is out of bounds. Size should not be more than 3");

            NativeUtils.PrimitiveToFixedArray(_internal.maxComputeWorkGroupSize, 3, MaxComputeWorkGroupSize);
        }
        _internal.subPixelPrecisionBits = SubPixelPrecisionBits;
        _internal.subTexelPrecisionBits = SubTexelPrecisionBits;
        _internal.mipmapPrecisionBits = MipmapPrecisionBits;
        _internal.maxDrawIndexedIndexValue = MaxDrawIndexedIndexValue;
        _internal.maxDrawIndirectCount = MaxDrawIndirectCount;
        _internal.maxSamplerLodBias = MaxSamplerLodBias;
        _internal.maxSamplerAnisotropy = MaxSamplerAnisotropy;
        _internal.maxViewports = MaxViewports;
        if(MaxViewportDimensions != null)
        {
            if (MaxViewportDimensions.Length > 2)
                throw new System.ArgumentOutOfRangeException(nameof(MaxViewportDimensions), "Array is out of bounds. Size should not be more than 2");

            NativeUtils.PrimitiveToFixedArray(_internal.maxViewportDimensions, 2, MaxViewportDimensions);
        }
        if(ViewportBoundsRange != null)
        {
            if (ViewportBoundsRange.Length > 2)
                throw new System.ArgumentOutOfRangeException(nameof(ViewportBoundsRange), "Array is out of bounds. Size should not be more than 2");

            NativeUtils.PrimitiveToFixedArray(_internal.viewportBoundsRange, 2, ViewportBoundsRange);
        }
        _internal.viewportSubPixelBits = ViewportSubPixelBits;
        _internal.minMemoryMapAlignment = MinMemoryMapAlignment;
        _internal.minTexelBufferOffsetAlignment = MinTexelBufferOffsetAlignment;
        _internal.minUniformBufferOffsetAlignment = MinUniformBufferOffsetAlignment;
        _internal.minStorageBufferOffsetAlignment = MinStorageBufferOffsetAlignment;
        _internal.minTexelOffset = MinTexelOffset;
        _internal.maxTexelOffset = MaxTexelOffset;
        _internal.minTexelGatherOffset = MinTexelGatherOffset;
        _internal.maxTexelGatherOffset = MaxTexelGatherOffset;
        _internal.minInterpolationOffset = MinInterpolationOffset;
        _internal.maxInterpolationOffset = MaxInterpolationOffset;
        _internal.subPixelInterpolationOffsetBits = SubPixelInterpolationOffsetBits;
        _internal.maxFramebufferWidth = MaxFramebufferWidth;
        _internal.maxFramebufferHeight = MaxFramebufferHeight;
        _internal.maxFramebufferLayers = MaxFramebufferLayers;
        _internal.framebufferColorSampleCounts = FramebufferColorSampleCounts;
        _internal.framebufferDepthSampleCounts = FramebufferDepthSampleCounts;
        _internal.framebufferStencilSampleCounts = FramebufferStencilSampleCounts;
        _internal.framebufferNoAttachmentsSampleCounts = FramebufferNoAttachmentsSampleCounts;
        _internal.maxColorAttachments = MaxColorAttachments;
        _internal.sampledImageColorSampleCounts = SampledImageColorSampleCounts;
        _internal.sampledImageIntegerSampleCounts = SampledImageIntegerSampleCounts;
        _internal.sampledImageDepthSampleCounts = SampledImageDepthSampleCounts;
        _internal.sampledImageStencilSampleCounts = SampledImageStencilSampleCounts;
        _internal.storageImageSampleCounts = StorageImageSampleCounts;
        _internal.maxSampleMaskWords = MaxSampleMaskWords;
        _internal.timestampComputeAndGraphics = TimestampComputeAndGraphics;
        _internal.timestampPeriod = TimestampPeriod;
        _internal.maxClipDistances = MaxClipDistances;
        _internal.maxCullDistances = MaxCullDistances;
        _internal.maxCombinedClipAndCullDistances = MaxCombinedClipAndCullDistances;
        _internal.discreteQueuePriorities = DiscreteQueuePriorities;
        if(PointSizeRange != null)
        {
            if (PointSizeRange.Length > 2)
                throw new System.ArgumentOutOfRangeException(nameof(PointSizeRange), "Array is out of bounds. Size should not be more than 2");

            NativeUtils.PrimitiveToFixedArray(_internal.pointSizeRange, 2, PointSizeRange);
        }
        if(LineWidthRange != null)
        {
            if (LineWidthRange.Length > 2)
                throw new System.ArgumentOutOfRangeException(nameof(LineWidthRange), "Array is out of bounds. Size should not be more than 2");

            NativeUtils.PrimitiveToFixedArray(_internal.lineWidthRange, 2, LineWidthRange);
        }
        _internal.pointSizeGranularity = PointSizeGranularity;
        _internal.lineWidthGranularity = LineWidthGranularity;
        _internal.strictLines = StrictLines;
        _internal.standardSampleLocations = StandardSampleLocations;
        _internal.optimalBufferCopyOffsetAlignment = OptimalBufferCopyOffsetAlignment;
        _internal.optimalBufferCopyRowPitchAlignment = OptimalBufferCopyRowPitchAlignment;
        _internal.nonCoherentAtomSize = NonCoherentAtomSize;
        return _internal;
    }

    public static implicit operator PhysicalDeviceLimits(AdamantiumVulkan.Core.Interop.VkPhysicalDeviceLimits p)
    {
        return new PhysicalDeviceLimits(p);
    }

}



