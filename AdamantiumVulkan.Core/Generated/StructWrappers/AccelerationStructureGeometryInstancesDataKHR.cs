// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class AccelerationStructureGeometryInstancesDataKHR : QBDisposableObject
{
    public AccelerationStructureGeometryInstancesDataKHR()
    {
    }

    public AccelerationStructureGeometryInstancesDataKHR(AdamantiumVulkan.Core.Interop.VkAccelerationStructureGeometryInstancesDataKHR _internal)
    {
        SType = _internal.sType;
        PNext = _internal.pNext;
        ArrayOfPointers = _internal.arrayOfPointers;
        Data = new DeviceOrHostAddressConstKHR(_internal.data);
    }

    public StructureType SType { get; set; }
    public void* PNext { get; set; }
    public VkBool32 ArrayOfPointers { get; set; }
    public DeviceOrHostAddressConstKHR Data { get; set; }

    public AdamantiumVulkan.Core.Interop.VkAccelerationStructureGeometryInstancesDataKHR ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkAccelerationStructureGeometryInstancesDataKHR();
        if (SType != default)
        {
            _internal.sType = SType;
        }
        _internal.pNext = PNext;
        if (ArrayOfPointers != (uint)default)
        {
            _internal.arrayOfPointers = ArrayOfPointers;
        }
        if (Data != default)
        {
            _internal.data = Data.ToNative();
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        Data?.Dispose();
    }


    public static implicit operator AccelerationStructureGeometryInstancesDataKHR(AdamantiumVulkan.Core.Interop.VkAccelerationStructureGeometryInstancesDataKHR a)
    {
        return new AccelerationStructureGeometryInstancesDataKHR(a);
    }

}



