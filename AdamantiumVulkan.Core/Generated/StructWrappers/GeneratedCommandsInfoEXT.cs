// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class GeneratedCommandsInfoEXT : QBDisposableObject
{
    public GeneratedCommandsInfoEXT()
    {
    }

    public GeneratedCommandsInfoEXT(AdamantiumVulkan.Core.Interop.VkGeneratedCommandsInfoEXT _internal)
    {
        SType = _internal.sType;
        PNext = _internal.pNext;
        ShaderStages = _internal.shaderStages;
        IndirectExecutionSet = new IndirectExecutionSetEXT(_internal.indirectExecutionSet);
        IndirectCommandsLayout = new IndirectCommandsLayoutEXT(_internal.indirectCommandsLayout);
        IndirectAddress = _internal.indirectAddress;
        IndirectAddressSize = _internal.indirectAddressSize;
        PreprocessAddress = _internal.preprocessAddress;
        PreprocessSize = _internal.preprocessSize;
        MaxSequenceCount = _internal.maxSequenceCount;
        SequenceCountAddress = _internal.sequenceCountAddress;
        MaxDrawCount = _internal.maxDrawCount;
    }

    public StructureType SType { get; set; }
    public void* PNext { get; set; }
    public VkShaderStageFlags ShaderStages { get; set; }
    public IndirectExecutionSetEXT IndirectExecutionSet { get; set; }
    public IndirectCommandsLayoutEXT IndirectCommandsLayout { get; set; }
    public VkDeviceAddress IndirectAddress { get; set; }
    public VkDeviceSize IndirectAddressSize { get; set; }
    public VkDeviceAddress PreprocessAddress { get; set; }
    public VkDeviceSize PreprocessSize { get; set; }
    public uint MaxSequenceCount { get; set; }
    public VkDeviceAddress SequenceCountAddress { get; set; }
    public uint MaxDrawCount { get; set; }

    public AdamantiumVulkan.Core.Interop.VkGeneratedCommandsInfoEXT ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkGeneratedCommandsInfoEXT();
        if (SType != default)
        {
            _internal.sType = SType;
        }
        _internal.pNext = PNext;
        if (ShaderStages != (uint)default)
        {
            _internal.shaderStages = ShaderStages;
        }
        if (IndirectExecutionSet != default)
        {
            _internal.indirectExecutionSet = IndirectExecutionSet;
        }
        if (IndirectCommandsLayout != default)
        {
            _internal.indirectCommandsLayout = IndirectCommandsLayout;
        }
        if (IndirectAddress != (ulong)default)
        {
            _internal.indirectAddress = IndirectAddress;
        }
        if (IndirectAddressSize != (ulong)default)
        {
            _internal.indirectAddressSize = IndirectAddressSize;
        }
        if (PreprocessAddress != (ulong)default)
        {
            _internal.preprocessAddress = PreprocessAddress;
        }
        if (PreprocessSize != (ulong)default)
        {
            _internal.preprocessSize = PreprocessSize;
        }
        if (MaxSequenceCount != default)
        {
            _internal.maxSequenceCount = MaxSequenceCount;
        }
        if (SequenceCountAddress != (ulong)default)
        {
            _internal.sequenceCountAddress = SequenceCountAddress;
        }
        if (MaxDrawCount != default)
        {
            _internal.maxDrawCount = MaxDrawCount;
        }
        return _internal;
    }

    public static implicit operator GeneratedCommandsInfoEXT(AdamantiumVulkan.Core.Interop.VkGeneratedCommandsInfoEXT g)
    {
        return new GeneratedCommandsInfoEXT(g);
    }

}



