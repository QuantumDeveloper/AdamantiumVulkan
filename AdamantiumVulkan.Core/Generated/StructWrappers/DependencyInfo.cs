// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class DependencyInfo : QBDisposableObject
{
    private NativeStruct<VkMemoryBarrier2> pMemoryBarriers;

    private NativeStruct<VkBufferMemoryBarrier2> pBufferMemoryBarriers;

    private NativeStruct<VkImageMemoryBarrier2> pImageMemoryBarriers;

    public DependencyInfo()
    {
    }

    public DependencyInfo(AdamantiumVulkan.Core.Interop.VkDependencyInfo _internal)
    {
        SType = _internal.sType;
        PNext = _internal.pNext;
        DependencyFlags = _internal.dependencyFlags;
        MemoryBarrierCount = _internal.memoryBarrierCount;
        PMemoryBarriers = new MemoryBarrier2(*_internal.pMemoryBarriers);
        NativeUtils.Free(_internal.pMemoryBarriers);
        BufferMemoryBarrierCount = _internal.bufferMemoryBarrierCount;
        PBufferMemoryBarriers = new BufferMemoryBarrier2(*_internal.pBufferMemoryBarriers);
        NativeUtils.Free(_internal.pBufferMemoryBarriers);
        ImageMemoryBarrierCount = _internal.imageMemoryBarrierCount;
        PImageMemoryBarriers = new ImageMemoryBarrier2(*_internal.pImageMemoryBarriers);
        NativeUtils.Free(_internal.pImageMemoryBarriers);
    }

    public StructureType SType { get; set; }
    public void* PNext { get; set; }
    public VkDependencyFlags DependencyFlags { get; set; }
    public uint MemoryBarrierCount { get; set; }
    public MemoryBarrier2 PMemoryBarriers { get; set; }
    public uint BufferMemoryBarrierCount { get; set; }
    public BufferMemoryBarrier2 PBufferMemoryBarriers { get; set; }
    public uint ImageMemoryBarrierCount { get; set; }
    public ImageMemoryBarrier2 PImageMemoryBarriers { get; set; }

    public AdamantiumVulkan.Core.Interop.VkDependencyInfo ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkDependencyInfo();
        _internal.sType = SType;
        _internal.pNext = PNext;
        _internal.dependencyFlags = DependencyFlags;
        _internal.memoryBarrierCount = MemoryBarrierCount;
        pMemoryBarriers.Dispose();
        if (PMemoryBarriers != null)
        {
            var struct0 = PMemoryBarriers.ToNative();
            pMemoryBarriers = new NativeStruct<VkMemoryBarrier2>(struct0);
            _internal.pMemoryBarriers = pMemoryBarriers.Handle;
        }
        _internal.bufferMemoryBarrierCount = BufferMemoryBarrierCount;
        pBufferMemoryBarriers.Dispose();
        if (PBufferMemoryBarriers != null)
        {
            var struct1 = PBufferMemoryBarriers.ToNative();
            pBufferMemoryBarriers = new NativeStruct<VkBufferMemoryBarrier2>(struct1);
            _internal.pBufferMemoryBarriers = pBufferMemoryBarriers.Handle;
        }
        _internal.imageMemoryBarrierCount = ImageMemoryBarrierCount;
        pImageMemoryBarriers.Dispose();
        if (PImageMemoryBarriers != null)
        {
            var struct2 = PImageMemoryBarriers.ToNative();
            pImageMemoryBarriers = new NativeStruct<VkImageMemoryBarrier2>(struct2);
            _internal.pImageMemoryBarriers = pImageMemoryBarriers.Handle;
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        pMemoryBarriers.Dispose();
        pBufferMemoryBarriers.Dispose();
        pImageMemoryBarriers.Dispose();
    }


    public static implicit operator DependencyInfo(AdamantiumVulkan.Core.Interop.VkDependencyInfo d)
    {
        return new DependencyInfo(d);
    }

}



