// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class RenderingAttachmentInfo : QBDisposableObject
{
    public RenderingAttachmentInfo()
    {
    }

    public RenderingAttachmentInfo(AdamantiumVulkan.Core.Interop.VkRenderingAttachmentInfo _internal)
    {
        SType = _internal.sType;
        PNext = _internal.pNext;
        ImageView = new ImageView(_internal.imageView);
        ImageLayout = _internal.imageLayout;
        ResolveMode = _internal.resolveMode;
        ResolveImageView = new ImageView(_internal.resolveImageView);
        ResolveImageLayout = _internal.resolveImageLayout;
        LoadOp = _internal.loadOp;
        StoreOp = _internal.storeOp;
        ClearValue = new ClearValue(_internal.clearValue);
    }

    public StructureType SType { get; set; }
    public void* PNext { get; set; }
    public ImageView ImageView { get; set; }
    public ImageLayout ImageLayout { get; set; }
    public ResolveModeFlagBits ResolveMode { get; set; }
    public ImageView ResolveImageView { get; set; }
    public ImageLayout ResolveImageLayout { get; set; }
    public AttachmentLoadOp LoadOp { get; set; }
    public AttachmentStoreOp StoreOp { get; set; }
    public ClearValue ClearValue { get; set; }

    public AdamantiumVulkan.Core.Interop.VkRenderingAttachmentInfo ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkRenderingAttachmentInfo();
        if (SType != default)
        {
            _internal.sType = SType;
        }
        _internal.pNext = PNext;
        if (ImageView != default)
        {
            _internal.imageView = ImageView;
        }
        if (ImageLayout != default)
        {
            _internal.imageLayout = ImageLayout;
        }
        if (ResolveMode != default)
        {
            _internal.resolveMode = ResolveMode;
        }
        if (ResolveImageView != default)
        {
            _internal.resolveImageView = ResolveImageView;
        }
        if (ResolveImageLayout != default)
        {
            _internal.resolveImageLayout = ResolveImageLayout;
        }
        if (LoadOp != default)
        {
            _internal.loadOp = LoadOp;
        }
        if (StoreOp != default)
        {
            _internal.storeOp = StoreOp;
        }
        if (ClearValue != default)
        {
            _internal.clearValue = ClearValue.ToNative();
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        ClearValue?.Dispose();
    }


    public static implicit operator RenderingAttachmentInfo(AdamantiumVulkan.Core.Interop.VkRenderingAttachmentInfo r)
    {
        return new RenderingAttachmentInfo(r);
    }

}



