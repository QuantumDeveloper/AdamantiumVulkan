// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class ResolveImageInfo2 : QBDisposableObject
{
    private NativeStruct<VkImageResolve2> pRegions;

    public ResolveImageInfo2()
    {
    }

    public ResolveImageInfo2(AdamantiumVulkan.Core.Interop.VkResolveImageInfo2 _internal)
    {
        SType = _internal.sType;
        PNext = _internal.pNext;
        SrcImage = new Image(_internal.srcImage);
        SrcImageLayout = _internal.srcImageLayout;
        DstImage = new Image(_internal.dstImage);
        DstImageLayout = _internal.dstImageLayout;
        RegionCount = _internal.regionCount;
        PRegions = new ImageResolve2(*_internal.pRegions);
        NativeUtils.Free(_internal.pRegions);
    }

    public StructureType SType { get; set; }
    public void* PNext { get; set; }
    public Image SrcImage { get; set; }
    public ImageLayout SrcImageLayout { get; set; }
    public Image DstImage { get; set; }
    public ImageLayout DstImageLayout { get; set; }
    public uint RegionCount { get; set; }
    public ImageResolve2 PRegions { get; set; }

    public AdamantiumVulkan.Core.Interop.VkResolveImageInfo2 ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkResolveImageInfo2();
        _internal.sType = SType;
        _internal.pNext = PNext;
        _internal.srcImage = SrcImage;
        _internal.srcImageLayout = SrcImageLayout;
        _internal.dstImage = DstImage;
        _internal.dstImageLayout = DstImageLayout;
        _internal.regionCount = RegionCount;
        pRegions.Dispose();
        if (PRegions != null)
        {
            var struct0 = PRegions.ToNative();
            pRegions = new NativeStruct<VkImageResolve2>(struct0);
            _internal.pRegions = pRegions.Handle;
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        pRegions.Dispose();
    }


    public static implicit operator ResolveImageInfo2(AdamantiumVulkan.Core.Interop.VkResolveImageInfo2 r)
    {
        return new ResolveImageInfo2(r);
    }

}



