// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class AccelerationStructureGeometryLinearSweptSpheresDataNV : QBDisposableObject
{
    public AccelerationStructureGeometryLinearSweptSpheresDataNV()
    {
    }

    public AccelerationStructureGeometryLinearSweptSpheresDataNV(AdamantiumVulkan.Core.Interop.VkAccelerationStructureGeometryLinearSweptSpheresDataNV _internal)
    {
        SType = _internal.sType;
        PNext = _internal.pNext;
        VertexFormat = _internal.vertexFormat;
        VertexData = new DeviceOrHostAddressConstKHR(_internal.vertexData);
        VertexStride = _internal.vertexStride;
        RadiusFormat = _internal.radiusFormat;
        RadiusData = new DeviceOrHostAddressConstKHR(_internal.radiusData);
        RadiusStride = _internal.radiusStride;
        IndexType = _internal.indexType;
        IndexData = new DeviceOrHostAddressConstKHR(_internal.indexData);
        IndexStride = _internal.indexStride;
        IndexingMode = _internal.indexingMode;
        EndCapsMode = _internal.endCapsMode;
    }

    public StructureType SType { get; set; }
    public void* PNext { get; set; }
    public Format VertexFormat { get; set; }
    public DeviceOrHostAddressConstKHR VertexData { get; set; }
    public VkDeviceSize VertexStride { get; set; }
    public Format RadiusFormat { get; set; }
    public DeviceOrHostAddressConstKHR RadiusData { get; set; }
    public VkDeviceSize RadiusStride { get; set; }
    public IndexType IndexType { get; set; }
    public DeviceOrHostAddressConstKHR IndexData { get; set; }
    public VkDeviceSize IndexStride { get; set; }
    public RayTracingLssIndexingModeNV IndexingMode { get; set; }
    public RayTracingLssPrimitiveEndCapsModeNV EndCapsMode { get; set; }

    public AdamantiumVulkan.Core.Interop.VkAccelerationStructureGeometryLinearSweptSpheresDataNV ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkAccelerationStructureGeometryLinearSweptSpheresDataNV();
        if (SType != default)
        {
            _internal.sType = SType;
        }
        _internal.pNext = PNext;
        if (VertexFormat != default)
        {
            _internal.vertexFormat = VertexFormat;
        }
        if (VertexData != default)
        {
            _internal.vertexData = VertexData.ToNative();
        }
        if (VertexStride != (ulong)default)
        {
            _internal.vertexStride = VertexStride;
        }
        if (RadiusFormat != default)
        {
            _internal.radiusFormat = RadiusFormat;
        }
        if (RadiusData != default)
        {
            _internal.radiusData = RadiusData.ToNative();
        }
        if (RadiusStride != (ulong)default)
        {
            _internal.radiusStride = RadiusStride;
        }
        if (IndexType != default)
        {
            _internal.indexType = IndexType;
        }
        if (IndexData != default)
        {
            _internal.indexData = IndexData.ToNative();
        }
        if (IndexStride != (ulong)default)
        {
            _internal.indexStride = IndexStride;
        }
        if (IndexingMode != default)
        {
            _internal.indexingMode = IndexingMode;
        }
        if (EndCapsMode != default)
        {
            _internal.endCapsMode = EndCapsMode;
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        VertexData?.Dispose();
        RadiusData?.Dispose();
        IndexData?.Dispose();
    }


    public static implicit operator AccelerationStructureGeometryLinearSweptSpheresDataNV(AdamantiumVulkan.Core.Interop.VkAccelerationStructureGeometryLinearSweptSpheresDataNV a)
    {
        return new AccelerationStructureGeometryLinearSweptSpheresDataNV(a);
    }

}



