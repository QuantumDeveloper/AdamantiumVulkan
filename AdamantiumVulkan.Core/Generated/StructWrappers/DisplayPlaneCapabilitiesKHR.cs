// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class DisplayPlaneCapabilitiesKHR
{
    public DisplayPlaneCapabilitiesKHR()
    {
    }

    public DisplayPlaneCapabilitiesKHR(AdamantiumVulkan.Core.Interop.VkDisplayPlaneCapabilitiesKHR _internal)
    {
        SupportedAlpha = _internal.supportedAlpha;
        MinSrcPosition = new Offset2D(_internal.minSrcPosition);
        MaxSrcPosition = new Offset2D(_internal.maxSrcPosition);
        MinSrcExtent = new Extent2D(_internal.minSrcExtent);
        MaxSrcExtent = new Extent2D(_internal.maxSrcExtent);
        MinDstPosition = new Offset2D(_internal.minDstPosition);
        MaxDstPosition = new Offset2D(_internal.maxDstPosition);
        MinDstExtent = new Extent2D(_internal.minDstExtent);
        MaxDstExtent = new Extent2D(_internal.maxDstExtent);
    }

    public VkDisplayPlaneAlphaFlagsKHR SupportedAlpha { get; set; }
    public Offset2D MinSrcPosition { get; set; }
    public Offset2D MaxSrcPosition { get; set; }
    public Extent2D MinSrcExtent { get; set; }
    public Extent2D MaxSrcExtent { get; set; }
    public Offset2D MinDstPosition { get; set; }
    public Offset2D MaxDstPosition { get; set; }
    public Extent2D MinDstExtent { get; set; }
    public Extent2D MaxDstExtent { get; set; }

    public AdamantiumVulkan.Core.Interop.VkDisplayPlaneCapabilitiesKHR ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkDisplayPlaneCapabilitiesKHR();
        _internal.supportedAlpha = SupportedAlpha;
        if (MinSrcPosition != null)
        {
            _internal.minSrcPosition = MinSrcPosition.ToNative();
        }
        if (MaxSrcPosition != null)
        {
            _internal.maxSrcPosition = MaxSrcPosition.ToNative();
        }
        if (MinSrcExtent != null)
        {
            _internal.minSrcExtent = MinSrcExtent.ToNative();
        }
        if (MaxSrcExtent != null)
        {
            _internal.maxSrcExtent = MaxSrcExtent.ToNative();
        }
        if (MinDstPosition != null)
        {
            _internal.minDstPosition = MinDstPosition.ToNative();
        }
        if (MaxDstPosition != null)
        {
            _internal.maxDstPosition = MaxDstPosition.ToNative();
        }
        if (MinDstExtent != null)
        {
            _internal.minDstExtent = MinDstExtent.ToNative();
        }
        if (MaxDstExtent != null)
        {
            _internal.maxDstExtent = MaxDstExtent.ToNative();
        }
        return _internal;
    }

    public static implicit operator DisplayPlaneCapabilitiesKHR(AdamantiumVulkan.Core.Interop.VkDisplayPlaneCapabilitiesKHR d)
    {
        return new DisplayPlaneCapabilitiesKHR(d);
    }

}



