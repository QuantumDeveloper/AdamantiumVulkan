// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class AttachmentSampleCountInfoAMD : QBDisposableObject
{
    private NativeStruct<AdamantiumVulkan.Core.SampleCountFlagBits> _pColorAttachmentSamples;

    public AttachmentSampleCountInfoAMD()
    {
    }

    public AttachmentSampleCountInfoAMD(AdamantiumVulkan.Core.Interop.VkAttachmentSampleCountInfoAMD _internal)
    {
        SType = _internal.sType;
        PNext = _internal.pNext;
        ColorAttachmentCount = _internal.colorAttachmentCount;
        PColorAttachmentSamples = *_internal.pColorAttachmentSamples;
        DepthStencilAttachmentSamples = _internal.depthStencilAttachmentSamples;
    }

    public StructureType SType { get; set; }
    public void* PNext { get; set; }
    public uint ColorAttachmentCount { get; set; }
    public SampleCountFlagBits? PColorAttachmentSamples { get; set; }
    public SampleCountFlagBits DepthStencilAttachmentSamples { get; set; }

    public AdamantiumVulkan.Core.Interop.VkAttachmentSampleCountInfoAMD ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkAttachmentSampleCountInfoAMD();
        _internal.sType = SType;
        _internal.pNext = PNext;
        _internal.colorAttachmentCount = ColorAttachmentCount;
        _pColorAttachmentSamples.Dispose();
        if (PColorAttachmentSamples.HasValue)
        {
            _pColorAttachmentSamples = new NativeStruct<AdamantiumVulkan.Core.SampleCountFlagBits>(PColorAttachmentSamples.Value);
            _internal.pColorAttachmentSamples = _pColorAttachmentSamples.Handle;
        }
        _internal.depthStencilAttachmentSamples = DepthStencilAttachmentSamples;
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        _pColorAttachmentSamples.Dispose();
    }


    public static implicit operator AttachmentSampleCountInfoAMD(AdamantiumVulkan.Core.Interop.VkAttachmentSampleCountInfoAMD a)
    {
        return new AttachmentSampleCountInfoAMD(a);
    }

}



