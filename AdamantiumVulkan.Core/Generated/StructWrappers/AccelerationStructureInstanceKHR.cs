// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class AccelerationStructureInstanceKHR : QBDisposableObject
{
    public AccelerationStructureInstanceKHR()
    {
    }

    public AccelerationStructureInstanceKHR(AdamantiumVulkan.Core.Interop.VkAccelerationStructureInstanceKHR _internal)
    {
        Transform = new TransformMatrixKHR(_internal.transform);
        InstanceCustomIndex = _internal.instanceCustomIndex;
        Mask = _internal.mask;
        InstanceShaderBindingTableRecordOffset = _internal.instanceShaderBindingTableRecordOffset;
        Flags = _internal.flags;
        AccelerationStructureReference = _internal.accelerationStructureReference;
    }

    public TransformMatrixKHR Transform { get; set; }
    public uint InstanceCustomIndex { get; set; }
    public uint Mask { get; set; }
    public uint InstanceShaderBindingTableRecordOffset { get; set; }
    public GeometryInstanceFlagBitsKHR Flags { get; set; }
    public ulong AccelerationStructureReference { get; set; }

    public AdamantiumVulkan.Core.Interop.VkAccelerationStructureInstanceKHR ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkAccelerationStructureInstanceKHR();
        if (Transform != default)
        {
            _internal.transform = Transform.ToNative();
        }
        if (InstanceCustomIndex != default)
        {
            _internal.instanceCustomIndex = InstanceCustomIndex;
        }
        if (Mask != default)
        {
            _internal.mask = Mask;
        }
        if (InstanceShaderBindingTableRecordOffset != default)
        {
            _internal.instanceShaderBindingTableRecordOffset = InstanceShaderBindingTableRecordOffset;
        }
        if (Flags != default)
        {
            _internal.flags = Flags;
        }
        if (AccelerationStructureReference != default)
        {
            _internal.accelerationStructureReference = AccelerationStructureReference;
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        Transform?.Dispose();
    }


    public static implicit operator AccelerationStructureInstanceKHR(AdamantiumVulkan.Core.Interop.VkAccelerationStructureInstanceKHR a)
    {
        return new AccelerationStructureInstanceKHR(a);
    }

}



