// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class PhysicalDeviceExtendedDynamicState3FeaturesEXT : QBDisposableObject
{
    public PhysicalDeviceExtendedDynamicState3FeaturesEXT()
    {
    }

    public PhysicalDeviceExtendedDynamicState3FeaturesEXT(AdamantiumVulkan.Core.Interop.VkPhysicalDeviceExtendedDynamicState3FeaturesEXT _internal)
    {
        SType = _internal.sType;
        PNext = _internal.pNext;
        ExtendedDynamicState3TessellationDomainOrigin = _internal.extendedDynamicState3TessellationDomainOrigin;
        ExtendedDynamicState3DepthClampEnable = _internal.extendedDynamicState3DepthClampEnable;
        ExtendedDynamicState3PolygonMode = _internal.extendedDynamicState3PolygonMode;
        ExtendedDynamicState3RasterizationSamples = _internal.extendedDynamicState3RasterizationSamples;
        ExtendedDynamicState3SampleMask = _internal.extendedDynamicState3SampleMask;
        ExtendedDynamicState3AlphaToCoverageEnable = _internal.extendedDynamicState3AlphaToCoverageEnable;
        ExtendedDynamicState3AlphaToOneEnable = _internal.extendedDynamicState3AlphaToOneEnable;
        ExtendedDynamicState3LogicOpEnable = _internal.extendedDynamicState3LogicOpEnable;
        ExtendedDynamicState3ColorBlendEnable = _internal.extendedDynamicState3ColorBlendEnable;
        ExtendedDynamicState3ColorBlendEquation = _internal.extendedDynamicState3ColorBlendEquation;
        ExtendedDynamicState3ColorWriteMask = _internal.extendedDynamicState3ColorWriteMask;
        ExtendedDynamicState3RasterizationStream = _internal.extendedDynamicState3RasterizationStream;
        ExtendedDynamicState3ConservativeRasterizationMode = _internal.extendedDynamicState3ConservativeRasterizationMode;
        ExtendedDynamicState3ExtraPrimitiveOverestimationSize = _internal.extendedDynamicState3ExtraPrimitiveOverestimationSize;
        ExtendedDynamicState3DepthClipEnable = _internal.extendedDynamicState3DepthClipEnable;
        ExtendedDynamicState3SampleLocationsEnable = _internal.extendedDynamicState3SampleLocationsEnable;
        ExtendedDynamicState3ColorBlendAdvanced = _internal.extendedDynamicState3ColorBlendAdvanced;
        ExtendedDynamicState3ProvokingVertexMode = _internal.extendedDynamicState3ProvokingVertexMode;
        ExtendedDynamicState3LineRasterizationMode = _internal.extendedDynamicState3LineRasterizationMode;
        ExtendedDynamicState3LineStippleEnable = _internal.extendedDynamicState3LineStippleEnable;
        ExtendedDynamicState3DepthClipNegativeOneToOne = _internal.extendedDynamicState3DepthClipNegativeOneToOne;
        ExtendedDynamicState3ViewportWScalingEnable = _internal.extendedDynamicState3ViewportWScalingEnable;
        ExtendedDynamicState3ViewportSwizzle = _internal.extendedDynamicState3ViewportSwizzle;
        ExtendedDynamicState3CoverageToColorEnable = _internal.extendedDynamicState3CoverageToColorEnable;
        ExtendedDynamicState3CoverageToColorLocation = _internal.extendedDynamicState3CoverageToColorLocation;
        ExtendedDynamicState3CoverageModulationMode = _internal.extendedDynamicState3CoverageModulationMode;
        ExtendedDynamicState3CoverageModulationTableEnable = _internal.extendedDynamicState3CoverageModulationTableEnable;
        ExtendedDynamicState3CoverageModulationTable = _internal.extendedDynamicState3CoverageModulationTable;
        ExtendedDynamicState3CoverageReductionMode = _internal.extendedDynamicState3CoverageReductionMode;
        ExtendedDynamicState3RepresentativeFragmentTestEnable = _internal.extendedDynamicState3RepresentativeFragmentTestEnable;
        ExtendedDynamicState3ShadingRateImageEnable = _internal.extendedDynamicState3ShadingRateImageEnable;
    }

    public StructureType SType { get; set; }
    public void* PNext { get; set; }
    public VkBool32 ExtendedDynamicState3TessellationDomainOrigin { get; set; }
    public VkBool32 ExtendedDynamicState3DepthClampEnable { get; set; }
    public VkBool32 ExtendedDynamicState3PolygonMode { get; set; }
    public VkBool32 ExtendedDynamicState3RasterizationSamples { get; set; }
    public VkBool32 ExtendedDynamicState3SampleMask { get; set; }
    public VkBool32 ExtendedDynamicState3AlphaToCoverageEnable { get; set; }
    public VkBool32 ExtendedDynamicState3AlphaToOneEnable { get; set; }
    public VkBool32 ExtendedDynamicState3LogicOpEnable { get; set; }
    public VkBool32 ExtendedDynamicState3ColorBlendEnable { get; set; }
    public VkBool32 ExtendedDynamicState3ColorBlendEquation { get; set; }
    public VkBool32 ExtendedDynamicState3ColorWriteMask { get; set; }
    public VkBool32 ExtendedDynamicState3RasterizationStream { get; set; }
    public VkBool32 ExtendedDynamicState3ConservativeRasterizationMode { get; set; }
    public VkBool32 ExtendedDynamicState3ExtraPrimitiveOverestimationSize { get; set; }
    public VkBool32 ExtendedDynamicState3DepthClipEnable { get; set; }
    public VkBool32 ExtendedDynamicState3SampleLocationsEnable { get; set; }
    public VkBool32 ExtendedDynamicState3ColorBlendAdvanced { get; set; }
    public VkBool32 ExtendedDynamicState3ProvokingVertexMode { get; set; }
    public VkBool32 ExtendedDynamicState3LineRasterizationMode { get; set; }
    public VkBool32 ExtendedDynamicState3LineStippleEnable { get; set; }
    public VkBool32 ExtendedDynamicState3DepthClipNegativeOneToOne { get; set; }
    public VkBool32 ExtendedDynamicState3ViewportWScalingEnable { get; set; }
    public VkBool32 ExtendedDynamicState3ViewportSwizzle { get; set; }
    public VkBool32 ExtendedDynamicState3CoverageToColorEnable { get; set; }
    public VkBool32 ExtendedDynamicState3CoverageToColorLocation { get; set; }
    public VkBool32 ExtendedDynamicState3CoverageModulationMode { get; set; }
    public VkBool32 ExtendedDynamicState3CoverageModulationTableEnable { get; set; }
    public VkBool32 ExtendedDynamicState3CoverageModulationTable { get; set; }
    public VkBool32 ExtendedDynamicState3CoverageReductionMode { get; set; }
    public VkBool32 ExtendedDynamicState3RepresentativeFragmentTestEnable { get; set; }
    public VkBool32 ExtendedDynamicState3ShadingRateImageEnable { get; set; }

    public AdamantiumVulkan.Core.Interop.VkPhysicalDeviceExtendedDynamicState3FeaturesEXT ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkPhysicalDeviceExtendedDynamicState3FeaturesEXT();
        _internal.sType = SType;
        _internal.pNext = PNext;
        _internal.extendedDynamicState3TessellationDomainOrigin = ExtendedDynamicState3TessellationDomainOrigin;
        _internal.extendedDynamicState3DepthClampEnable = ExtendedDynamicState3DepthClampEnable;
        _internal.extendedDynamicState3PolygonMode = ExtendedDynamicState3PolygonMode;
        _internal.extendedDynamicState3RasterizationSamples = ExtendedDynamicState3RasterizationSamples;
        _internal.extendedDynamicState3SampleMask = ExtendedDynamicState3SampleMask;
        _internal.extendedDynamicState3AlphaToCoverageEnable = ExtendedDynamicState3AlphaToCoverageEnable;
        _internal.extendedDynamicState3AlphaToOneEnable = ExtendedDynamicState3AlphaToOneEnable;
        _internal.extendedDynamicState3LogicOpEnable = ExtendedDynamicState3LogicOpEnable;
        _internal.extendedDynamicState3ColorBlendEnable = ExtendedDynamicState3ColorBlendEnable;
        _internal.extendedDynamicState3ColorBlendEquation = ExtendedDynamicState3ColorBlendEquation;
        _internal.extendedDynamicState3ColorWriteMask = ExtendedDynamicState3ColorWriteMask;
        _internal.extendedDynamicState3RasterizationStream = ExtendedDynamicState3RasterizationStream;
        _internal.extendedDynamicState3ConservativeRasterizationMode = ExtendedDynamicState3ConservativeRasterizationMode;
        _internal.extendedDynamicState3ExtraPrimitiveOverestimationSize = ExtendedDynamicState3ExtraPrimitiveOverestimationSize;
        _internal.extendedDynamicState3DepthClipEnable = ExtendedDynamicState3DepthClipEnable;
        _internal.extendedDynamicState3SampleLocationsEnable = ExtendedDynamicState3SampleLocationsEnable;
        _internal.extendedDynamicState3ColorBlendAdvanced = ExtendedDynamicState3ColorBlendAdvanced;
        _internal.extendedDynamicState3ProvokingVertexMode = ExtendedDynamicState3ProvokingVertexMode;
        _internal.extendedDynamicState3LineRasterizationMode = ExtendedDynamicState3LineRasterizationMode;
        _internal.extendedDynamicState3LineStippleEnable = ExtendedDynamicState3LineStippleEnable;
        _internal.extendedDynamicState3DepthClipNegativeOneToOne = ExtendedDynamicState3DepthClipNegativeOneToOne;
        _internal.extendedDynamicState3ViewportWScalingEnable = ExtendedDynamicState3ViewportWScalingEnable;
        _internal.extendedDynamicState3ViewportSwizzle = ExtendedDynamicState3ViewportSwizzle;
        _internal.extendedDynamicState3CoverageToColorEnable = ExtendedDynamicState3CoverageToColorEnable;
        _internal.extendedDynamicState3CoverageToColorLocation = ExtendedDynamicState3CoverageToColorLocation;
        _internal.extendedDynamicState3CoverageModulationMode = ExtendedDynamicState3CoverageModulationMode;
        _internal.extendedDynamicState3CoverageModulationTableEnable = ExtendedDynamicState3CoverageModulationTableEnable;
        _internal.extendedDynamicState3CoverageModulationTable = ExtendedDynamicState3CoverageModulationTable;
        _internal.extendedDynamicState3CoverageReductionMode = ExtendedDynamicState3CoverageReductionMode;
        _internal.extendedDynamicState3RepresentativeFragmentTestEnable = ExtendedDynamicState3RepresentativeFragmentTestEnable;
        _internal.extendedDynamicState3ShadingRateImageEnable = ExtendedDynamicState3ShadingRateImageEnable;
        return _internal;
    }

    public static implicit operator PhysicalDeviceExtendedDynamicState3FeaturesEXT(AdamantiumVulkan.Core.Interop.VkPhysicalDeviceExtendedDynamicState3FeaturesEXT p)
    {
        return new PhysicalDeviceExtendedDynamicState3FeaturesEXT(p);
    }

}



