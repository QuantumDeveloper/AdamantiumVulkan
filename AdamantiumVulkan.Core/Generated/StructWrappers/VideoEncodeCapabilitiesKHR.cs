// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class VideoEncodeCapabilitiesKHR : QBDisposableObject
{
    public VideoEncodeCapabilitiesKHR()
    {
    }

    public VideoEncodeCapabilitiesKHR(AdamantiumVulkan.Core.Interop.VkVideoEncodeCapabilitiesKHR _internal)
    {
        SType = _internal.sType;
        PNext = _internal.pNext;
        Flags = _internal.flags;
        RateControlModes = _internal.rateControlModes;
        MaxRateControlLayers = _internal.maxRateControlLayers;
        MaxBitrate = _internal.maxBitrate;
        MaxQualityLevels = _internal.maxQualityLevels;
        EncodeInputPictureGranularity = new Extent2D(_internal.encodeInputPictureGranularity);
        SupportedEncodeFeedbackFlags = _internal.supportedEncodeFeedbackFlags;
    }

    public StructureType SType { get; set; }
    public void* PNext { get; set; }
    public VkVideoEncodeCapabilityFlagsKHR Flags { get; set; }
    public VkVideoEncodeRateControlModeFlagsKHR RateControlModes { get; set; }
    public uint MaxRateControlLayers { get; set; }
    public ulong MaxBitrate { get; set; }
    public uint MaxQualityLevels { get; set; }
    public Extent2D EncodeInputPictureGranularity { get; set; }
    public VkVideoEncodeFeedbackFlagsKHR SupportedEncodeFeedbackFlags { get; set; }

    public AdamantiumVulkan.Core.Interop.VkVideoEncodeCapabilitiesKHR ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkVideoEncodeCapabilitiesKHR();
        if (SType != default)
        {
            _internal.sType = SType;
        }
        _internal.pNext = PNext;
        if (Flags != (uint)default)
        {
            _internal.flags = Flags;
        }
        if (RateControlModes != (uint)default)
        {
            _internal.rateControlModes = RateControlModes;
        }
        if (MaxRateControlLayers != default)
        {
            _internal.maxRateControlLayers = MaxRateControlLayers;
        }
        if (MaxBitrate != default)
        {
            _internal.maxBitrate = MaxBitrate;
        }
        if (MaxQualityLevels != default)
        {
            _internal.maxQualityLevels = MaxQualityLevels;
        }
        if (EncodeInputPictureGranularity != default)
        {
            _internal.encodeInputPictureGranularity = EncodeInputPictureGranularity.ToNative();
        }
        if (SupportedEncodeFeedbackFlags != (uint)default)
        {
            _internal.supportedEncodeFeedbackFlags = SupportedEncodeFeedbackFlags;
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        EncodeInputPictureGranularity?.Dispose();
    }


    public static implicit operator VideoEncodeCapabilitiesKHR(AdamantiumVulkan.Core.Interop.VkVideoEncodeCapabilitiesKHR v)
    {
        return new VideoEncodeCapabilitiesKHR(v);
    }

}



