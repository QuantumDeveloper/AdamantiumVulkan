// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class RenderPassSampleLocationsBeginInfoEXT : QBDisposableObject
{
    private NativeStruct<VkAttachmentSampleLocationsEXT> pAttachmentInitialSampleLocations;

    private NativeStruct<VkSubpassSampleLocationsEXT> pPostSubpassSampleLocations;

    public RenderPassSampleLocationsBeginInfoEXT()
    {
    }

    public RenderPassSampleLocationsBeginInfoEXT(AdamantiumVulkan.Core.Interop.VkRenderPassSampleLocationsBeginInfoEXT _internal)
    {
        PNext = _internal.pNext;
        AttachmentInitialSampleLocationsCount = _internal.attachmentInitialSampleLocationsCount;
        PAttachmentInitialSampleLocations = new AttachmentSampleLocationsEXT(*_internal.pAttachmentInitialSampleLocations);
        NativeUtils.Free(_internal.pAttachmentInitialSampleLocations);
        PostSubpassSampleLocationsCount = _internal.postSubpassSampleLocationsCount;
        PostSubpassSampleLocations = new SubpassSampleLocationsEXT(*_internal.pPostSubpassSampleLocations);
        NativeUtils.Free(_internal.pPostSubpassSampleLocations);
    }

    public StructureType SType => StructureType.RenderPassSampleLocationsBeginInfoExt;
    public void* PNext { get; set; }
    public uint AttachmentInitialSampleLocationsCount { get; set; }
    public AttachmentSampleLocationsEXT PAttachmentInitialSampleLocations { get; set; }
    public uint PostSubpassSampleLocationsCount { get; set; }
    public SubpassSampleLocationsEXT PostSubpassSampleLocations { get; set; }

    public AdamantiumVulkan.Core.Interop.VkRenderPassSampleLocationsBeginInfoEXT ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkRenderPassSampleLocationsBeginInfoEXT();
        _internal.sType = SType;
        _internal.pNext = PNext;
        _internal.attachmentInitialSampleLocationsCount = AttachmentInitialSampleLocationsCount;
        pAttachmentInitialSampleLocations.Dispose();
        if (PAttachmentInitialSampleLocations != null)
        {
            var struct0 = PAttachmentInitialSampleLocations.ToNative();
            pAttachmentInitialSampleLocations = new NativeStruct<VkAttachmentSampleLocationsEXT>(struct0);
            _internal.pAttachmentInitialSampleLocations = pAttachmentInitialSampleLocations.Handle;
        }
        _internal.postSubpassSampleLocationsCount = PostSubpassSampleLocationsCount;
        pPostSubpassSampleLocations.Dispose();
        if (PostSubpassSampleLocations != null)
        {
            var struct1 = PostSubpassSampleLocations.ToNative();
            pPostSubpassSampleLocations = new NativeStruct<VkSubpassSampleLocationsEXT>(struct1);
            _internal.pPostSubpassSampleLocations = pPostSubpassSampleLocations.Handle;
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        pAttachmentInitialSampleLocations.Dispose();
        pPostSubpassSampleLocations.Dispose();
    }


    public static implicit operator RenderPassSampleLocationsBeginInfoEXT(AdamantiumVulkan.Core.Interop.VkRenderPassSampleLocationsBeginInfoEXT r)
    {
        return new RenderPassSampleLocationsBeginInfoEXT(r);
    }

}



