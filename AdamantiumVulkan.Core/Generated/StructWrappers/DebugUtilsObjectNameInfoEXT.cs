// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class DebugUtilsObjectNameInfoEXT : QBDisposableObject
{
    private MarshaledString _pObjectName;

    public DebugUtilsObjectNameInfoEXT()
    {
    }

    public DebugUtilsObjectNameInfoEXT(AdamantiumVulkan.Core.Interop.VkDebugUtilsObjectNameInfoEXT _internal)
    {
        PNext = _internal.pNext;
        ObjectType = _internal.objectType;
        ObjectHandle = _internal.objectHandle;
        PObjectName = new string(_internal.pObjectName);
    }

    public StructureType SType => StructureType.DebugUtilsObjectNameInfoExt;
    public void* PNext { get; set; }
    public ObjectType ObjectType { get; set; }
    public ulong ObjectHandle { get; set; }
    public string PObjectName { get; set; }

    public AdamantiumVulkan.Core.Interop.VkDebugUtilsObjectNameInfoEXT ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkDebugUtilsObjectNameInfoEXT();
        _internal.sType = SType;
        _internal.pNext = PNext;
        _internal.objectType = ObjectType;
        _internal.objectHandle = ObjectHandle;
        _pObjectName.Dispose();
        if (PObjectName != null)
        {
            _pObjectName = new MarshaledString(PObjectName, false);
            _internal.pObjectName = (sbyte*)_pObjectName;
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        _pObjectName.Dispose();
    }


    public static implicit operator DebugUtilsObjectNameInfoEXT(AdamantiumVulkan.Core.Interop.VkDebugUtilsObjectNameInfoEXT d)
    {
        return new DebugUtilsObjectNameInfoEXT(d);
    }

}



