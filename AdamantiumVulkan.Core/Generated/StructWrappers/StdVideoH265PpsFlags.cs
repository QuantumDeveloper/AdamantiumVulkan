// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Interop;

namespace AdamantiumVulkan;

public unsafe partial class StdVideoH265PpsFlags
{
    public StdVideoH265PpsFlags()
    {
    }

    public StdVideoH265PpsFlags(AdamantiumVulkan.Interop.StdVideoH265PpsFlags _internal)
    {
        Dependent_slice_segments_enabled_flag = _internal.dependent_slice_segments_enabled_flag;
        Output_flag_present_flag = _internal.output_flag_present_flag;
        Sign_data_hiding_enabled_flag = _internal.sign_data_hiding_enabled_flag;
        Cabac_init_present_flag = _internal.cabac_init_present_flag;
        Constrained_intra_pred_flag = _internal.constrained_intra_pred_flag;
        Transform_skip_enabled_flag = _internal.transform_skip_enabled_flag;
        Cu_qp_delta_enabled_flag = _internal.cu_qp_delta_enabled_flag;
        Ps_slice_chroma_qp_offsets_present_flag = _internal.pps_slice_chroma_qp_offsets_present_flag;
        Weighted_pred_flag = _internal.weighted_pred_flag;
        Weighted_bipred_flag = _internal.weighted_bipred_flag;
        Transquant_bypass_enabled_flag = _internal.transquant_bypass_enabled_flag;
        Tiles_enabled_flag = _internal.tiles_enabled_flag;
        Entropy_coding_sync_enabled_flag = _internal.entropy_coding_sync_enabled_flag;
        Uniform_spacing_flag = _internal.uniform_spacing_flag;
        Loop_filter_across_tiles_enabled_flag = _internal.loop_filter_across_tiles_enabled_flag;
        Ps_loop_filter_across_slices_enabled_flag = _internal.pps_loop_filter_across_slices_enabled_flag;
        Deblocking_filter_control_present_flag = _internal.deblocking_filter_control_present_flag;
        Deblocking_filter_override_enabled_flag = _internal.deblocking_filter_override_enabled_flag;
        Ps_deblocking_filter_disabled_flag = _internal.pps_deblocking_filter_disabled_flag;
        Ps_scaling_list_data_present_flag = _internal.pps_scaling_list_data_present_flag;
        Lists_modification_present_flag = _internal.lists_modification_present_flag;
        Slice_segment_header_extension_present_flag = _internal.slice_segment_header_extension_present_flag;
        Ps_extension_present_flag = _internal.pps_extension_present_flag;
        Cross_component_prediction_enabled_flag = _internal.cross_component_prediction_enabled_flag;
        Chroma_qp_offset_list_enabled_flag = _internal.chroma_qp_offset_list_enabled_flag;
        Ps_curr_pic_ref_enabled_flag = _internal.pps_curr_pic_ref_enabled_flag;
        Residual_adaptive_colour_transform_enabled_flag = _internal.residual_adaptive_colour_transform_enabled_flag;
        Ps_slice_act_qp_offsets_present_flag = _internal.pps_slice_act_qp_offsets_present_flag;
        Ps_palette_predictor_initializers_present_flag = _internal.pps_palette_predictor_initializers_present_flag;
        Monochrome_palette_flag = _internal.monochrome_palette_flag;
        Ps_range_extension_flag = _internal.pps_range_extension_flag;
    }

    public uint Dependent_slice_segments_enabled_flag { get; set; }
    public uint Output_flag_present_flag { get; set; }
    public uint Sign_data_hiding_enabled_flag { get; set; }
    public uint Cabac_init_present_flag { get; set; }
    public uint Constrained_intra_pred_flag { get; set; }
    public uint Transform_skip_enabled_flag { get; set; }
    public uint Cu_qp_delta_enabled_flag { get; set; }
    public uint Ps_slice_chroma_qp_offsets_present_flag { get; set; }
    public uint Weighted_pred_flag { get; set; }
    public uint Weighted_bipred_flag { get; set; }
    public uint Transquant_bypass_enabled_flag { get; set; }
    public uint Tiles_enabled_flag { get; set; }
    public uint Entropy_coding_sync_enabled_flag { get; set; }
    public uint Uniform_spacing_flag { get; set; }
    public uint Loop_filter_across_tiles_enabled_flag { get; set; }
    public uint Ps_loop_filter_across_slices_enabled_flag { get; set; }
    public uint Deblocking_filter_control_present_flag { get; set; }
    public uint Deblocking_filter_override_enabled_flag { get; set; }
    public uint Ps_deblocking_filter_disabled_flag { get; set; }
    public uint Ps_scaling_list_data_present_flag { get; set; }
    public uint Lists_modification_present_flag { get; set; }
    public uint Slice_segment_header_extension_present_flag { get; set; }
    public uint Ps_extension_present_flag { get; set; }
    public uint Cross_component_prediction_enabled_flag { get; set; }
    public uint Chroma_qp_offset_list_enabled_flag { get; set; }
    public uint Ps_curr_pic_ref_enabled_flag { get; set; }
    public uint Residual_adaptive_colour_transform_enabled_flag { get; set; }
    public uint Ps_slice_act_qp_offsets_present_flag { get; set; }
    public uint Ps_palette_predictor_initializers_present_flag { get; set; }
    public uint Monochrome_palette_flag { get; set; }
    public uint Ps_range_extension_flag { get; set; }

    public AdamantiumVulkan.Interop.StdVideoH265PpsFlags ToNative()
    {
        var _internal = new AdamantiumVulkan.Interop.StdVideoH265PpsFlags();
        _internal.dependent_slice_segments_enabled_flag = Dependent_slice_segments_enabled_flag;
        _internal.output_flag_present_flag = Output_flag_present_flag;
        _internal.sign_data_hiding_enabled_flag = Sign_data_hiding_enabled_flag;
        _internal.cabac_init_present_flag = Cabac_init_present_flag;
        _internal.constrained_intra_pred_flag = Constrained_intra_pred_flag;
        _internal.transform_skip_enabled_flag = Transform_skip_enabled_flag;
        _internal.cu_qp_delta_enabled_flag = Cu_qp_delta_enabled_flag;
        _internal.pps_slice_chroma_qp_offsets_present_flag = Ps_slice_chroma_qp_offsets_present_flag;
        _internal.weighted_pred_flag = Weighted_pred_flag;
        _internal.weighted_bipred_flag = Weighted_bipred_flag;
        _internal.transquant_bypass_enabled_flag = Transquant_bypass_enabled_flag;
        _internal.tiles_enabled_flag = Tiles_enabled_flag;
        _internal.entropy_coding_sync_enabled_flag = Entropy_coding_sync_enabled_flag;
        _internal.uniform_spacing_flag = Uniform_spacing_flag;
        _internal.loop_filter_across_tiles_enabled_flag = Loop_filter_across_tiles_enabled_flag;
        _internal.pps_loop_filter_across_slices_enabled_flag = Ps_loop_filter_across_slices_enabled_flag;
        _internal.deblocking_filter_control_present_flag = Deblocking_filter_control_present_flag;
        _internal.deblocking_filter_override_enabled_flag = Deblocking_filter_override_enabled_flag;
        _internal.pps_deblocking_filter_disabled_flag = Ps_deblocking_filter_disabled_flag;
        _internal.pps_scaling_list_data_present_flag = Ps_scaling_list_data_present_flag;
        _internal.lists_modification_present_flag = Lists_modification_present_flag;
        _internal.slice_segment_header_extension_present_flag = Slice_segment_header_extension_present_flag;
        _internal.pps_extension_present_flag = Ps_extension_present_flag;
        _internal.cross_component_prediction_enabled_flag = Cross_component_prediction_enabled_flag;
        _internal.chroma_qp_offset_list_enabled_flag = Chroma_qp_offset_list_enabled_flag;
        _internal.pps_curr_pic_ref_enabled_flag = Ps_curr_pic_ref_enabled_flag;
        _internal.residual_adaptive_colour_transform_enabled_flag = Residual_adaptive_colour_transform_enabled_flag;
        _internal.pps_slice_act_qp_offsets_present_flag = Ps_slice_act_qp_offsets_present_flag;
        _internal.pps_palette_predictor_initializers_present_flag = Ps_palette_predictor_initializers_present_flag;
        _internal.monochrome_palette_flag = Monochrome_palette_flag;
        _internal.pps_range_extension_flag = Ps_range_extension_flag;
        return _internal;
    }

    public static implicit operator StdVideoH265PpsFlags(AdamantiumVulkan.Interop.StdVideoH265PpsFlags s)
    {
        return new StdVideoH265PpsFlags(s);
    }

}



