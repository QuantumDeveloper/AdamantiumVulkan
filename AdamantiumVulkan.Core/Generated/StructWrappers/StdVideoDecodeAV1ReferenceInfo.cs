// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Interop;

namespace AdamantiumVulkan;

public unsafe partial class StdVideoDecodeAV1ReferenceInfo : QBDisposableObject
{
    public StdVideoDecodeAV1ReferenceInfo()
    {
    }

    public StdVideoDecodeAV1ReferenceInfo(AdamantiumVulkan.Interop.StdVideoDecodeAV1ReferenceInfo _internal)
    {
        Flags = new StdVideoDecodeAV1ReferenceInfoFlags(_internal.flags);
        Frame_type = _internal.frame_type;
        RefFrameSignBias = _internal.RefFrameSignBias;
        OrderHint = _internal.OrderHint;
        SavedOrderHints = NativeUtils.PointerToManagedArray(_internal.SavedOrderHints, 8);
    }

    public StdVideoDecodeAV1ReferenceInfoFlags Flags { get; set; }
    public byte Frame_type { get; set; }
    public byte RefFrameSignBias { get; set; }
    public byte OrderHint { get; set; }
    public byte[] SavedOrderHints { get; set; }

    public AdamantiumVulkan.Interop.StdVideoDecodeAV1ReferenceInfo ToNative()
    {
        var _internal = new AdamantiumVulkan.Interop.StdVideoDecodeAV1ReferenceInfo();
        if (Flags != default)
        {
            _internal.flags = Flags.ToNative();
        }
        if (Frame_type != default)
        {
            _internal.frame_type = Frame_type;
        }
        if (RefFrameSignBias != default)
        {
            _internal.RefFrameSignBias = RefFrameSignBias;
        }
        if (OrderHint != default)
        {
            _internal.OrderHint = OrderHint;
        }
        if (SavedOrderHints != default)
        {
            if (SavedOrderHints.Length > 8)
                throw new System.ArgumentOutOfRangeException(nameof(SavedOrderHints), "Array is out of bounds. Size should not be more than 8");

            NativeUtils.PrimitiveToFixedArray(_internal.SavedOrderHints, 8, SavedOrderHints);
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        Flags?.Dispose();
    }


    public static implicit operator StdVideoDecodeAV1ReferenceInfo(AdamantiumVulkan.Interop.StdVideoDecodeAV1ReferenceInfo s)
    {
        return new StdVideoDecodeAV1ReferenceInfo(s);
    }

}



