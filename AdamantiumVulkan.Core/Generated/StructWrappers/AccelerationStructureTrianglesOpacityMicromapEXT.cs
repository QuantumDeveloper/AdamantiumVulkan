// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class AccelerationStructureTrianglesOpacityMicromapEXT : QBDisposableObject
{
    private NativeStruct<AdamantiumVulkan.Core.Interop.VkMicromapUsageEXT> _pUsageCounts;

    private NativeStruct<AdamantiumVulkan.Core.Interop.VkMicromapUsageEXT> _ppUsageCounts;

    public AccelerationStructureTrianglesOpacityMicromapEXT()
    {
    }

    public AccelerationStructureTrianglesOpacityMicromapEXT(AdamantiumVulkan.Core.Interop.VkAccelerationStructureTrianglesOpacityMicromapEXT _internal)
    {
        SType = _internal.sType;
        PNext = _internal.pNext;
        IndexType = _internal.indexType;
        IndexBuffer = new DeviceOrHostAddressConstKHR(_internal.indexBuffer);
        IndexStride = _internal.indexStride;
        BaseTriangle = _internal.baseTriangle;
        UsageCountsCount = _internal.usageCountsCount;
        PUsageCounts = new MicromapUsageEXT(*_internal.pUsageCounts);
        NativeUtils.Free(_internal.pUsageCounts);
        Micromap = new MicromapEXT(_internal.micromap);
    }

    public StructureType SType { get; set; }
    public void* PNext { get; set; }
    public IndexType IndexType { get; set; }
    public DeviceOrHostAddressConstKHR IndexBuffer { get; set; }
    public VkDeviceSize IndexStride { get; set; }
    public uint BaseTriangle { get; set; }
    public uint UsageCountsCount { get; set; }
    public MicromapUsageEXT PUsageCounts { get; set; }
    public MicromapEXT Micromap { get; set; }

    public AdamantiumVulkan.Core.Interop.VkAccelerationStructureTrianglesOpacityMicromapEXT ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkAccelerationStructureTrianglesOpacityMicromapEXT();
        _internal.sType = SType;
        _internal.pNext = PNext;
        _internal.indexType = IndexType;
        if (IndexBuffer != null)
        {
            _internal.indexBuffer = IndexBuffer.ToNative();
        }
        _internal.indexStride = IndexStride;
        _internal.baseTriangle = BaseTriangle;
        _internal.usageCountsCount = UsageCountsCount;
        _pUsageCounts.Dispose();
        if (PUsageCounts != null)
        {
            var struct0 = PUsageCounts.ToNative();
            _pUsageCounts = new NativeStruct<AdamantiumVulkan.Core.Interop.VkMicromapUsageEXT>(struct0);
            _internal.pUsageCounts = _pUsageCounts.Handle;
        }
        _internal.micromap = Micromap;
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        _pUsageCounts.Dispose();
        _ppUsageCounts.Dispose();
    }


    public static implicit operator AccelerationStructureTrianglesOpacityMicromapEXT(AdamantiumVulkan.Core.Interop.VkAccelerationStructureTrianglesOpacityMicromapEXT a)
    {
        return new AccelerationStructureTrianglesOpacityMicromapEXT(a);
    }

}



