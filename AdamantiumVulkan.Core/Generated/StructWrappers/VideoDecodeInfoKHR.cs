// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class VideoDecodeInfoKHR : QBDisposableObject
{
    private NativeStruct<AdamantiumVulkan.Core.Interop.VkVideoReferenceSlotInfoKHR> _pSetupReferenceSlot;

    private NativeStruct<AdamantiumVulkan.Core.Interop.VkVideoReferenceSlotInfoKHR> _pReferenceSlots;

    public VideoDecodeInfoKHR()
    {
    }

    public VideoDecodeInfoKHR(AdamantiumVulkan.Core.Interop.VkVideoDecodeInfoKHR _internal)
    {
        SType = _internal.sType;
        PNext = _internal.pNext;
        Flags = _internal.flags;
        SrcBuffer = new Buffer(_internal.srcBuffer);
        SrcBufferOffset = _internal.srcBufferOffset;
        SrcBufferRange = _internal.srcBufferRange;
        DstPictureResource = new VideoPictureResourceInfoKHR(_internal.dstPictureResource);
        PSetupReferenceSlot = new VideoReferenceSlotInfoKHR(*_internal.pSetupReferenceSlot);
        NativeUtils.Free(_internal.pSetupReferenceSlot);
        ReferenceSlotCount = _internal.referenceSlotCount;
        PReferenceSlots = new VideoReferenceSlotInfoKHR(*_internal.pReferenceSlots);
        NativeUtils.Free(_internal.pReferenceSlots);
    }

    public StructureType SType { get; set; }
    public void* PNext { get; set; }
    public VkVideoDecodeFlagsKHR Flags { get; set; }
    public Buffer SrcBuffer { get; set; }
    public VkDeviceSize SrcBufferOffset { get; set; }
    public VkDeviceSize SrcBufferRange { get; set; }
    public VideoPictureResourceInfoKHR DstPictureResource { get; set; }
    public VideoReferenceSlotInfoKHR PSetupReferenceSlot { get; set; }
    public uint ReferenceSlotCount { get; set; }
    public VideoReferenceSlotInfoKHR PReferenceSlots { get; set; }

    public AdamantiumVulkan.Core.Interop.VkVideoDecodeInfoKHR ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkVideoDecodeInfoKHR();
        if (SType != default)
        {
            _internal.sType = SType;
        }
        _internal.pNext = PNext;
        if (Flags != (uint)default)
        {
            _internal.flags = Flags;
        }
        if (SrcBuffer != default)
        {
            _internal.srcBuffer = SrcBuffer;
        }
        if (SrcBufferOffset != (ulong)default)
        {
            _internal.srcBufferOffset = SrcBufferOffset;
        }
        if (SrcBufferRange != (ulong)default)
        {
            _internal.srcBufferRange = SrcBufferRange;
        }
        if (DstPictureResource != default)
        {
            _internal.dstPictureResource = DstPictureResource.ToNative();
        }
        _pSetupReferenceSlot.Dispose();
        if (PSetupReferenceSlot != default)
        {
            var struct0 = PSetupReferenceSlot.ToNative();
            _pSetupReferenceSlot = new NativeStruct<AdamantiumVulkan.Core.Interop.VkVideoReferenceSlotInfoKHR>(struct0);
            _internal.pSetupReferenceSlot = _pSetupReferenceSlot.Handle;
        }
        if (ReferenceSlotCount != default)
        {
            _internal.referenceSlotCount = ReferenceSlotCount;
        }
        _pReferenceSlots.Dispose();
        if (PReferenceSlots != default)
        {
            var struct1 = PReferenceSlots.ToNative();
            _pReferenceSlots = new NativeStruct<AdamantiumVulkan.Core.Interop.VkVideoReferenceSlotInfoKHR>(struct1);
            _internal.pReferenceSlots = _pReferenceSlots.Handle;
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        _pSetupReferenceSlot.Dispose();
        _pReferenceSlots.Dispose();
        DstPictureResource?.Dispose();
    }


    public static implicit operator VideoDecodeInfoKHR(AdamantiumVulkan.Core.Interop.VkVideoDecodeInfoKHR v)
    {
        return new VideoDecodeInfoKHR(v);
    }

}



