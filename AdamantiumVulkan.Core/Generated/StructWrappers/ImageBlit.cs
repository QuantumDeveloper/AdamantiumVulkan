// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class ImageBlit : QBDisposableObject
{
    public ImageBlit()
    {
    }

    public ImageBlit(AdamantiumVulkan.Core.Interop.VkImageBlit _internal)
    {
        SrcSubresource = new ImageSubresourceLayers(_internal.srcSubresource);
        SrcOffsets = new Offset3D[2];
        for (int i = 0; i < 2; ++i)
        {
            SrcOffsets[i] = new Offset3D(_internal.srcOffsets[i]);
        }
        DstSubresource = new ImageSubresourceLayers(_internal.dstSubresource);
        DstOffsets = new Offset3D[2];
        for (int i = 0; i < 2; ++i)
        {
            DstOffsets[i] = new Offset3D(_internal.dstOffsets[i]);
        }
    }

    public ImageSubresourceLayers SrcSubresource { get; set; }
    public Offset3D[] SrcOffsets { get; set; }
    public ImageSubresourceLayers DstSubresource { get; set; }
    public Offset3D[] DstOffsets { get; set; }

    public AdamantiumVulkan.Core.Interop.VkImageBlit ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkImageBlit();
        if (SrcSubresource != default)
        {
            _internal.srcSubresource = SrcSubresource.ToNative();
        }
        if (SrcOffsets != default)
        {
            if (SrcOffsets.Length > 2)
                throw new System.ArgumentOutOfRangeException(nameof(SrcOffsets), "Array is out of bounds. Size should not be more than 2");

            for (int i = 0; i < SrcOffsets.Length; ++i)
            {
                _internal.srcOffsets[i] = SrcOffsets[i].ToNative();
            }
        }
        if (DstSubresource != default)
        {
            _internal.dstSubresource = DstSubresource.ToNative();
        }
        if (DstOffsets != default)
        {
            if (DstOffsets.Length > 2)
                throw new System.ArgumentOutOfRangeException(nameof(DstOffsets), "Array is out of bounds. Size should not be more than 2");

            for (int i = 0; i < DstOffsets.Length; ++i)
            {
                _internal.dstOffsets[i] = DstOffsets[i].ToNative();
            }
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        SrcSubresource?.Dispose();
        foreach(var item in SrcOffsets)
        {
        	item.Dispose();
        }
        DstSubresource?.Dispose();
        foreach(var item in DstOffsets)
        {
        	item.Dispose();
        }
    }


    public static implicit operator ImageBlit(AdamantiumVulkan.Core.Interop.VkImageBlit i)
    {
        return new ImageBlit(i);
    }

}



