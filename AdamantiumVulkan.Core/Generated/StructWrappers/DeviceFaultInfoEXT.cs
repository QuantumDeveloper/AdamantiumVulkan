// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class DeviceFaultInfoEXT : QBDisposableObject
{
    private NativeStruct<AdamantiumVulkan.Core.Interop.VkDeviceFaultAddressInfoEXT> _pAddressInfos;

    private NativeStruct<AdamantiumVulkan.Core.Interop.VkDeviceFaultVendorInfoEXT> _pVendorInfos;

    public DeviceFaultInfoEXT()
    {
    }

    public DeviceFaultInfoEXT(AdamantiumVulkan.Core.Interop.VkDeviceFaultInfoEXT _internal)
    {
        SType = _internal.sType;
        PNext = _internal.pNext;
        Description = new string((sbyte*)_internal.description);
        PAddressInfos = new DeviceFaultAddressInfoEXT(*_internal.pAddressInfos);
        NativeUtils.Free(_internal.pAddressInfos);
        PVendorInfos = new DeviceFaultVendorInfoEXT(*_internal.pVendorInfos);
        NativeUtils.Free(_internal.pVendorInfos);
        PVendorBinaryData = _internal.pVendorBinaryData;
    }

    public StructureType SType { get; set; }
    public void* PNext { get; set; }
    public string Description { get; set; }
    public DeviceFaultAddressInfoEXT PAddressInfos { get; set; }
    public DeviceFaultVendorInfoEXT PVendorInfos { get; set; }
    public void* PVendorBinaryData { get; set; }

    public AdamantiumVulkan.Core.Interop.VkDeviceFaultInfoEXT ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkDeviceFaultInfoEXT();
        _internal.sType = SType;
        _internal.pNext = PNext;
        if(Description != null)
        {
            if (Description.Length > 256)
                throw new System.ArgumentOutOfRangeException(nameof(Description), "Array is out of bounds. Size should not be more than 256");

            NativeUtils.StringToFixedArray(_internal.description, 256, Description, false);
        }
        _pAddressInfos.Dispose();
        if (PAddressInfos != null)
        {
            var struct0 = PAddressInfos.ToNative();
            _pAddressInfos = new NativeStruct<AdamantiumVulkan.Core.Interop.VkDeviceFaultAddressInfoEXT>(struct0);
            _internal.pAddressInfos = _pAddressInfos.Handle;
        }
        _pVendorInfos.Dispose();
        if (PVendorInfos != null)
        {
            var struct1 = PVendorInfos.ToNative();
            _pVendorInfos = new NativeStruct<AdamantiumVulkan.Core.Interop.VkDeviceFaultVendorInfoEXT>(struct1);
            _internal.pVendorInfos = _pVendorInfos.Handle;
        }
        _internal.pVendorBinaryData = PVendorBinaryData;
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        _pAddressInfos.Dispose();
        _pVendorInfos.Dispose();
    }


    public static implicit operator DeviceFaultInfoEXT(AdamantiumVulkan.Core.Interop.VkDeviceFaultInfoEXT d)
    {
        return new DeviceFaultInfoEXT(d);
    }

}



