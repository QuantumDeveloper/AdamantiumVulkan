// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class InstanceCreateInfo : QBDisposableObject
{
    private NativeStruct<AdamantiumVulkan.Core.Interop.VkApplicationInfo> _pApplicationInfo;

    private MarshaledStringArray _ppEnabledLayerNames;

    private MarshaledStringArray _ppEnabledExtensionNames;

    public InstanceCreateInfo()
    {
    }

    public InstanceCreateInfo(AdamantiumVulkan.Core.Interop.VkInstanceCreateInfo _internal)
    {
        PNext = _internal.pNext;
        Flags = _internal.flags;
        PApplicationInfo = new ApplicationInfo(*_internal.pApplicationInfo);
        NativeUtils.Free(_internal.pApplicationInfo);
        EnabledLayerCount = _internal.enabledLayerCount;
        PEnabledLayerNames = NativeUtils.PointerToStringArray(_internal.ppEnabledLayerNames, (uint)_internal.enabledLayerCount);
        EnabledExtensionCount = _internal.enabledExtensionCount;
        PEnabledExtensionNames = NativeUtils.PointerToStringArray(_internal.ppEnabledExtensionNames, (uint)_internal.enabledExtensionCount);
    }

    public StructureType SType => StructureType.InstanceCreateInfo;
    public void* PNext { get; set; }
    public VkInstanceCreateFlags Flags { get; set; }
    public ApplicationInfo PApplicationInfo { get; set; }
    public uint EnabledLayerCount { get; set; }
    public string[] PEnabledLayerNames { get; set; }
    public uint EnabledExtensionCount { get; set; }
    public string[] PEnabledExtensionNames { get; set; }

    public AdamantiumVulkan.Core.Interop.VkInstanceCreateInfo ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkInstanceCreateInfo();
        _internal.sType = SType;
        _internal.pNext = PNext;
        _internal.flags = Flags;
        _pApplicationInfo.Dispose();
        if (PApplicationInfo != null)
        {
            var struct0 = PApplicationInfo.ToNative();
            _pApplicationInfo = new NativeStruct<AdamantiumVulkan.Core.Interop.VkApplicationInfo>(struct0);
            _internal.pApplicationInfo = _pApplicationInfo.Handle;
        }
        _internal.enabledLayerCount = EnabledLayerCount;
        _ppEnabledLayerNames.Dispose();
        if (PEnabledLayerNames != null)
        {
            _ppEnabledLayerNames = new MarshaledStringArray(PEnabledLayerNames, false);
            _internal.ppEnabledLayerNames = (sbyte**)NativeUtils.GetPointerToStringArray((uint)PEnabledLayerNames.Length, false);
            _ppEnabledLayerNames.Fill(_internal.ppEnabledLayerNames);
        }
        _internal.enabledExtensionCount = EnabledExtensionCount;
        _ppEnabledExtensionNames.Dispose();
        if (PEnabledExtensionNames != null)
        {
            _ppEnabledExtensionNames = new MarshaledStringArray(PEnabledExtensionNames, false);
            _internal.ppEnabledExtensionNames = (sbyte**)NativeUtils.GetPointerToStringArray((uint)PEnabledExtensionNames.Length, false);
            _ppEnabledExtensionNames.Fill(_internal.ppEnabledExtensionNames);
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        _pApplicationInfo.Dispose();
        _ppEnabledLayerNames.Dispose();
        _ppEnabledExtensionNames.Dispose();
    }


    public static implicit operator InstanceCreateInfo(AdamantiumVulkan.Core.Interop.VkInstanceCreateInfo i)
    {
        return new InstanceCreateInfo(i);
    }

}



