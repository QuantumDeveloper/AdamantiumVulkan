// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class ImageCreateInfo : QBDisposableObject
{
    private NativeStruct<uint> pQueueFamilyIndices;

    public ImageCreateInfo()
    {
    }

    public ImageCreateInfo(AdamantiumVulkan.Core.Interop.VkImageCreateInfo _internal)
    {
        PNext = _internal.pNext;
        Flags = _internal.flags;
        ImageType = _internal.imageType;
        Format = _internal.format;
        Extent = new Extent3D(_internal.extent);
        MipLevels = _internal.mipLevels;
        ArrayLayers = _internal.arrayLayers;
        Samples = _internal.samples;
        Tiling = _internal.tiling;
        Usage = _internal.usage;
        SharingMode = _internal.sharingMode;
        QueueFamilyIndexCount = _internal.queueFamilyIndexCount;
        if (_internal.pQueueFamilyIndices != null)
        {
            PQueueFamilyIndices = *_internal.pQueueFamilyIndices;
            NativeUtils.Free(_internal.pQueueFamilyIndices);
        }
        InitialLayout = _internal.initialLayout;
    }

    public StructureType SType => StructureType.ImageCreateInfo;
    public void* PNext { get; set; }
    public ImageCreateFlagBits Flags { get; set; }
    public ImageType ImageType { get; set; }
    public Format Format { get; set; }
    public Extent3D Extent { get; set; }
    public uint MipLevels { get; set; }
    public uint ArrayLayers { get; set; }
    public SampleCountFlagBits Samples { get; set; }
    public ImageTiling Tiling { get; set; }
    public ImageUsageFlagBits Usage { get; set; }
    public SharingMode SharingMode { get; set; }
    public uint QueueFamilyIndexCount { get; set; }
    public uint? PQueueFamilyIndices { get; set; }
    public ImageLayout InitialLayout { get; set; }

    public AdamantiumVulkan.Core.Interop.VkImageCreateInfo ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkImageCreateInfo();
        _internal.sType = SType;
        _internal.pNext = PNext;
        _internal.flags = Flags;
        _internal.imageType = ImageType;
        _internal.format = Format;
        if (Extent != null)
        {
            _internal.extent = Extent.ToNative();
        }
        _internal.mipLevels = MipLevels;
        _internal.arrayLayers = ArrayLayers;
        _internal.samples = Samples;
        _internal.tiling = Tiling;
        _internal.usage = Usage;
        _internal.sharingMode = SharingMode;
        _internal.queueFamilyIndexCount = QueueFamilyIndexCount;
        pQueueFamilyIndices.Dispose();
        if (PQueueFamilyIndices.HasValue)
        {
            pQueueFamilyIndices = new NativeStruct<uint>(PQueueFamilyIndices.Value);
            _internal.pQueueFamilyIndices = pQueueFamilyIndices.Handle;
        }
        _internal.initialLayout = InitialLayout;
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        pQueueFamilyIndices.Dispose();
    }


    public static implicit operator ImageCreateInfo(AdamantiumVulkan.Core.Interop.VkImageCreateInfo i)
    {
        return new ImageCreateInfo(i);
    }

}



