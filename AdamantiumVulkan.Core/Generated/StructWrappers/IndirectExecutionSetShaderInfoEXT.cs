// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class IndirectExecutionSetShaderInfoEXT : QBDisposableObject
{
    private NativeStruct<AdamantiumVulkan.Core.Interop.VkShaderEXT_T> _pInitialShaders;

    private NativeStruct<AdamantiumVulkan.Core.Interop.VkIndirectExecutionSetShaderLayoutInfoEXT> _pSetLayoutInfos;

    private NativeStruct<AdamantiumVulkan.Core.Interop.VkPushConstantRange> _pPushConstantRanges;

    public IndirectExecutionSetShaderInfoEXT()
    {
    }

    public IndirectExecutionSetShaderInfoEXT(AdamantiumVulkan.Core.Interop.VkIndirectExecutionSetShaderInfoEXT _internal)
    {
        SType = _internal.sType;
        PNext = _internal.pNext;
        ShaderCount = _internal.shaderCount;
        PInitialShaders = new ShaderEXT(*_internal.pInitialShaders);
        NativeUtils.Free(_internal.pInitialShaders);
        PSetLayoutInfos = new IndirectExecutionSetShaderLayoutInfoEXT(*_internal.pSetLayoutInfos);
        NativeUtils.Free(_internal.pSetLayoutInfos);
        MaxShaderCount = _internal.maxShaderCount;
        PushConstantRangeCount = _internal.pushConstantRangeCount;
        PushConstantRanges = new PushConstantRange(*_internal.pPushConstantRanges);
        NativeUtils.Free(_internal.pPushConstantRanges);
    }

    public StructureType SType { get; set; }
    public void* PNext { get; set; }
    public uint ShaderCount { get; set; }
    public ShaderEXT PInitialShaders { get; set; }
    public IndirectExecutionSetShaderLayoutInfoEXT PSetLayoutInfos { get; set; }
    public uint MaxShaderCount { get; set; }
    public uint PushConstantRangeCount { get; set; }
    public PushConstantRange PushConstantRanges { get; set; }

    public AdamantiumVulkan.Core.Interop.VkIndirectExecutionSetShaderInfoEXT ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkIndirectExecutionSetShaderInfoEXT();
        if (SType != default)
        {
            _internal.sType = SType;
        }
        _internal.pNext = PNext;
        if (ShaderCount != default)
        {
            _internal.shaderCount = ShaderCount;
        }
        _pInitialShaders.Dispose();
        if (PInitialShaders != default)
        {
            AdamantiumVulkan.Core.Interop.VkShaderEXT_T struct0 = PInitialShaders;
            _pInitialShaders = new NativeStruct<AdamantiumVulkan.Core.Interop.VkShaderEXT_T>(struct0);
            _internal.pInitialShaders = _pInitialShaders.Handle;
        }
        _pSetLayoutInfos.Dispose();
        if (PSetLayoutInfos != default)
        {
            var struct1 = PSetLayoutInfos.ToNative();
            _pSetLayoutInfos = new NativeStruct<AdamantiumVulkan.Core.Interop.VkIndirectExecutionSetShaderLayoutInfoEXT>(struct1);
            _internal.pSetLayoutInfos = _pSetLayoutInfos.Handle;
        }
        if (MaxShaderCount != default)
        {
            _internal.maxShaderCount = MaxShaderCount;
        }
        if (PushConstantRangeCount != default)
        {
            _internal.pushConstantRangeCount = PushConstantRangeCount;
        }
        _pPushConstantRanges.Dispose();
        if (PushConstantRanges != default)
        {
            var struct2 = PushConstantRanges.ToNative();
            _pPushConstantRanges = new NativeStruct<AdamantiumVulkan.Core.Interop.VkPushConstantRange>(struct2);
            _internal.pPushConstantRanges = _pPushConstantRanges.Handle;
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        _pInitialShaders.Dispose();
        _pSetLayoutInfos.Dispose();
        _pPushConstantRanges.Dispose();
    }


    public static implicit operator IndirectExecutionSetShaderInfoEXT(AdamantiumVulkan.Core.Interop.VkIndirectExecutionSetShaderInfoEXT i)
    {
        return new IndirectExecutionSetShaderInfoEXT(i);
    }

}



