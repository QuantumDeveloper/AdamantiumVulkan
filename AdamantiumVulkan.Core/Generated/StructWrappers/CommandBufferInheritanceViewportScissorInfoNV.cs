// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class CommandBufferInheritanceViewportScissorInfoNV : QBDisposableObject
{
    private NativeStruct<VkViewport> pViewportDepths;

    public CommandBufferInheritanceViewportScissorInfoNV()
    {
    }

    public CommandBufferInheritanceViewportScissorInfoNV(AdamantiumVulkan.Core.Interop.VkCommandBufferInheritanceViewportScissorInfoNV _internal)
    {
        SType = _internal.sType;
        PNext = _internal.pNext;
        ViewportScissor2D = _internal.viewportScissor2D;
        ViewportDepthCount = _internal.viewportDepthCount;
        PViewportDepths = new Viewport(*_internal.pViewportDepths);
        NativeUtils.Free(_internal.pViewportDepths);
    }

    public StructureType SType { get; set; }
    public void* PNext { get; set; }
    public VkBool32 ViewportScissor2D { get; set; }
    public uint ViewportDepthCount { get; set; }
    public Viewport PViewportDepths { get; set; }

    public AdamantiumVulkan.Core.Interop.VkCommandBufferInheritanceViewportScissorInfoNV ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkCommandBufferInheritanceViewportScissorInfoNV();
        _internal.sType = SType;
        _internal.pNext = PNext;
        _internal.viewportScissor2D = ViewportScissor2D;
        _internal.viewportDepthCount = ViewportDepthCount;
        pViewportDepths.Dispose();
        if (PViewportDepths != null)
        {
            var struct0 = PViewportDepths.ToNative();
            pViewportDepths = new NativeStruct<VkViewport>(struct0);
            _internal.pViewportDepths = pViewportDepths.Handle;
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        pViewportDepths.Dispose();
    }


    public static implicit operator CommandBufferInheritanceViewportScissorInfoNV(AdamantiumVulkan.Core.Interop.VkCommandBufferInheritanceViewportScissorInfoNV c)
    {
        return new CommandBufferInheritanceViewportScissorInfoNV(c);
    }

}



