// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class SubpassDependency2 : QBDisposableObject
{
    public SubpassDependency2()
    {
    }

    public SubpassDependency2(AdamantiumVulkan.Core.Interop.VkSubpassDependency2 _internal)
    {
        SType = _internal.sType;
        PNext = _internal.pNext;
        SrcSubpass = _internal.srcSubpass;
        DstSubpass = _internal.dstSubpass;
        SrcStageMask = _internal.srcStageMask;
        DstStageMask = _internal.dstStageMask;
        SrcAccessMask = _internal.srcAccessMask;
        DstAccessMask = _internal.dstAccessMask;
        DependencyFlags = _internal.dependencyFlags;
        ViewOffset = _internal.viewOffset;
    }

    public StructureType SType { get; set; }
    public void* PNext { get; set; }
    public uint SrcSubpass { get; set; }
    public uint DstSubpass { get; set; }
    public VkPipelineStageFlags SrcStageMask { get; set; }
    public VkPipelineStageFlags DstStageMask { get; set; }
    public VkAccessFlags SrcAccessMask { get; set; }
    public VkAccessFlags DstAccessMask { get; set; }
    public VkDependencyFlags DependencyFlags { get; set; }
    public int ViewOffset { get; set; }

    public AdamantiumVulkan.Core.Interop.VkSubpassDependency2 ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkSubpassDependency2();
        if (SType != default)
        {
            _internal.sType = SType;
        }
        _internal.pNext = PNext;
        if (SrcSubpass != default)
        {
            _internal.srcSubpass = SrcSubpass;
        }
        if (DstSubpass != default)
        {
            _internal.dstSubpass = DstSubpass;
        }
        if (SrcStageMask != (uint)default)
        {
            _internal.srcStageMask = SrcStageMask;
        }
        if (DstStageMask != (uint)default)
        {
            _internal.dstStageMask = DstStageMask;
        }
        if (SrcAccessMask != (uint)default)
        {
            _internal.srcAccessMask = SrcAccessMask;
        }
        if (DstAccessMask != (uint)default)
        {
            _internal.dstAccessMask = DstAccessMask;
        }
        if (DependencyFlags != (uint)default)
        {
            _internal.dependencyFlags = DependencyFlags;
        }
        if (ViewOffset != default)
        {
            _internal.viewOffset = ViewOffset;
        }
        return _internal;
    }

    public static implicit operator SubpassDependency2(AdamantiumVulkan.Core.Interop.VkSubpassDependency2 s)
    {
        return new SubpassDependency2(s);
    }

}



