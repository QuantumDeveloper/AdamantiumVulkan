// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class MemoryDedicatedRequirements : QBDisposableObject
{
    public MemoryDedicatedRequirements()
    {
    }

    public MemoryDedicatedRequirements(AdamantiumVulkan.Core.Interop.VkMemoryDedicatedRequirements _internal)
    {
        PNext = _internal.pNext;
        PrefersDedicatedAllocation = _internal.prefersDedicatedAllocation;
        RequiresDedicatedAllocation = _internal.requiresDedicatedAllocation;
    }

    public StructureType SType => StructureType.MemoryDedicatedRequirements;
    public void* PNext { get; set; }
    public VkBool32 PrefersDedicatedAllocation { get; set; }
    public VkBool32 RequiresDedicatedAllocation { get; set; }

    public AdamantiumVulkan.Core.Interop.VkMemoryDedicatedRequirements ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkMemoryDedicatedRequirements();
        if (SType != default)
        {
            _internal.sType = SType;
        }
        _internal.pNext = PNext;
        if (PrefersDedicatedAllocation != (uint)default)
        {
            _internal.prefersDedicatedAllocation = PrefersDedicatedAllocation;
        }
        if (RequiresDedicatedAllocation != (uint)default)
        {
            _internal.requiresDedicatedAllocation = RequiresDedicatedAllocation;
        }
        return _internal;
    }

    public static implicit operator MemoryDedicatedRequirements(AdamantiumVulkan.Core.Interop.VkMemoryDedicatedRequirements m)
    {
        return new MemoryDedicatedRequirements(m);
    }

}



