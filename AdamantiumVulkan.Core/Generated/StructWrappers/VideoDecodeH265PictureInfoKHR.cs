// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;
using AdamantiumVulkan;
using AdamantiumVulkan.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class VideoDecodeH265PictureInfoKHR : QBDisposableObject
{
    private NativeStruct<AdamantiumVulkan.Interop.StdVideoDecodeH265PictureInfo> _pStdPictureInfo;

    private NativeStruct<uint> _pSliceSegmentOffsets;

    public VideoDecodeH265PictureInfoKHR()
    {
    }

    public VideoDecodeH265PictureInfoKHR(AdamantiumVulkan.Core.Interop.VkVideoDecodeH265PictureInfoKHR _internal)
    {
        SType = _internal.sType;
        PNext = _internal.pNext;
        PStdPictureInfo = new StdVideoDecodeH265PictureInfo(*_internal.pStdPictureInfo);
        NativeUtils.Free(_internal.pStdPictureInfo);
        SliceSegmentCount = _internal.sliceSegmentCount;
        if (_internal.pSliceSegmentOffsets != null)
        {
            PSliceSegmentOffsets = *_internal.pSliceSegmentOffsets;
            NativeUtils.Free(_internal.pSliceSegmentOffsets);
        }
    }

    public StructureType SType { get; set; }
    public void* PNext { get; set; }
    public StdVideoDecodeH265PictureInfo PStdPictureInfo { get; set; }
    public uint SliceSegmentCount { get; set; }
    public uint? PSliceSegmentOffsets { get; set; }

    public AdamantiumVulkan.Core.Interop.VkVideoDecodeH265PictureInfoKHR ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkVideoDecodeH265PictureInfoKHR();
        if (SType != default)
        {
            _internal.sType = SType;
        }
        _internal.pNext = PNext;
        _pStdPictureInfo.Dispose();
        if (PStdPictureInfo != default)
        {
            var struct0 = PStdPictureInfo.ToNative();
            _pStdPictureInfo = new NativeStruct<AdamantiumVulkan.Interop.StdVideoDecodeH265PictureInfo>(struct0);
            _internal.pStdPictureInfo = _pStdPictureInfo.Handle;
        }
        if (SliceSegmentCount != default)
        {
            _internal.sliceSegmentCount = SliceSegmentCount;
        }
        _pSliceSegmentOffsets.Dispose();
        if (PSliceSegmentOffsets.HasValue)
        {
            _pSliceSegmentOffsets = new NativeStruct<uint>(PSliceSegmentOffsets.Value);
            _internal.pSliceSegmentOffsets = _pSliceSegmentOffsets.Handle;
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        _pStdPictureInfo.Dispose();
        _pSliceSegmentOffsets.Dispose();
    }


    public static implicit operator VideoDecodeH265PictureInfoKHR(AdamantiumVulkan.Core.Interop.VkVideoDecodeH265PictureInfoKHR v)
    {
        return new VideoDecodeH265PictureInfoKHR(v);
    }

}



