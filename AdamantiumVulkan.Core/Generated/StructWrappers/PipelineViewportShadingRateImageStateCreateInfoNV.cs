// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class PipelineViewportShadingRateImageStateCreateInfoNV : QBDisposableObject
{
    private NativeStruct<AdamantiumVulkan.Core.Interop.VkShadingRatePaletteNV> pShadingRatePalettes;

    public PipelineViewportShadingRateImageStateCreateInfoNV()
    {
    }

    public PipelineViewportShadingRateImageStateCreateInfoNV(AdamantiumVulkan.Core.Interop.VkPipelineViewportShadingRateImageStateCreateInfoNV _internal)
    {
        PNext = _internal.pNext;
        ShadingRateImageEnable = _internal.shadingRateImageEnable;
        ViewportCount = _internal.viewportCount;
        PShadingRatePalettes = new ShadingRatePaletteNV(*_internal.pShadingRatePalettes);
        NativeUtils.Free(_internal.pShadingRatePalettes);
    }

    public StructureType SType => StructureType.PipelineViewportShadingRateImageStateCreateInfoNv;
    public void* PNext { get; set; }
    public VkBool32 ShadingRateImageEnable { get; set; }
    public uint ViewportCount { get; set; }
    public ShadingRatePaletteNV PShadingRatePalettes { get; set; }

    public AdamantiumVulkan.Core.Interop.VkPipelineViewportShadingRateImageStateCreateInfoNV ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkPipelineViewportShadingRateImageStateCreateInfoNV();
        _internal.sType = SType;
        _internal.pNext = PNext;
        _internal.shadingRateImageEnable = ShadingRateImageEnable;
        _internal.viewportCount = ViewportCount;
        pShadingRatePalettes.Dispose();
        if (PShadingRatePalettes != null)
        {
            var struct0 = PShadingRatePalettes.ToNative();
            pShadingRatePalettes = new NativeStruct<AdamantiumVulkan.Core.Interop.VkShadingRatePaletteNV>(struct0);
            _internal.pShadingRatePalettes = pShadingRatePalettes.Handle;
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        pShadingRatePalettes.Dispose();
    }


    public static implicit operator PipelineViewportShadingRateImageStateCreateInfoNV(AdamantiumVulkan.Core.Interop.VkPipelineViewportShadingRateImageStateCreateInfoNV p)
    {
        return new PipelineViewportShadingRateImageStateCreateInfoNV(p);
    }

}



