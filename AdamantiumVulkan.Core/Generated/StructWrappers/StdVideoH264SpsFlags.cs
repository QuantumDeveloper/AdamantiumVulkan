// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Interop;

namespace AdamantiumVulkan;

public unsafe partial class StdVideoH264SpsFlags : QBDisposableObject
{
    public StdVideoH264SpsFlags()
    {
    }

    public StdVideoH264SpsFlags(AdamantiumVulkan.Interop.StdVideoH264SpsFlags _internal)
    {
        Constraint_set0_flag = _internal.constraint_set0_flag;
        Constraint_set1_flag = _internal.constraint_set1_flag;
        Constraint_set2_flag = _internal.constraint_set2_flag;
        Constraint_set3_flag = _internal.constraint_set3_flag;
        Constraint_set4_flag = _internal.constraint_set4_flag;
        Constraint_set5_flag = _internal.constraint_set5_flag;
        Direct_8x8_inference_flag = _internal.direct_8x8_inference_flag;
        Mb_adaptive_frame_field_flag = _internal.mb_adaptive_frame_field_flag;
        Frame_mbs_only_flag = _internal.frame_mbs_only_flag;
        Delta_pic_order_always_zero_flag = _internal.delta_pic_order_always_zero_flag;
        Separate_colour_plane_flag = _internal.separate_colour_plane_flag;
        Gaps_in_frame_num_value_allowed_flag = _internal.gaps_in_frame_num_value_allowed_flag;
        Qpprime_y_zero_transform_bypass_flag = _internal.qpprime_y_zero_transform_bypass_flag;
        Frame_cropping_flag = _internal.frame_cropping_flag;
        Seq_scaling_matrix_present_flag = _internal.seq_scaling_matrix_present_flag;
        Vui_parameters_present_flag = _internal.vui_parameters_present_flag;
    }

    public uint Constraint_set0_flag { get; set; }
    public uint Constraint_set1_flag { get; set; }
    public uint Constraint_set2_flag { get; set; }
    public uint Constraint_set3_flag { get; set; }
    public uint Constraint_set4_flag { get; set; }
    public uint Constraint_set5_flag { get; set; }
    public uint Direct_8x8_inference_flag { get; set; }
    public uint Mb_adaptive_frame_field_flag { get; set; }
    public uint Frame_mbs_only_flag { get; set; }
    public uint Delta_pic_order_always_zero_flag { get; set; }
    public uint Separate_colour_plane_flag { get; set; }
    public uint Gaps_in_frame_num_value_allowed_flag { get; set; }
    public uint Qpprime_y_zero_transform_bypass_flag { get; set; }
    public uint Frame_cropping_flag { get; set; }
    public uint Seq_scaling_matrix_present_flag { get; set; }
    public uint Vui_parameters_present_flag { get; set; }

    public AdamantiumVulkan.Interop.StdVideoH264SpsFlags ToNative()
    {
        var _internal = new AdamantiumVulkan.Interop.StdVideoH264SpsFlags();
        if (Constraint_set0_flag != default)
        {
            _internal.constraint_set0_flag = Constraint_set0_flag;
        }
        if (Constraint_set1_flag != default)
        {
            _internal.constraint_set1_flag = Constraint_set1_flag;
        }
        if (Constraint_set2_flag != default)
        {
            _internal.constraint_set2_flag = Constraint_set2_flag;
        }
        if (Constraint_set3_flag != default)
        {
            _internal.constraint_set3_flag = Constraint_set3_flag;
        }
        if (Constraint_set4_flag != default)
        {
            _internal.constraint_set4_flag = Constraint_set4_flag;
        }
        if (Constraint_set5_flag != default)
        {
            _internal.constraint_set5_flag = Constraint_set5_flag;
        }
        if (Direct_8x8_inference_flag != default)
        {
            _internal.direct_8x8_inference_flag = Direct_8x8_inference_flag;
        }
        if (Mb_adaptive_frame_field_flag != default)
        {
            _internal.mb_adaptive_frame_field_flag = Mb_adaptive_frame_field_flag;
        }
        if (Frame_mbs_only_flag != default)
        {
            _internal.frame_mbs_only_flag = Frame_mbs_only_flag;
        }
        if (Delta_pic_order_always_zero_flag != default)
        {
            _internal.delta_pic_order_always_zero_flag = Delta_pic_order_always_zero_flag;
        }
        if (Separate_colour_plane_flag != default)
        {
            _internal.separate_colour_plane_flag = Separate_colour_plane_flag;
        }
        if (Gaps_in_frame_num_value_allowed_flag != default)
        {
            _internal.gaps_in_frame_num_value_allowed_flag = Gaps_in_frame_num_value_allowed_flag;
        }
        if (Qpprime_y_zero_transform_bypass_flag != default)
        {
            _internal.qpprime_y_zero_transform_bypass_flag = Qpprime_y_zero_transform_bypass_flag;
        }
        if (Frame_cropping_flag != default)
        {
            _internal.frame_cropping_flag = Frame_cropping_flag;
        }
        if (Seq_scaling_matrix_present_flag != default)
        {
            _internal.seq_scaling_matrix_present_flag = Seq_scaling_matrix_present_flag;
        }
        if (Vui_parameters_present_flag != default)
        {
            _internal.vui_parameters_present_flag = Vui_parameters_present_flag;
        }
        return _internal;
    }

    public static implicit operator StdVideoH264SpsFlags(AdamantiumVulkan.Interop.StdVideoH264SpsFlags s)
    {
        return new StdVideoH264SpsFlags(s);
    }

}



