// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class PipelineCoverageToColorStateCreateInfoNV : QBDisposableObject
{
    public PipelineCoverageToColorStateCreateInfoNV()
    {
    }

    public PipelineCoverageToColorStateCreateInfoNV(AdamantiumVulkan.Core.Interop.VkPipelineCoverageToColorStateCreateInfoNV _internal)
    {
        PNext = _internal.pNext;
        Flags = _internal.flags;
        CoverageToColorEnable = _internal.coverageToColorEnable;
        CoverageToColorLocation = _internal.coverageToColorLocation;
    }

    public StructureType SType => StructureType.PipelineCoverageToColorStateCreateInfoNv;
    public void* PNext { get; set; }
    public VkPipelineCoverageToColorStateCreateFlagsNV Flags { get; set; }
    public VkBool32 CoverageToColorEnable { get; set; }
    public uint CoverageToColorLocation { get; set; }

    public AdamantiumVulkan.Core.Interop.VkPipelineCoverageToColorStateCreateInfoNV ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkPipelineCoverageToColorStateCreateInfoNV();
        _internal.sType = SType;
        _internal.pNext = PNext;
        _internal.flags = Flags;
        _internal.coverageToColorEnable = CoverageToColorEnable;
        _internal.coverageToColorLocation = CoverageToColorLocation;
        return _internal;
    }

    public static implicit operator PipelineCoverageToColorStateCreateInfoNV(AdamantiumVulkan.Core.Interop.VkPipelineCoverageToColorStateCreateInfoNV p)
    {
        return new PipelineCoverageToColorStateCreateInfoNV(p);
    }

}



