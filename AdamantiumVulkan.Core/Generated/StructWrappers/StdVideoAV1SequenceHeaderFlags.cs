// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Interop;

namespace AdamantiumVulkan;

public unsafe partial class StdVideoAV1SequenceHeaderFlags : QBDisposableObject
{
    public StdVideoAV1SequenceHeaderFlags()
    {
    }

    public StdVideoAV1SequenceHeaderFlags(AdamantiumVulkan.Interop.StdVideoAV1SequenceHeaderFlags _internal)
    {
        Still_picture = _internal.still_picture;
        Reduced_still_picture_header = _internal.reduced_still_picture_header;
        Use_128x128_superblock = _internal.use_128x128_superblock;
        Enable_filter_intra = _internal.enable_filter_intra;
        Enable_intra_edge_filter = _internal.enable_intra_edge_filter;
        Enable_interintra_compound = _internal.enable_interintra_compound;
        Enable_masked_compound = _internal.enable_masked_compound;
        Enable_warped_motion = _internal.enable_warped_motion;
        Enable_dual_filter = _internal.enable_dual_filter;
        Enable_order_hint = _internal.enable_order_hint;
        Enable_jnt_comp = _internal.enable_jnt_comp;
        Enable_ref_frame_mvs = _internal.enable_ref_frame_mvs;
        Frame_id_numbers_present_flag = _internal.frame_id_numbers_present_flag;
        Enable_superres = _internal.enable_superres;
        Enable_cdef = _internal.enable_cdef;
        Enable_restoration = _internal.enable_restoration;
        Film_grain_params_present = _internal.film_grain_params_present;
        Timing_info_present_flag = _internal.timing_info_present_flag;
        Initial_display_delay_present_flag = _internal.initial_display_delay_present_flag;
        Reserved = _internal.reserved;
    }

    public uint Still_picture { get; set; }
    public uint Reduced_still_picture_header { get; set; }
    public uint Use_128x128_superblock { get; set; }
    public uint Enable_filter_intra { get; set; }
    public uint Enable_intra_edge_filter { get; set; }
    public uint Enable_interintra_compound { get; set; }
    public uint Enable_masked_compound { get; set; }
    public uint Enable_warped_motion { get; set; }
    public uint Enable_dual_filter { get; set; }
    public uint Enable_order_hint { get; set; }
    public uint Enable_jnt_comp { get; set; }
    public uint Enable_ref_frame_mvs { get; set; }
    public uint Frame_id_numbers_present_flag { get; set; }
    public uint Enable_superres { get; set; }
    public uint Enable_cdef { get; set; }
    public uint Enable_restoration { get; set; }
    public uint Film_grain_params_present { get; set; }
    public uint Timing_info_present_flag { get; set; }
    public uint Initial_display_delay_present_flag { get; set; }
    public uint Reserved { get; set; }

    public AdamantiumVulkan.Interop.StdVideoAV1SequenceHeaderFlags ToNative()
    {
        var _internal = new AdamantiumVulkan.Interop.StdVideoAV1SequenceHeaderFlags();
        if (Still_picture != default)
        {
            _internal.still_picture = Still_picture;
        }
        if (Reduced_still_picture_header != default)
        {
            _internal.reduced_still_picture_header = Reduced_still_picture_header;
        }
        if (Use_128x128_superblock != default)
        {
            _internal.use_128x128_superblock = Use_128x128_superblock;
        }
        if (Enable_filter_intra != default)
        {
            _internal.enable_filter_intra = Enable_filter_intra;
        }
        if (Enable_intra_edge_filter != default)
        {
            _internal.enable_intra_edge_filter = Enable_intra_edge_filter;
        }
        if (Enable_interintra_compound != default)
        {
            _internal.enable_interintra_compound = Enable_interintra_compound;
        }
        if (Enable_masked_compound != default)
        {
            _internal.enable_masked_compound = Enable_masked_compound;
        }
        if (Enable_warped_motion != default)
        {
            _internal.enable_warped_motion = Enable_warped_motion;
        }
        if (Enable_dual_filter != default)
        {
            _internal.enable_dual_filter = Enable_dual_filter;
        }
        if (Enable_order_hint != default)
        {
            _internal.enable_order_hint = Enable_order_hint;
        }
        if (Enable_jnt_comp != default)
        {
            _internal.enable_jnt_comp = Enable_jnt_comp;
        }
        if (Enable_ref_frame_mvs != default)
        {
            _internal.enable_ref_frame_mvs = Enable_ref_frame_mvs;
        }
        if (Frame_id_numbers_present_flag != default)
        {
            _internal.frame_id_numbers_present_flag = Frame_id_numbers_present_flag;
        }
        if (Enable_superres != default)
        {
            _internal.enable_superres = Enable_superres;
        }
        if (Enable_cdef != default)
        {
            _internal.enable_cdef = Enable_cdef;
        }
        if (Enable_restoration != default)
        {
            _internal.enable_restoration = Enable_restoration;
        }
        if (Film_grain_params_present != default)
        {
            _internal.film_grain_params_present = Film_grain_params_present;
        }
        if (Timing_info_present_flag != default)
        {
            _internal.timing_info_present_flag = Timing_info_present_flag;
        }
        if (Initial_display_delay_present_flag != default)
        {
            _internal.initial_display_delay_present_flag = Initial_display_delay_present_flag;
        }
        if (Reserved != default)
        {
            _internal.reserved = Reserved;
        }
        return _internal;
    }

    public static implicit operator StdVideoAV1SequenceHeaderFlags(AdamantiumVulkan.Interop.StdVideoAV1SequenceHeaderFlags s)
    {
        return new StdVideoAV1SequenceHeaderFlags(s);
    }

}



