// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class OpticalFlowSessionCreateInfoNV : QBDisposableObject
{
    public OpticalFlowSessionCreateInfoNV()
    {
    }

    public OpticalFlowSessionCreateInfoNV(AdamantiumVulkan.Core.Interop.VkOpticalFlowSessionCreateInfoNV _internal)
    {
        SType = _internal.sType;
        PNext = _internal.pNext;
        Width = _internal.width;
        Height = _internal.height;
        ImageFormat = _internal.imageFormat;
        FlowVectorFormat = _internal.flowVectorFormat;
        CostFormat = _internal.costFormat;
        OutputGridSize = _internal.outputGridSize;
        HintGridSize = _internal.hintGridSize;
        PerformanceLevel = _internal.performanceLevel;
        Flags = _internal.flags;
    }

    public StructureType SType { get; set; }
    public void* PNext { get; set; }
    public uint Width { get; set; }
    public uint Height { get; set; }
    public Format ImageFormat { get; set; }
    public Format FlowVectorFormat { get; set; }
    public Format CostFormat { get; set; }
    public VkOpticalFlowGridSizeFlagsNV OutputGridSize { get; set; }
    public VkOpticalFlowGridSizeFlagsNV HintGridSize { get; set; }
    public OpticalFlowPerformanceLevelNV PerformanceLevel { get; set; }
    public VkOpticalFlowSessionCreateFlagsNV Flags { get; set; }

    public AdamantiumVulkan.Core.Interop.VkOpticalFlowSessionCreateInfoNV ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkOpticalFlowSessionCreateInfoNV();
        if (SType != default)
        {
            _internal.sType = SType;
        }
        _internal.pNext = PNext;
        if (Width != default)
        {
            _internal.width = Width;
        }
        if (Height != default)
        {
            _internal.height = Height;
        }
        if (ImageFormat != default)
        {
            _internal.imageFormat = ImageFormat;
        }
        if (FlowVectorFormat != default)
        {
            _internal.flowVectorFormat = FlowVectorFormat;
        }
        if (CostFormat != default)
        {
            _internal.costFormat = CostFormat;
        }
        if (OutputGridSize != (uint)default)
        {
            _internal.outputGridSize = OutputGridSize;
        }
        if (HintGridSize != (uint)default)
        {
            _internal.hintGridSize = HintGridSize;
        }
        if (PerformanceLevel != default)
        {
            _internal.performanceLevel = PerformanceLevel;
        }
        if (Flags != (uint)default)
        {
            _internal.flags = Flags;
        }
        return _internal;
    }

    public static implicit operator OpticalFlowSessionCreateInfoNV(AdamantiumVulkan.Core.Interop.VkOpticalFlowSessionCreateInfoNV o)
    {
        return new OpticalFlowSessionCreateInfoNV(o);
    }

}



