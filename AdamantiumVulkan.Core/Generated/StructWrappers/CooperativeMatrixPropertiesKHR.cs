// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class CooperativeMatrixPropertiesKHR : QBDisposableObject
{
    public CooperativeMatrixPropertiesKHR()
    {
    }

    public CooperativeMatrixPropertiesKHR(AdamantiumVulkan.Core.Interop.VkCooperativeMatrixPropertiesKHR _internal)
    {
        SType = _internal.sType;
        PNext = _internal.pNext;
        MSize = _internal.MSize;
        NSize = _internal.NSize;
        KSize = _internal.KSize;
        AType = _internal.AType;
        BType = _internal.BType;
        CType = _internal.CType;
        ResultType = _internal.ResultType;
        SaturatingAccumulation = _internal.saturatingAccumulation;
        Scope = _internal.scope;
    }

    public StructureType SType { get; set; }
    public void* PNext { get; set; }
    public uint MSize { get; set; }
    public uint NSize { get; set; }
    public uint KSize { get; set; }
    public ComponentTypeKHR AType { get; set; }
    public ComponentTypeKHR BType { get; set; }
    public ComponentTypeKHR CType { get; set; }
    public ComponentTypeKHR ResultType { get; set; }
    public VkBool32 SaturatingAccumulation { get; set; }
    public ScopeKHR Scope { get; set; }

    public AdamantiumVulkan.Core.Interop.VkCooperativeMatrixPropertiesKHR ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkCooperativeMatrixPropertiesKHR();
        if (SType != default)
        {
            _internal.sType = SType;
        }
        _internal.pNext = PNext;
        if (MSize != default)
        {
            _internal.MSize = MSize;
        }
        if (NSize != default)
        {
            _internal.NSize = NSize;
        }
        if (KSize != default)
        {
            _internal.KSize = KSize;
        }
        if (AType != default)
        {
            _internal.AType = AType;
        }
        if (BType != default)
        {
            _internal.BType = BType;
        }
        if (CType != default)
        {
            _internal.CType = CType;
        }
        if (ResultType != default)
        {
            _internal.ResultType = ResultType;
        }
        if (SaturatingAccumulation != (uint)default)
        {
            _internal.saturatingAccumulation = SaturatingAccumulation;
        }
        if (Scope != default)
        {
            _internal.scope = Scope;
        }
        return _internal;
    }

    public static implicit operator CooperativeMatrixPropertiesKHR(AdamantiumVulkan.Core.Interop.VkCooperativeMatrixPropertiesKHR c)
    {
        return new CooperativeMatrixPropertiesKHR(c);
    }

}



