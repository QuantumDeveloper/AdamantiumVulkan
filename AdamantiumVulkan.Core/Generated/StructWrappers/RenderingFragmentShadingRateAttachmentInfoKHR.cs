// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class RenderingFragmentShadingRateAttachmentInfoKHR : QBDisposableObject
{
    public RenderingFragmentShadingRateAttachmentInfoKHR()
    {
    }

    public RenderingFragmentShadingRateAttachmentInfoKHR(AdamantiumVulkan.Core.Interop.VkRenderingFragmentShadingRateAttachmentInfoKHR _internal)
    {
        SType = _internal.sType;
        PNext = _internal.pNext;
        ImageView = new ImageView(_internal.imageView);
        ImageLayout = _internal.imageLayout;
        ShadingRateAttachmentTexelSize = new Extent2D(_internal.shadingRateAttachmentTexelSize);
    }

    public StructureType SType { get; set; }
    public void* PNext { get; set; }
    public ImageView ImageView { get; set; }
    public ImageLayout ImageLayout { get; set; }
    public Extent2D ShadingRateAttachmentTexelSize { get; set; }

    public AdamantiumVulkan.Core.Interop.VkRenderingFragmentShadingRateAttachmentInfoKHR ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkRenderingFragmentShadingRateAttachmentInfoKHR();
        if (SType != default)
        {
            _internal.sType = SType;
        }
        _internal.pNext = PNext;
        if (ImageView != default)
        {
            _internal.imageView = ImageView;
        }
        if (ImageLayout != default)
        {
            _internal.imageLayout = ImageLayout;
        }
        if (ShadingRateAttachmentTexelSize != default)
        {
            _internal.shadingRateAttachmentTexelSize = ShadingRateAttachmentTexelSize.ToNative();
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        ShadingRateAttachmentTexelSize?.Dispose();
    }


    public static implicit operator RenderingFragmentShadingRateAttachmentInfoKHR(AdamantiumVulkan.Core.Interop.VkRenderingFragmentShadingRateAttachmentInfoKHR r)
    {
        return new RenderingFragmentShadingRateAttachmentInfoKHR(r);
    }

}



