// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class ClusterAccelerationStructureInstantiateClusterInfoNV : QBDisposableObject
{
    public ClusterAccelerationStructureInstantiateClusterInfoNV()
    {
    }

    public ClusterAccelerationStructureInstantiateClusterInfoNV(AdamantiumVulkan.Core.Interop.VkClusterAccelerationStructureInstantiateClusterInfoNV _internal)
    {
        ClusterIdOffset = _internal.clusterIdOffset;
        GeometryIndexOffset = _internal.geometryIndexOffset;
        Reserved = _internal.reserved;
        ClusterTemplateAddress = _internal.clusterTemplateAddress;
        VertexBuffer = new StridedDeviceAddressNV(_internal.vertexBuffer);
    }

    public uint ClusterIdOffset { get; set; }
    public uint GeometryIndexOffset { get; set; }
    public uint Reserved { get; set; }
    public VkDeviceAddress ClusterTemplateAddress { get; set; }
    public StridedDeviceAddressNV VertexBuffer { get; set; }

    public AdamantiumVulkan.Core.Interop.VkClusterAccelerationStructureInstantiateClusterInfoNV ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkClusterAccelerationStructureInstantiateClusterInfoNV();
        if (ClusterIdOffset != default)
        {
            _internal.clusterIdOffset = ClusterIdOffset;
        }
        if (GeometryIndexOffset != default)
        {
            _internal.geometryIndexOffset = GeometryIndexOffset;
        }
        if (Reserved != default)
        {
            _internal.reserved = Reserved;
        }
        if (ClusterTemplateAddress != (ulong)default)
        {
            _internal.clusterTemplateAddress = ClusterTemplateAddress;
        }
        if (VertexBuffer != default)
        {
            _internal.vertexBuffer = VertexBuffer.ToNative();
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        VertexBuffer?.Dispose();
    }


    public static implicit operator ClusterAccelerationStructureInstantiateClusterInfoNV(AdamantiumVulkan.Core.Interop.VkClusterAccelerationStructureInstantiateClusterInfoNV c)
    {
        return new ClusterAccelerationStructureInstantiateClusterInfoNV(c);
    }

}



