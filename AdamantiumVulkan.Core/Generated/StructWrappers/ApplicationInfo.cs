// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class ApplicationInfo : QBDisposableObject
{
    private MarshaledString _pApplicationName;

    private MarshaledString _pEngineName;

    public ApplicationInfo()
    {
    }

    public ApplicationInfo(AdamantiumVulkan.Core.Interop.VkApplicationInfo _internal)
    {
        PNext = _internal.pNext;
        PApplicationName = new string(_internal.pApplicationName);
        ApplicationVersion = _internal.applicationVersion;
        PEngineName = new string(_internal.pEngineName);
        EngineVersion = _internal.engineVersion;
        ApiVersion = _internal.apiVersion;
    }

    public StructureType SType => StructureType.ApplicationInfo;
    public void* PNext { get; set; }
    public string PApplicationName { get; set; }
    public uint ApplicationVersion { get; set; }
    public string PEngineName { get; set; }
    public uint EngineVersion { get; set; }
    public uint ApiVersion { get; set; }

    public AdamantiumVulkan.Core.Interop.VkApplicationInfo ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkApplicationInfo();
        if (SType != default)
        {
            _internal.sType = SType;
        }
        _internal.pNext = PNext;
        _pApplicationName.Dispose();
        if (PApplicationName != default)
        {
            _pApplicationName = new MarshaledString(PApplicationName, false);
            _internal.pApplicationName = (sbyte*)_pApplicationName;
        }
        if (ApplicationVersion != default)
        {
            _internal.applicationVersion = ApplicationVersion;
        }
        _pEngineName.Dispose();
        if (PEngineName != default)
        {
            _pEngineName = new MarshaledString(PEngineName, false);
            _internal.pEngineName = (sbyte*)_pEngineName;
        }
        if (EngineVersion != default)
        {
            _internal.engineVersion = EngineVersion;
        }
        if (ApiVersion != default)
        {
            _internal.apiVersion = ApiVersion;
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        _pApplicationName.Dispose();
        _pEngineName.Dispose();
    }


    public static implicit operator ApplicationInfo(AdamantiumVulkan.Core.Interop.VkApplicationInfo a)
    {
        return new ApplicationInfo(a);
    }

}



