// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class PipelineBinaryCreateInfoKHR : QBDisposableObject
{
    private NativeStruct<AdamantiumVulkan.Core.Interop.VkPipelineBinaryKeysAndDataKHR> _pKeysAndDataInfo;

    private NativeStruct<AdamantiumVulkan.Core.Interop.VkPipelineCreateInfoKHR> _pPipelineCreateInfo;

    public PipelineBinaryCreateInfoKHR()
    {
    }

    public PipelineBinaryCreateInfoKHR(AdamantiumVulkan.Core.Interop.VkPipelineBinaryCreateInfoKHR _internal)
    {
        SType = _internal.sType;
        PNext = _internal.pNext;
        PKeysAndDataInfo = new PipelineBinaryKeysAndDataKHR(*_internal.pKeysAndDataInfo);
        NativeUtils.Free(_internal.pKeysAndDataInfo);
        Pipeline = new Pipeline(_internal.pipeline);
        PipelineCreateInfo = new PipelineCreateInfoKHR(*_internal.pPipelineCreateInfo);
        NativeUtils.Free(_internal.pPipelineCreateInfo);
    }

    public StructureType SType { get; set; }
    public void* PNext { get; set; }
    public PipelineBinaryKeysAndDataKHR PKeysAndDataInfo { get; set; }
    public Pipeline Pipeline { get; set; }
    public PipelineCreateInfoKHR PipelineCreateInfo { get; set; }

    public AdamantiumVulkan.Core.Interop.VkPipelineBinaryCreateInfoKHR ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkPipelineBinaryCreateInfoKHR();
        if (SType != default)
        {
            _internal.sType = SType;
        }
        _internal.pNext = PNext;
        _pKeysAndDataInfo.Dispose();
        if (PKeysAndDataInfo != default)
        {
            var struct0 = PKeysAndDataInfo.ToNative();
            _pKeysAndDataInfo = new NativeStruct<AdamantiumVulkan.Core.Interop.VkPipelineBinaryKeysAndDataKHR>(struct0);
            _internal.pKeysAndDataInfo = _pKeysAndDataInfo.Handle;
        }
        if (Pipeline != default)
        {
            _internal.pipeline = Pipeline;
        }
        _pPipelineCreateInfo.Dispose();
        if (PipelineCreateInfo != default)
        {
            var struct1 = PipelineCreateInfo.ToNative();
            _pPipelineCreateInfo = new NativeStruct<AdamantiumVulkan.Core.Interop.VkPipelineCreateInfoKHR>(struct1);
            _internal.pPipelineCreateInfo = _pPipelineCreateInfo.Handle;
        }
        return _internal;
    }

    protected override void UnmanagedDisposeOverride()
    {
        _pKeysAndDataInfo.Dispose();
        _pPipelineCreateInfo.Dispose();
    }


    public static implicit operator PipelineBinaryCreateInfoKHR(AdamantiumVulkan.Core.Interop.VkPipelineBinaryCreateInfoKHR p)
    {
        return new PipelineBinaryCreateInfoKHR(p);
    }

}



