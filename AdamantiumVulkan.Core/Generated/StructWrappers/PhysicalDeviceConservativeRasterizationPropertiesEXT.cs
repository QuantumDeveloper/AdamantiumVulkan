// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class PhysicalDeviceConservativeRasterizationPropertiesEXT : QBDisposableObject
{
    public PhysicalDeviceConservativeRasterizationPropertiesEXT()
    {
    }

    public PhysicalDeviceConservativeRasterizationPropertiesEXT(AdamantiumVulkan.Core.Interop.VkPhysicalDeviceConservativeRasterizationPropertiesEXT _internal)
    {
        PNext = _internal.pNext;
        PrimitiveOverestimationSize = _internal.primitiveOverestimationSize;
        MaxExtraPrimitiveOverestimationSize = _internal.maxExtraPrimitiveOverestimationSize;
        ExtraPrimitiveOverestimationSizeGranularity = _internal.extraPrimitiveOverestimationSizeGranularity;
        PrimitiveUnderestimation = _internal.primitiveUnderestimation;
        ConservativePointAndLineRasterization = _internal.conservativePointAndLineRasterization;
        DegenerateTrianglesRasterized = _internal.degenerateTrianglesRasterized;
        DegenerateLinesRasterized = _internal.degenerateLinesRasterized;
        FullyCoveredFragmentShaderInputVariable = _internal.fullyCoveredFragmentShaderInputVariable;
        ConservativeRasterizationPostDepthCoverage = _internal.conservativeRasterizationPostDepthCoverage;
    }

    public StructureType SType => StructureType.PhysicalDeviceConservativeRasterizationPropertiesExt;
    public void* PNext { get; set; }
    public float PrimitiveOverestimationSize { get; set; }
    public float MaxExtraPrimitiveOverestimationSize { get; set; }
    public float ExtraPrimitiveOverestimationSizeGranularity { get; set; }
    public VkBool32 PrimitiveUnderestimation { get; set; }
    public VkBool32 ConservativePointAndLineRasterization { get; set; }
    public VkBool32 DegenerateTrianglesRasterized { get; set; }
    public VkBool32 DegenerateLinesRasterized { get; set; }
    public VkBool32 FullyCoveredFragmentShaderInputVariable { get; set; }
    public VkBool32 ConservativeRasterizationPostDepthCoverage { get; set; }

    public AdamantiumVulkan.Core.Interop.VkPhysicalDeviceConservativeRasterizationPropertiesEXT ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkPhysicalDeviceConservativeRasterizationPropertiesEXT();
        _internal.sType = SType;
        _internal.pNext = PNext;
        _internal.primitiveOverestimationSize = PrimitiveOverestimationSize;
        _internal.maxExtraPrimitiveOverestimationSize = MaxExtraPrimitiveOverestimationSize;
        _internal.extraPrimitiveOverestimationSizeGranularity = ExtraPrimitiveOverestimationSizeGranularity;
        _internal.primitiveUnderestimation = PrimitiveUnderestimation;
        _internal.conservativePointAndLineRasterization = ConservativePointAndLineRasterization;
        _internal.degenerateTrianglesRasterized = DegenerateTrianglesRasterized;
        _internal.degenerateLinesRasterized = DegenerateLinesRasterized;
        _internal.fullyCoveredFragmentShaderInputVariable = FullyCoveredFragmentShaderInputVariable;
        _internal.conservativeRasterizationPostDepthCoverage = ConservativeRasterizationPostDepthCoverage;
        return _internal;
    }

    public static implicit operator PhysicalDeviceConservativeRasterizationPropertiesEXT(AdamantiumVulkan.Core.Interop.VkPhysicalDeviceConservativeRasterizationPropertiesEXT p)
    {
        return new PhysicalDeviceConservativeRasterizationPropertiesEXT(p);
    }

}



