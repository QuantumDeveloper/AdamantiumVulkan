// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class MicromapBuildSizesInfoEXT : QBDisposableObject
{
    public MicromapBuildSizesInfoEXT()
    {
    }

    public MicromapBuildSizesInfoEXT(AdamantiumVulkan.Core.Interop.VkMicromapBuildSizesInfoEXT _internal)
    {
        SType = _internal.sType;
        PNext = _internal.pNext;
        MicromapSize = _internal.micromapSize;
        BuildScratchSize = _internal.buildScratchSize;
        Discardable = _internal.discardable;
    }

    public StructureType SType { get; set; }
    public void* PNext { get; set; }
    public VkDeviceSize MicromapSize { get; set; }
    public VkDeviceSize BuildScratchSize { get; set; }
    public VkBool32 Discardable { get; set; }

    public AdamantiumVulkan.Core.Interop.VkMicromapBuildSizesInfoEXT ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkMicromapBuildSizesInfoEXT();
        if (SType != default)
        {
            _internal.sType = SType;
        }
        _internal.pNext = PNext;
        if (MicromapSize != (ulong)default)
        {
            _internal.micromapSize = MicromapSize;
        }
        if (BuildScratchSize != (ulong)default)
        {
            _internal.buildScratchSize = BuildScratchSize;
        }
        if (Discardable != (uint)default)
        {
            _internal.discardable = Discardable;
        }
        return _internal;
    }

    public static implicit operator MicromapBuildSizesInfoEXT(AdamantiumVulkan.Core.Interop.VkMicromapBuildSizesInfoEXT m)
    {
        return new MicromapBuildSizesInfoEXT(m);
    }

}



