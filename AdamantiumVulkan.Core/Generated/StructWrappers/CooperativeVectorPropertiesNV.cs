// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Core;

public unsafe partial class CooperativeVectorPropertiesNV : QBDisposableObject
{
    public CooperativeVectorPropertiesNV()
    {
    }

    public CooperativeVectorPropertiesNV(AdamantiumVulkan.Core.Interop.VkCooperativeVectorPropertiesNV _internal)
    {
        SType = _internal.sType;
        PNext = _internal.pNext;
        InputType = _internal.inputType;
        InputInterpretation = _internal.inputInterpretation;
        MatrixInterpretation = _internal.matrixInterpretation;
        BiasInterpretation = _internal.biasInterpretation;
        ResultType = _internal.resultType;
        Transpose = _internal.transpose;
    }

    public StructureType SType { get; set; }
    public void* PNext { get; set; }
    public ComponentTypeKHR InputType { get; set; }
    public ComponentTypeKHR InputInterpretation { get; set; }
    public ComponentTypeKHR MatrixInterpretation { get; set; }
    public ComponentTypeKHR BiasInterpretation { get; set; }
    public ComponentTypeKHR ResultType { get; set; }
    public VkBool32 Transpose { get; set; }

    public AdamantiumVulkan.Core.Interop.VkCooperativeVectorPropertiesNV ToNative()
    {
        var _internal = new AdamantiumVulkan.Core.Interop.VkCooperativeVectorPropertiesNV();
        if (SType != default)
        {
            _internal.sType = SType;
        }
        _internal.pNext = PNext;
        if (InputType != default)
        {
            _internal.inputType = InputType;
        }
        if (InputInterpretation != default)
        {
            _internal.inputInterpretation = InputInterpretation;
        }
        if (MatrixInterpretation != default)
        {
            _internal.matrixInterpretation = MatrixInterpretation;
        }
        if (BiasInterpretation != default)
        {
            _internal.biasInterpretation = BiasInterpretation;
        }
        if (ResultType != default)
        {
            _internal.resultType = ResultType;
        }
        if (Transpose != (uint)default)
        {
            _internal.transpose = Transpose;
        }
        return _internal;
    }

    public static implicit operator CooperativeVectorPropertiesNV(AdamantiumVulkan.Core.Interop.VkCooperativeVectorPropertiesNV c)
    {
        return new CooperativeVectorPropertiesNV(c);
    }

}



