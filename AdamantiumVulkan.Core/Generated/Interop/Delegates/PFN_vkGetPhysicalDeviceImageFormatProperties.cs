// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Security;
using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core;

namespace AdamantiumVulkan.Core.Interop;

public unsafe struct PFN_vkGetPhysicalDeviceImageFormatProperties
{
    public PFN_vkGetPhysicalDeviceImageFormatProperties(void* ptr)
    {
        NativePointer = ptr;
        InvokeFunc = (delegate* unmanaged<VkPhysicalDevice_T, Format, ImageType, ImageTiling, VkImageUsageFlags, VkImageCreateFlags, VkImageFormatProperties*, Result>)ptr;
    }

    private delegate* unmanaged<VkPhysicalDevice_T, Format, ImageType, ImageTiling, VkImageUsageFlags, VkImageCreateFlags, VkImageFormatProperties*, Result> InvokeFunc;

    public void* NativePointer { get; }

    public Result Invoke(VkPhysicalDevice_T physicalDevice, Format format, ImageType type, ImageTiling tiling, VkImageUsageFlags usage, VkImageCreateFlags flags, VkImageFormatProperties* pImageFormatProperties)
    {
        return InvokeFunc(physicalDevice, format, type, tiling, usage, flags, pImageFormatProperties);
    }
    public static Result Invoke(void* ptr, VkPhysicalDevice_T physicalDevice, Format format, ImageType type, ImageTiling tiling, VkImageUsageFlags usage, VkImageCreateFlags flags, VkImageFormatProperties* pImageFormatProperties)
    {
        return ((delegate* unmanaged<VkPhysicalDevice_T, Format, ImageType, ImageTiling, VkImageUsageFlags, VkImageCreateFlags, VkImageFormatProperties*, Result>)ptr)(physicalDevice, format, type, tiling, usage, flags, pImageFormatProperties);
    }

    public static explicit operator PFN_vkGetPhysicalDeviceImageFormatProperties(void* ptr) => new(ptr);
}


