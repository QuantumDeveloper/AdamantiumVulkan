// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

namespace AdamantiumVulkan.Core
{
    using System;
    using System.Runtime.InteropServices;
    using AdamantiumVulkan.Core.Interop;

    // File: C:\VulkanSDK\1.1.101.0\Include\vulkan/vulkan_core.h Line: 69 Column: 1
    public partial class Instance
    {
        internal Instance_T __Instance;

        public Instance()
        {
        }

        public Instance(AdamantiumVulkan.Core.Interop.Instance_T __Instance)
        {
            this.__Instance = __Instance;
        }

        public System.IntPtr NativePointer
        {
            get => __Instance.pointer;
        }

        public void DestroyInstance(in AdamantiumVulkan.Core.AllocationCallbacks pAllocator = null)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkDestroyInstance(arg0, arg1);
            Marshal.FreeHGlobal(arg1);
        }

        public Result EnumeratePhysicalDevices(ref uint pPhysicalDeviceCount, PhysicalDevice[] pPhysicalDevices)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pPhysicalDevices, null) ? null : new PhysicalDevice_T[pPhysicalDevices.Length];
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkEnumeratePhysicalDevices(arg0, ref pPhysicalDeviceCount, arg2);
            if (!ReferenceEquals(pPhysicalDevices, null))
            {
                for (int i = 0; i < pPhysicalDevices.Length; i++)
                {
                    pPhysicalDevices[i] = arg2[i];
                }
            }
            return result;
        }

        public System.IntPtr GetInstanceProcAddr(string pName)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetInstanceProcAddr(arg0, pName);
        }

        public Result EnumeratePhysicalDeviceGroups(ref uint pPhysicalDeviceGroupCount, AdamantiumVulkan.Core.PhysicalDeviceGroupProperties pPhysicalDeviceGroupProperties)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkEnumeratePhysicalDeviceGroups(arg0, ref pPhysicalDeviceGroupCount, pPhysicalDeviceGroupProperties);
        }

        public void DestroySurfaceKHR(SurfaceKHR surface, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator = null)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(surface, null) ? new SurfaceKHR_T() : (SurfaceKHR_T)surface;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkDestroySurfaceKHR(arg0, arg1, arg2);
            Marshal.FreeHGlobal(arg2);
        }

        public Result CreateDisplayPlaneSurfaceKHR(in AdamantiumVulkan.Core.DisplaySurfaceCreateInfoKHR pCreateInfo, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator, out SurfaceKHR pSurface)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            SurfaceKHR_T arg3;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkCreateDisplayPlaneSurfaceKHR(arg0, pCreateInfo, arg2, out arg3);
            Marshal.FreeHGlobal(arg2);
            pSurface = arg3;
            return result;
        }

        public Result EnumeratePhysicalDeviceGroupsKHR(ref uint pPhysicalDeviceGroupCount, AdamantiumVulkan.Core.PhysicalDeviceGroupProperties pPhysicalDeviceGroupProperties)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkEnumeratePhysicalDeviceGroupsKHR(arg0, ref pPhysicalDeviceGroupCount, pPhysicalDeviceGroupProperties);
        }

        public Result CreateDebugReportCallbackEXT(in AdamantiumVulkan.Core.DebugReportCallbackCreateInfoEXT pCreateInfo, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator, out DebugReportCallbackEXT pCallback)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            DebugReportCallbackEXT_T arg3;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkCreateDebugReportCallbackEXT(arg0, pCreateInfo, arg2, out arg3);
            Marshal.FreeHGlobal(arg2);
            pCallback = arg3;
            return result;
        }

        public void DestroyDebugReportCallbackEXT(DebugReportCallbackEXT callback, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator = null)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(callback, null) ? new DebugReportCallbackEXT_T() : (DebugReportCallbackEXT_T)callback;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkDestroyDebugReportCallbackEXT(arg0, arg1, arg2);
            Marshal.FreeHGlobal(arg2);
        }

        public void DebugReportMessageEXT(uint flags, DebugReportObjectTypeEXT objectType, ulong @object, ulong location, int messageCode, string pLayerPrefix, string pMessage)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkDebugReportMessageEXT(arg0, flags, objectType, @object, location, messageCode, pLayerPrefix, pMessage);
        }

        public Result CreateDebugUtilsMessengerEXT(in AdamantiumVulkan.Core.DebugUtilsMessengerCreateInfoEXT pCreateInfo, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator, out DebugUtilsMessengerEXT pMessenger)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            DebugUtilsMessengerEXT_T arg3;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkCreateDebugUtilsMessengerEXT(arg0, pCreateInfo, arg2, out arg3);
            Marshal.FreeHGlobal(arg2);
            pMessenger = arg3;
            return result;
        }

        public void DestroyDebugUtilsMessengerEXT(DebugUtilsMessengerEXT messenger, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator = null)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(messenger, null) ? new DebugUtilsMessengerEXT_T() : (DebugUtilsMessengerEXT_T)messenger;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkDestroyDebugUtilsMessengerEXT(arg0, arg1, arg2);
            Marshal.FreeHGlobal(arg2);
        }

        public void SubmitDebugUtilsMessageEXT(DebugUtilsMessageSeverityFlagBitsEXT messageSeverity, uint messageTypes, in AdamantiumVulkan.Core.DebugUtilsMessengerCallbackDataEXT pCallbackData)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkSubmitDebugUtilsMessageEXT(arg0, messageSeverity, messageTypes, pCallbackData);
        }

        public static implicit operator AdamantiumVulkan.Core.Interop.Instance_T(Instance i)
        {
            return i.__Instance;
        }

        public static implicit operator Instance(AdamantiumVulkan.Core.Interop.Instance_T i)
        {
            return new Instance(){__Instance = i};
        }

    }

    // File: C:\VulkanSDK\1.1.101.0\Include\vulkan/vulkan_core.h Line: 70 Column: 1
    public partial class PhysicalDevice
    {
        internal PhysicalDevice_T __Instance;

        public PhysicalDevice()
        {
        }

        public PhysicalDevice(AdamantiumVulkan.Core.Interop.PhysicalDevice_T __Instance)
        {
            this.__Instance = __Instance;
        }

        public System.IntPtr NativePointer
        {
            get => __Instance.pointer;
        }

        public void GetPhysicalDeviceFeatures(out AdamantiumVulkan.Core.PhysicalDeviceFeatures pFeatures)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.PhysicalDeviceFeatures arg1;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceFeatures(arg0, out arg1);
            pFeatures = arg1;
        }

        public void GetPhysicalDeviceFormatProperties(Format format, AdamantiumVulkan.Core.FormatProperties pFormatProperties)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceFormatProperties(arg0, format, pFormatProperties);
        }

        public Result GetPhysicalDeviceImageFormatProperties(Format format, ImageType type, ImageTiling tiling, uint usage, uint flags, AdamantiumVulkan.Core.ImageFormatProperties pImageFormatProperties)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceImageFormatProperties(arg0, format, type, tiling, usage, flags, pImageFormatProperties);
        }

        public void GetPhysicalDeviceProperties(out AdamantiumVulkan.Core.PhysicalDeviceProperties pProperties)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.PhysicalDeviceProperties arg1;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceProperties(arg0, out arg1);
            pProperties = arg1;
        }

        public void GetPhysicalDeviceQueueFamilyProperties(ref uint pQueueFamilyPropertyCount, AdamantiumVulkan.Core.QueueFamilyProperties[] pQueueFamilyProperties)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.QueueFamilyProperties[] arg2 = null;
            if (!ReferenceEquals(pQueueFamilyProperties, null))
            {
                arg2 = new AdamantiumVulkan.Core.Interop.QueueFamilyProperties[pQueueFamilyProperties.Length];
            }
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceQueueFamilyProperties(arg0, ref pQueueFamilyPropertyCount, arg2);
            if (!ReferenceEquals(pQueueFamilyProperties, null))
            {
                for (int i = 0; i < pQueueFamilyProperties.Length; i++)
                {
                    pQueueFamilyProperties[i] = arg2[i];
                }
            }
        }

        public void GetPhysicalDeviceMemoryProperties(out AdamantiumVulkan.Core.PhysicalDeviceMemoryProperties pMemoryProperties)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.PhysicalDeviceMemoryProperties arg1;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceMemoryProperties(arg0, out arg1);
            pMemoryProperties = arg1;
        }

        public Result CreateDevice(in AdamantiumVulkan.Core.DeviceCreateInfo pCreateInfo, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator, out Device pDevice)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            Device_T arg3;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkCreateDevice(arg0, pCreateInfo, arg2, out arg3);
            Marshal.FreeHGlobal(arg2);
            pDevice = arg3;
            return result;
        }

        public Result EnumerateDeviceExtensionProperties(string pLayerName, ref uint pPropertyCount, AdamantiumVulkan.Core.ExtensionProperties pProperties)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkEnumerateDeviceExtensionProperties(arg0, pLayerName, ref pPropertyCount, pProperties);
        }

        public Result EnumerateDeviceLayerProperties(ref uint pPropertyCount, AdamantiumVulkan.Core.LayerProperties pProperties)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkEnumerateDeviceLayerProperties(arg0, ref pPropertyCount, pProperties);
        }

        public void GetPhysicalDeviceSparseImageFormatProperties(Format format, ImageType type, SampleCountFlagBits samples, uint usage, ImageTiling tiling, ref uint pPropertyCount, AdamantiumVulkan.Core.SparseImageFormatProperties pProperties)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceSparseImageFormatProperties(arg0, format, type, samples, usage, tiling, ref pPropertyCount, pProperties);
        }

        public void GetPhysicalDeviceFeatures2(AdamantiumVulkan.Core.PhysicalDeviceFeatures2 pFeatures)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceFeatures2(arg0, pFeatures);
        }

        public void GetPhysicalDeviceProperties2(AdamantiumVulkan.Core.PhysicalDeviceProperties2 pProperties)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceProperties2(arg0, pProperties);
        }

        public void GetPhysicalDeviceFormatProperties2(Format format, AdamantiumVulkan.Core.FormatProperties2 pFormatProperties)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceFormatProperties2(arg0, format, pFormatProperties);
        }

        public Result GetPhysicalDeviceImageFormatProperties2(in AdamantiumVulkan.Core.PhysicalDeviceImageFormatInfo2 pImageFormatInfo, AdamantiumVulkan.Core.ImageFormatProperties2 pImageFormatProperties)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceImageFormatProperties2(arg0, pImageFormatInfo, pImageFormatProperties);
        }

        public void GetPhysicalDeviceQueueFamilyProperties2(ref uint pQueueFamilyPropertyCount, AdamantiumVulkan.Core.QueueFamilyProperties2[] pQueueFamilyProperties)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.QueueFamilyProperties2[] arg2 = null;
            if (!ReferenceEquals(pQueueFamilyProperties, null))
            {
                arg2 = new AdamantiumVulkan.Core.Interop.QueueFamilyProperties2[pQueueFamilyProperties.Length];
            }
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceQueueFamilyProperties2(arg0, ref pQueueFamilyPropertyCount, arg2);
            if (!ReferenceEquals(pQueueFamilyProperties, null))
            {
                for (int i = 0; i < pQueueFamilyProperties.Length; i++)
                {
                    pQueueFamilyProperties[i] = arg2[i];
                }
            }
        }

        public void GetPhysicalDeviceMemoryProperties2(out AdamantiumVulkan.Core.PhysicalDeviceMemoryProperties2 pMemoryProperties)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.PhysicalDeviceMemoryProperties2 arg1;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceMemoryProperties2(arg0, out arg1);
            pMemoryProperties = arg1;
        }

        public void GetPhysicalDeviceSparseImageFormatProperties2(in AdamantiumVulkan.Core.PhysicalDeviceSparseImageFormatInfo2 pFormatInfo, ref uint pPropertyCount, AdamantiumVulkan.Core.SparseImageFormatProperties2 pProperties)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceSparseImageFormatProperties2(arg0, pFormatInfo, ref pPropertyCount, pProperties);
        }

        public void GetPhysicalDeviceExternalBufferProperties(in AdamantiumVulkan.Core.PhysicalDeviceExternalBufferInfo pExternalBufferInfo, AdamantiumVulkan.Core.ExternalBufferProperties pExternalBufferProperties)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceExternalBufferProperties(arg0, pExternalBufferInfo, pExternalBufferProperties);
        }

        public void GetPhysicalDeviceExternalFenceProperties(in AdamantiumVulkan.Core.PhysicalDeviceExternalFenceInfo pExternalFenceInfo, AdamantiumVulkan.Core.ExternalFenceProperties pExternalFenceProperties)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceExternalFenceProperties(arg0, pExternalFenceInfo, pExternalFenceProperties);
        }

        public void GetPhysicalDeviceExternalSemaphoreProperties(in AdamantiumVulkan.Core.PhysicalDeviceExternalSemaphoreInfo pExternalSemaphoreInfo, AdamantiumVulkan.Core.ExternalSemaphoreProperties pExternalSemaphoreProperties)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceExternalSemaphoreProperties(arg0, pExternalSemaphoreInfo, pExternalSemaphoreProperties);
        }

        public Result GetPhysicalDeviceSurfaceSupportKHR(uint queueFamilyIndex, SurfaceKHR surface, ref bool pSupported)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(surface, null) ? new SurfaceKHR_T() : (SurfaceKHR_T)surface;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceSurfaceSupportKHR(arg0, queueFamilyIndex, arg2, ref pSupported);
        }

        public Result GetPhysicalDeviceSurfaceCapabilitiesKHR(SurfaceKHR surface, out AdamantiumVulkan.Core.SurfaceCapabilitiesKHR pSurfaceCapabilities)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(surface, null) ? new SurfaceKHR_T() : (SurfaceKHR_T)surface;
            AdamantiumVulkan.Core.Interop.SurfaceCapabilitiesKHR arg2;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceSurfaceCapabilitiesKHR(arg0, arg1, out arg2);
            pSurfaceCapabilities = arg2;
            return result;
        }

        public Result GetPhysicalDeviceSurfaceFormatsKHR(SurfaceKHR surface, ref uint pSurfaceFormatCount, AdamantiumVulkan.Core.SurfaceFormatKHR[] pSurfaceFormats)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(surface, null) ? new SurfaceKHR_T() : (SurfaceKHR_T)surface;
            AdamantiumVulkan.Core.Interop.SurfaceFormatKHR[] arg3 = null;
            if (!ReferenceEquals(pSurfaceFormats, null))
            {
                arg3 = new AdamantiumVulkan.Core.Interop.SurfaceFormatKHR[pSurfaceFormats.Length];
            }
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceSurfaceFormatsKHR(arg0, arg1, ref pSurfaceFormatCount, arg3);
            if (!ReferenceEquals(pSurfaceFormats, null))
            {
                for (int i = 0; i < pSurfaceFormats.Length; i++)
                {
                    pSurfaceFormats[i] = arg3[i];
                }
            }
            return result;
        }

        public Result GetPhysicalDeviceSurfacePresentModesKHR(SurfaceKHR surface, ref uint pPresentModeCount, PresentModeKHR[] pPresentModes)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(surface, null) ? new SurfaceKHR_T() : (SurfaceKHR_T)surface;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceSurfacePresentModesKHR(arg0, arg1, ref pPresentModeCount, pPresentModes);
        }

        public Result GetPhysicalDevicePresentRectanglesKHR(SurfaceKHR surface, ref uint pRectCount, AdamantiumVulkan.Core.Rect2D pRects)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(surface, null) ? new SurfaceKHR_T() : (SurfaceKHR_T)surface;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDevicePresentRectanglesKHR(arg0, arg1, ref pRectCount, pRects);
        }

        public Result GetPhysicalDeviceDisplayPropertiesKHR(ref uint pPropertyCount, AdamantiumVulkan.Core.DisplayPropertiesKHR pProperties)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceDisplayPropertiesKHR(arg0, ref pPropertyCount, pProperties);
        }

        public Result GetPhysicalDeviceDisplayPlanePropertiesKHR(ref uint pPropertyCount, AdamantiumVulkan.Core.DisplayPlanePropertiesKHR pProperties)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceDisplayPlanePropertiesKHR(arg0, ref pPropertyCount, pProperties);
        }

        public Result GetDisplayPlaneSupportedDisplaysKHR(uint planeIndex, ref uint pDisplayCount, out DisplayKHR pDisplays)
        {
            var arg0 = this;
            DisplayKHR_T arg3;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetDisplayPlaneSupportedDisplaysKHR(arg0, planeIndex, ref pDisplayCount, out arg3);
            pDisplays = arg3;
            return result;
        }

        public Result GetDisplayModePropertiesKHR(DisplayKHR display, ref uint pPropertyCount, AdamantiumVulkan.Core.DisplayModePropertiesKHR pProperties)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(display, null) ? new DisplayKHR_T() : (DisplayKHR_T)display;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetDisplayModePropertiesKHR(arg0, arg1, ref pPropertyCount, pProperties);
        }

        public Result CreateDisplayModeKHR(DisplayKHR display, in AdamantiumVulkan.Core.DisplayModeCreateInfoKHR pCreateInfo, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator, out DisplayModeKHR pMode)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(display, null) ? new DisplayKHR_T() : (DisplayKHR_T)display;
            var arg3 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            DisplayModeKHR_T arg4;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkCreateDisplayModeKHR(arg0, arg1, pCreateInfo, arg3, out arg4);
            Marshal.FreeHGlobal(arg3);
            pMode = arg4;
            return result;
        }

        public Result GetDisplayPlaneCapabilitiesKHR(DisplayModeKHR mode, uint planeIndex, AdamantiumVulkan.Core.DisplayPlaneCapabilitiesKHR pCapabilities)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(mode, null) ? new DisplayModeKHR_T() : (DisplayModeKHR_T)mode;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetDisplayPlaneCapabilitiesKHR(arg0, arg1, planeIndex, pCapabilities);
        }

        public void GetPhysicalDeviceFeatures2KHR(AdamantiumVulkan.Core.PhysicalDeviceFeatures2 pFeatures)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceFeatures2KHR(arg0, pFeatures);
        }

        public void GetPhysicalDeviceProperties2KHR(AdamantiumVulkan.Core.PhysicalDeviceProperties2 pProperties)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceProperties2KHR(arg0, pProperties);
        }

        public void GetPhysicalDeviceFormatProperties2KHR(Format format, AdamantiumVulkan.Core.FormatProperties2 pFormatProperties)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceFormatProperties2KHR(arg0, format, pFormatProperties);
        }

        public Result GetPhysicalDeviceImageFormatProperties2KHR(in AdamantiumVulkan.Core.PhysicalDeviceImageFormatInfo2 pImageFormatInfo, AdamantiumVulkan.Core.ImageFormatProperties2 pImageFormatProperties)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceImageFormatProperties2KHR(arg0, pImageFormatInfo, pImageFormatProperties);
        }

        public void GetPhysicalDeviceQueueFamilyProperties2KHR(ref uint pQueueFamilyPropertyCount, AdamantiumVulkan.Core.QueueFamilyProperties2 pQueueFamilyProperties)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceQueueFamilyProperties2KHR(arg0, ref pQueueFamilyPropertyCount, pQueueFamilyProperties);
        }

        public void GetPhysicalDeviceMemoryProperties2KHR(out AdamantiumVulkan.Core.PhysicalDeviceMemoryProperties2 pMemoryProperties)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.PhysicalDeviceMemoryProperties2 arg1;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceMemoryProperties2KHR(arg0, out arg1);
            pMemoryProperties = arg1;
        }

        public void GetPhysicalDeviceSparseImageFormatProperties2KHR(in AdamantiumVulkan.Core.PhysicalDeviceSparseImageFormatInfo2 pFormatInfo, ref uint pPropertyCount, AdamantiumVulkan.Core.SparseImageFormatProperties2 pProperties)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceSparseImageFormatProperties2KHR(arg0, pFormatInfo, ref pPropertyCount, pProperties);
        }

        public void GetPhysicalDeviceExternalBufferPropertiesKHR(in AdamantiumVulkan.Core.PhysicalDeviceExternalBufferInfo pExternalBufferInfo, AdamantiumVulkan.Core.ExternalBufferProperties pExternalBufferProperties)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceExternalBufferPropertiesKHR(arg0, pExternalBufferInfo, pExternalBufferProperties);
        }

        public void GetPhysicalDeviceExternalSemaphorePropertiesKHR(in AdamantiumVulkan.Core.PhysicalDeviceExternalSemaphoreInfo pExternalSemaphoreInfo, AdamantiumVulkan.Core.ExternalSemaphoreProperties pExternalSemaphoreProperties)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceExternalSemaphorePropertiesKHR(arg0, pExternalSemaphoreInfo, pExternalSemaphoreProperties);
        }

        public void GetPhysicalDeviceExternalFencePropertiesKHR(in AdamantiumVulkan.Core.PhysicalDeviceExternalFenceInfo pExternalFenceInfo, AdamantiumVulkan.Core.ExternalFenceProperties pExternalFenceProperties)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceExternalFencePropertiesKHR(arg0, pExternalFenceInfo, pExternalFenceProperties);
        }

        public Result GetPhysicalDeviceSurfaceCapabilities2KHR(in AdamantiumVulkan.Core.PhysicalDeviceSurfaceInfo2KHR pSurfaceInfo, AdamantiumVulkan.Core.SurfaceCapabilities2KHR pSurfaceCapabilities)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceSurfaceCapabilities2KHR(arg0, pSurfaceInfo, pSurfaceCapabilities);
        }

        public Result GetPhysicalDeviceSurfaceFormats2KHR(in AdamantiumVulkan.Core.PhysicalDeviceSurfaceInfo2KHR pSurfaceInfo, ref uint pSurfaceFormatCount, AdamantiumVulkan.Core.SurfaceFormat2KHR pSurfaceFormats)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceSurfaceFormats2KHR(arg0, pSurfaceInfo, ref pSurfaceFormatCount, pSurfaceFormats);
        }

        public Result GetPhysicalDeviceDisplayProperties2KHR(ref uint pPropertyCount, AdamantiumVulkan.Core.DisplayProperties2KHR pProperties)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceDisplayProperties2KHR(arg0, ref pPropertyCount, pProperties);
        }

        public Result GetPhysicalDeviceDisplayPlaneProperties2KHR(ref uint pPropertyCount, AdamantiumVulkan.Core.DisplayPlaneProperties2KHR pProperties)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceDisplayPlaneProperties2KHR(arg0, ref pPropertyCount, pProperties);
        }

        public Result GetDisplayModeProperties2KHR(DisplayKHR display, ref uint pPropertyCount, AdamantiumVulkan.Core.DisplayModeProperties2KHR pProperties)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(display, null) ? new DisplayKHR_T() : (DisplayKHR_T)display;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetDisplayModeProperties2KHR(arg0, arg1, ref pPropertyCount, pProperties);
        }

        public Result GetDisplayPlaneCapabilities2KHR(in AdamantiumVulkan.Core.DisplayPlaneInfo2KHR pDisplayPlaneInfo, AdamantiumVulkan.Core.DisplayPlaneCapabilities2KHR pCapabilities)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetDisplayPlaneCapabilities2KHR(arg0, pDisplayPlaneInfo, pCapabilities);
        }

        public Result GetPhysicalDeviceExternalImageFormatPropertiesNV(Format format, ImageType type, ImageTiling tiling, uint usage, uint flags, uint externalHandleType, AdamantiumVulkan.Core.ExternalImageFormatPropertiesNV pExternalImageFormatProperties)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceExternalImageFormatPropertiesNV(arg0, format, type, tiling, usage, flags, externalHandleType, pExternalImageFormatProperties);
        }

        public void GetPhysicalDeviceGeneratedCommandsPropertiesNVX(AdamantiumVulkan.Core.DeviceGeneratedCommandsFeaturesNVX pFeatures, AdamantiumVulkan.Core.DeviceGeneratedCommandsLimitsNVX pLimits)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceGeneratedCommandsPropertiesNVX(arg0, pFeatures, pLimits);
        }

        public Result ReleaseDisplayEXT(DisplayKHR display)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(display, null) ? new DisplayKHR_T() : (DisplayKHR_T)display;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkReleaseDisplayEXT(arg0, arg1);
        }

        public Result GetPhysicalDeviceSurfaceCapabilities2EXT(SurfaceKHR surface, AdamantiumVulkan.Core.SurfaceCapabilities2EXT pSurfaceCapabilities)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(surface, null) ? new SurfaceKHR_T() : (SurfaceKHR_T)surface;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceSurfaceCapabilities2EXT(arg0, arg1, pSurfaceCapabilities);
        }

        public void GetPhysicalDeviceMultisamplePropertiesEXT(SampleCountFlagBits samples, AdamantiumVulkan.Core.MultisamplePropertiesEXT pMultisampleProperties)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceMultisamplePropertiesEXT(arg0, samples, pMultisampleProperties);
        }

        public Result GetPhysicalDeviceCalibrateableTimeDomainsEXT(ref uint pTimeDomainCount, ref TimeDomainEXT pTimeDomains)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceCalibrateableTimeDomainsEXT(arg0, ref pTimeDomainCount, ref pTimeDomains);
        }

        public Result GetPhysicalDeviceCooperativeMatrixPropertiesNV(ref uint pPropertyCount, AdamantiumVulkan.Core.CooperativeMatrixPropertiesNV pProperties)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPhysicalDeviceCooperativeMatrixPropertiesNV(arg0, ref pPropertyCount, pProperties);
        }

        public static implicit operator AdamantiumVulkan.Core.Interop.PhysicalDevice_T(PhysicalDevice p)
        {
            return p.__Instance;
        }

        public static implicit operator PhysicalDevice(AdamantiumVulkan.Core.Interop.PhysicalDevice_T p)
        {
            return new PhysicalDevice(){__Instance = p};
        }

    }

    // File: C:\VulkanSDK\1.1.101.0\Include\vulkan/vulkan_core.h Line: 71 Column: 1
    public partial class Device
    {
        internal Device_T __Instance;

        public Device()
        {
        }

        public Device(AdamantiumVulkan.Core.Interop.Device_T __Instance)
        {
            this.__Instance = __Instance;
        }

        public System.IntPtr NativePointer
        {
            get => __Instance.pointer;
        }

        public System.IntPtr GetDeviceProcAddr(string pName)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetDeviceProcAddr(arg0, pName);
        }

        public void DestroyDevice(in AdamantiumVulkan.Core.AllocationCallbacks pAllocator = null)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkDestroyDevice(arg0, arg1);
            Marshal.FreeHGlobal(arg1);
        }

        public void GetDeviceQueue(uint queueFamilyIndex, uint queueIndex, out Queue pQueue)
        {
            var arg0 = this;
            Queue_T arg3;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetDeviceQueue(arg0, queueFamilyIndex, queueIndex, out arg3);
            pQueue = arg3;
        }

        public Result DeviceWaitIdle()
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkDeviceWaitIdle(arg0);
        }

        public Result AllocateMemory(in AdamantiumVulkan.Core.MemoryAllocateInfo pAllocateInfo, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator, out DeviceMemory pMemory)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            DeviceMemory_T arg3;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkAllocateMemory(arg0, pAllocateInfo, arg2, out arg3);
            Marshal.FreeHGlobal(arg2);
            pMemory = arg3;
            return result;
        }

        public void FreeMemory(DeviceMemory memory, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator = null)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(memory, null) ? new DeviceMemory_T() : (DeviceMemory_T)memory;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkFreeMemory(arg0, arg1, arg2);
            Marshal.FreeHGlobal(arg2);
        }

        public Result MapMemory(DeviceMemory memory, ulong offset, ulong size, uint flags, out System.IntPtr ppData)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(memory, null) ? new DeviceMemory_T() : (DeviceMemory_T)memory;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkMapMemory(arg0, arg1, offset, size, flags, out ppData);
        }

        public void UnmapMemory(DeviceMemory memory)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(memory, null) ? new DeviceMemory_T() : (DeviceMemory_T)memory;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkUnmapMemory(arg0, arg1);
        }

        public Result FlushMappedMemoryRanges(uint memoryRangeCount, in AdamantiumVulkan.Core.MappedMemoryRange pMemoryRanges)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkFlushMappedMemoryRanges(arg0, memoryRangeCount, pMemoryRanges);
        }

        public Result InvalidateMappedMemoryRanges(uint memoryRangeCount, in AdamantiumVulkan.Core.MappedMemoryRange pMemoryRanges)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkInvalidateMappedMemoryRanges(arg0, memoryRangeCount, pMemoryRanges);
        }

        public void GetDeviceMemoryCommitment(DeviceMemory memory, ref ulong pCommittedMemoryInBytes)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(memory, null) ? new DeviceMemory_T() : (DeviceMemory_T)memory;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetDeviceMemoryCommitment(arg0, arg1, ref pCommittedMemoryInBytes);
        }

        public Result BindBufferMemory(Buffer buffer, DeviceMemory memory, ulong memoryOffset)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(buffer, null) ? new Buffer_T() : (Buffer_T)buffer;
            var arg2 = ReferenceEquals(memory, null) ? new DeviceMemory_T() : (DeviceMemory_T)memory;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkBindBufferMemory(arg0, arg1, arg2, memoryOffset);
        }

        public Result BindImageMemory(Image image, DeviceMemory memory, ulong memoryOffset)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(image, null) ? new Image_T() : (Image_T)image;
            var arg2 = ReferenceEquals(memory, null) ? new DeviceMemory_T() : (DeviceMemory_T)memory;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkBindImageMemory(arg0, arg1, arg2, memoryOffset);
        }

        public void GetBufferMemoryRequirements(Buffer buffer, out AdamantiumVulkan.Core.MemoryRequirements pMemoryRequirements)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(buffer, null) ? new Buffer_T() : (Buffer_T)buffer;
            AdamantiumVulkan.Core.Interop.MemoryRequirements arg2;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetBufferMemoryRequirements(arg0, arg1, out arg2);
            pMemoryRequirements = arg2;
        }

        public void GetImageMemoryRequirements(Image image, out AdamantiumVulkan.Core.MemoryRequirements pMemoryRequirements)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(image, null) ? new Image_T() : (Image_T)image;
            AdamantiumVulkan.Core.Interop.MemoryRequirements arg2;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetImageMemoryRequirements(arg0, arg1, out arg2);
            pMemoryRequirements = arg2;
        }

        public void GetImageSparseMemoryRequirements(Image image, ref uint pSparseMemoryRequirementCount, AdamantiumVulkan.Core.SparseImageMemoryRequirements pSparseMemoryRequirements)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(image, null) ? new Image_T() : (Image_T)image;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetImageSparseMemoryRequirements(arg0, arg1, ref pSparseMemoryRequirementCount, pSparseMemoryRequirements);
        }

        public Result CreateFence(in AdamantiumVulkan.Core.FenceCreateInfo pCreateInfo, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator, out Fence pFence)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            Fence_T arg3;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkCreateFence(arg0, pCreateInfo, arg2, out arg3);
            Marshal.FreeHGlobal(arg2);
            pFence = arg3;
            return result;
        }

        public void DestroyFence(Fence fence, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator = null)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(fence, null) ? new Fence_T() : (Fence_T)fence;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkDestroyFence(arg0, arg1, arg2);
            Marshal.FreeHGlobal(arg2);
        }

        public Result ResetFences(uint fenceCount, Fence[] pFences)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pFences, null) ? null : new Fence_T[pFences.Length];
            if (!ReferenceEquals(pFences, null))
            {
                for (int i = 0; i < pFences.Length; i++)
                {
                    arg2[i] = pFences[i];
                }
            }
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkResetFences(arg0, fenceCount, arg2);
        }

        public Result GetFenceStatus(Fence fence)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(fence, null) ? new Fence_T() : (Fence_T)fence;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetFenceStatus(arg0, arg1);
        }

        public Result WaitForFences(uint fenceCount, Fence[] pFences, bool waitAll, ulong timeout)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pFences, null) ? null : new Fence_T[pFences.Length];
            if (!ReferenceEquals(pFences, null))
            {
                for (int i = 0; i < pFences.Length; i++)
                {
                    arg2[i] = pFences[i];
                }
            }
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkWaitForFences(arg0, fenceCount, arg2, waitAll, timeout);
        }

        public Result CreateSemaphore(in AdamantiumVulkan.Core.SemaphoreCreateInfo pCreateInfo, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator, out Semaphore pSemaphore)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            Semaphore_T arg3;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkCreateSemaphore(arg0, pCreateInfo, arg2, out arg3);
            Marshal.FreeHGlobal(arg2);
            pSemaphore = arg3;
            return result;
        }

        public void DestroySemaphore(Semaphore semaphore, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator = null)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(semaphore, null) ? new Semaphore_T() : (Semaphore_T)semaphore;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkDestroySemaphore(arg0, arg1, arg2);
            Marshal.FreeHGlobal(arg2);
        }

        public Result CreateEvent(in AdamantiumVulkan.Core.EventCreateInfo pCreateInfo, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator, out Event pEvent)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            Event_T arg3;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkCreateEvent(arg0, pCreateInfo, arg2, out arg3);
            Marshal.FreeHGlobal(arg2);
            pEvent = arg3;
            return result;
        }

        public void DestroyEvent(Event @event, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator = null)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(@event, null) ? new Event_T() : (Event_T)@event;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkDestroyEvent(arg0, arg1, arg2);
            Marshal.FreeHGlobal(arg2);
        }

        public Result GetEventStatus(Event @event)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(@event, null) ? new Event_T() : (Event_T)@event;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetEventStatus(arg0, arg1);
        }

        public Result SetEvent(Event @event)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(@event, null) ? new Event_T() : (Event_T)@event;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkSetEvent(arg0, arg1);
        }

        public Result ResetEvent(Event @event)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(@event, null) ? new Event_T() : (Event_T)@event;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkResetEvent(arg0, arg1);
        }

        public Result CreateQueryPool(in AdamantiumVulkan.Core.QueryPoolCreateInfo pCreateInfo, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator, out QueryPool pQueryPool)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            QueryPool_T arg3;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkCreateQueryPool(arg0, pCreateInfo, arg2, out arg3);
            Marshal.FreeHGlobal(arg2);
            pQueryPool = arg3;
            return result;
        }

        public void DestroyQueryPool(QueryPool queryPool, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator = null)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(queryPool, null) ? new QueryPool_T() : (QueryPool_T)queryPool;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkDestroyQueryPool(arg0, arg1, arg2);
            Marshal.FreeHGlobal(arg2);
        }

        public Result GetQueryPoolResults(QueryPool queryPool, uint firstQuery, uint queryCount, ulong dataSize, ref System.IntPtr pData, ulong stride, uint flags)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(queryPool, null) ? new QueryPool_T() : (QueryPool_T)queryPool;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetQueryPoolResults(arg0, arg1, firstQuery, queryCount, dataSize, ref pData, stride, flags);
        }

        public Result CreateBuffer(in AdamantiumVulkan.Core.BufferCreateInfo pCreateInfo, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator, out Buffer pBuffer)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            Buffer_T arg3;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkCreateBuffer(arg0, pCreateInfo, arg2, out arg3);
            Marshal.FreeHGlobal(arg2);
            pBuffer = arg3;
            return result;
        }

        public void DestroyBuffer(Buffer buffer, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator = null)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(buffer, null) ? new Buffer_T() : (Buffer_T)buffer;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkDestroyBuffer(arg0, arg1, arg2);
            Marshal.FreeHGlobal(arg2);
        }

        public Result CreateBufferView(in AdamantiumVulkan.Core.BufferViewCreateInfo pCreateInfo, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator, out BufferView pView)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            BufferView_T arg3;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkCreateBufferView(arg0, pCreateInfo, arg2, out arg3);
            Marshal.FreeHGlobal(arg2);
            pView = arg3;
            return result;
        }

        public void DestroyBufferView(BufferView bufferView, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator = null)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(bufferView, null) ? new BufferView_T() : (BufferView_T)bufferView;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkDestroyBufferView(arg0, arg1, arg2);
            Marshal.FreeHGlobal(arg2);
        }

        public Result CreateImage(in AdamantiumVulkan.Core.ImageCreateInfo pCreateInfo, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator, out Image pImage)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            Image_T arg3;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkCreateImage(arg0, pCreateInfo, arg2, out arg3);
            Marshal.FreeHGlobal(arg2);
            pImage = arg3;
            return result;
        }

        public void DestroyImage(Image image, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator = null)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(image, null) ? new Image_T() : (Image_T)image;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkDestroyImage(arg0, arg1, arg2);
            Marshal.FreeHGlobal(arg2);
        }

        public void GetImageSubresourceLayout(Image image, in AdamantiumVulkan.Core.ImageSubresource pSubresource, AdamantiumVulkan.Core.SubresourceLayout pLayout)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(image, null) ? new Image_T() : (Image_T)image;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetImageSubresourceLayout(arg0, arg1, pSubresource, pLayout);
        }

        public Result CreateImageView(in AdamantiumVulkan.Core.ImageViewCreateInfo pCreateInfo, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator, out ImageView pView)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            ImageView_T arg3;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkCreateImageView(arg0, pCreateInfo, arg2, out arg3);
            Marshal.FreeHGlobal(arg2);
            pView = arg3;
            return result;
        }

        public void DestroyImageView(ImageView imageView, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator = null)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(imageView, null) ? new ImageView_T() : (ImageView_T)imageView;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkDestroyImageView(arg0, arg1, arg2);
            Marshal.FreeHGlobal(arg2);
        }

        public Result CreateShaderModule(in AdamantiumVulkan.Core.ShaderModuleCreateInfo pCreateInfo, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator, out ShaderModule pShaderModule)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            ShaderModule_T arg3;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkCreateShaderModule(arg0, pCreateInfo, arg2, out arg3);
            Marshal.FreeHGlobal(arg2);
            pShaderModule = arg3;
            return result;
        }

        public void DestroyShaderModule(ShaderModule shaderModule, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator = null)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(shaderModule, null) ? new ShaderModule_T() : (ShaderModule_T)shaderModule;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkDestroyShaderModule(arg0, arg1, arg2);
            Marshal.FreeHGlobal(arg2);
        }

        public Result CreatePipelineCache(in AdamantiumVulkan.Core.PipelineCacheCreateInfo pCreateInfo, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator, out PipelineCache pPipelineCache)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            PipelineCache_T arg3;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkCreatePipelineCache(arg0, pCreateInfo, arg2, out arg3);
            Marshal.FreeHGlobal(arg2);
            pPipelineCache = arg3;
            return result;
        }

        public void DestroyPipelineCache(PipelineCache pipelineCache, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator = null)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(pipelineCache, null) ? new PipelineCache_T() : (PipelineCache_T)pipelineCache;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkDestroyPipelineCache(arg0, arg1, arg2);
            Marshal.FreeHGlobal(arg2);
        }

        public Result GetPipelineCacheData(PipelineCache pipelineCache, ref ulong pDataSize, ref System.IntPtr pData)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(pipelineCache, null) ? new PipelineCache_T() : (PipelineCache_T)pipelineCache;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPipelineCacheData(arg0, arg1, ref pDataSize, ref pData);
        }

        public Result MergePipelineCaches(PipelineCache dstCache, uint srcCacheCount, in PipelineCache pSrcCaches)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(dstCache, null) ? new PipelineCache_T() : (PipelineCache_T)dstCache;
            var arg3 = ReferenceEquals(pSrcCaches, null) ? new PipelineCache_T() : (PipelineCache_T)pSrcCaches;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkMergePipelineCaches(arg0, arg1, srcCacheCount, arg3);
        }

        public Result CreateGraphicsPipelines(PipelineCache pipelineCache, uint createInfoCount, in AdamantiumVulkan.Core.GraphicsPipelineCreateInfo pCreateInfos, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator, out Pipeline pPipelines)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(pipelineCache, null) ? new PipelineCache_T() : (PipelineCache_T)pipelineCache;
            var arg4 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            Pipeline_T arg5;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkCreateGraphicsPipelines(arg0, arg1, createInfoCount, pCreateInfos, arg4, out arg5);
            Marshal.FreeHGlobal(arg4);
            pPipelines = arg5;
            return result;
        }

        public Result CreateComputePipelines(PipelineCache pipelineCache, uint createInfoCount, in AdamantiumVulkan.Core.ComputePipelineCreateInfo pCreateInfos, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator, out Pipeline pPipelines)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(pipelineCache, null) ? new PipelineCache_T() : (PipelineCache_T)pipelineCache;
            var arg4 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            Pipeline_T arg5;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkCreateComputePipelines(arg0, arg1, createInfoCount, pCreateInfos, arg4, out arg5);
            Marshal.FreeHGlobal(arg4);
            pPipelines = arg5;
            return result;
        }

        public void DestroyPipeline(Pipeline pipeline, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator = null)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(pipeline, null) ? new Pipeline_T() : (Pipeline_T)pipeline;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkDestroyPipeline(arg0, arg1, arg2);
            Marshal.FreeHGlobal(arg2);
        }

        public Result CreatePipelineLayout(in AdamantiumVulkan.Core.PipelineLayoutCreateInfo pCreateInfo, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator, out PipelineLayout pPipelineLayout)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            PipelineLayout_T arg3;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkCreatePipelineLayout(arg0, pCreateInfo, arg2, out arg3);
            Marshal.FreeHGlobal(arg2);
            pPipelineLayout = arg3;
            return result;
        }

        public void DestroyPipelineLayout(PipelineLayout pipelineLayout, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator = null)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(pipelineLayout, null) ? new PipelineLayout_T() : (PipelineLayout_T)pipelineLayout;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkDestroyPipelineLayout(arg0, arg1, arg2);
            Marshal.FreeHGlobal(arg2);
        }

        public Result CreateSampler(in AdamantiumVulkan.Core.SamplerCreateInfo pCreateInfo, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator, out Sampler pSampler)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            Sampler_T arg3;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkCreateSampler(arg0, pCreateInfo, arg2, out arg3);
            Marshal.FreeHGlobal(arg2);
            pSampler = arg3;
            return result;
        }

        public void DestroySampler(Sampler sampler, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator = null)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(sampler, null) ? new Sampler_T() : (Sampler_T)sampler;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkDestroySampler(arg0, arg1, arg2);
            Marshal.FreeHGlobal(arg2);
        }

        public Result CreateDescriptorSetLayout(in AdamantiumVulkan.Core.DescriptorSetLayoutCreateInfo pCreateInfo, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator, out DescriptorSetLayout pSetLayout)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            DescriptorSetLayout_T arg3;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkCreateDescriptorSetLayout(arg0, pCreateInfo, arg2, out arg3);
            Marshal.FreeHGlobal(arg2);
            pSetLayout = arg3;
            return result;
        }

        public void DestroyDescriptorSetLayout(DescriptorSetLayout descriptorSetLayout, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(descriptorSetLayout, null) ? new DescriptorSetLayout_T() : (DescriptorSetLayout_T)descriptorSetLayout;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkDestroyDescriptorSetLayout(arg0, arg1, arg2);
            Marshal.FreeHGlobal(arg2);
        }

        public Result CreateDescriptorPool(in AdamantiumVulkan.Core.DescriptorPoolCreateInfo pCreateInfo, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator, out DescriptorPool pDescriptorPool)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            DescriptorPool_T arg3;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkCreateDescriptorPool(arg0, pCreateInfo, arg2, out arg3);
            Marshal.FreeHGlobal(arg2);
            pDescriptorPool = arg3;
            return result;
        }

        public void DestroyDescriptorPool(DescriptorPool descriptorPool, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator = null)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(descriptorPool, null) ? new DescriptorPool_T() : (DescriptorPool_T)descriptorPool;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkDestroyDescriptorPool(arg0, arg1, arg2);
            Marshal.FreeHGlobal(arg2);
        }

        public Result ResetDescriptorPool(DescriptorPool descriptorPool, uint flags)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(descriptorPool, null) ? new DescriptorPool_T() : (DescriptorPool_T)descriptorPool;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkResetDescriptorPool(arg0, arg1, flags);
        }

        public Result AllocateDescriptorSets(in AdamantiumVulkan.Core.DescriptorSetAllocateInfo pAllocateInfo, out DescriptorSet pDescriptorSets)
        {
            var arg0 = this;
            DescriptorSet_T arg2;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkAllocateDescriptorSets(arg0, pAllocateInfo, out arg2);
            pDescriptorSets = arg2;
            return result;
        }

        public Result FreeDescriptorSets(DescriptorPool descriptorPool, uint descriptorSetCount, in DescriptorSet pDescriptorSets)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(descriptorPool, null) ? new DescriptorPool_T() : (DescriptorPool_T)descriptorPool;
            var arg3 = ReferenceEquals(pDescriptorSets, null) ? new DescriptorSet_T() : (DescriptorSet_T)pDescriptorSets;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkFreeDescriptorSets(arg0, arg1, descriptorSetCount, arg3);
        }

        public void UpdateDescriptorSets(uint descriptorWriteCount, in AdamantiumVulkan.Core.WriteDescriptorSet pDescriptorWrites, uint descriptorCopyCount, in AdamantiumVulkan.Core.CopyDescriptorSet pDescriptorCopies)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkUpdateDescriptorSets(arg0, descriptorWriteCount, pDescriptorWrites, descriptorCopyCount, pDescriptorCopies);
        }

        public Result CreateFramebuffer(in AdamantiumVulkan.Core.FramebufferCreateInfo pCreateInfo, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator, out Framebuffer pFramebuffer)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            Framebuffer_T arg3;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkCreateFramebuffer(arg0, pCreateInfo, arg2, out arg3);
            Marshal.FreeHGlobal(arg2);
            pFramebuffer = arg3;
            return result;
        }

        public void DestroyFramebuffer(Framebuffer framebuffer, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator = null)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(framebuffer, null) ? new Framebuffer_T() : (Framebuffer_T)framebuffer;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkDestroyFramebuffer(arg0, arg1, arg2);
            Marshal.FreeHGlobal(arg2);
        }

        public Result CreateRenderPass(in AdamantiumVulkan.Core.RenderPassCreateInfo pCreateInfo, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator, out RenderPass pRenderPass)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            RenderPass_T arg3;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkCreateRenderPass(arg0, pCreateInfo, arg2, out arg3);
            Marshal.FreeHGlobal(arg2);
            pRenderPass = arg3;
            return result;
        }

        public void DestroyRenderPass(RenderPass renderPass, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator = null)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(renderPass, null) ? new RenderPass_T() : (RenderPass_T)renderPass;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkDestroyRenderPass(arg0, arg1, arg2);
            Marshal.FreeHGlobal(arg2);
        }

        public void GetRenderAreaGranularity(RenderPass renderPass, AdamantiumVulkan.Core.Extent2D pGranularity)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(renderPass, null) ? new RenderPass_T() : (RenderPass_T)renderPass;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetRenderAreaGranularity(arg0, arg1, pGranularity);
        }

        public Result CreateCommandPool(in AdamantiumVulkan.Core.CommandPoolCreateInfo pCreateInfo, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator, out CommandPool pCommandPool)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            CommandPool_T arg3;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkCreateCommandPool(arg0, pCreateInfo, arg2, out arg3);
            Marshal.FreeHGlobal(arg2);
            pCommandPool = arg3;
            return result;
        }

        public void DestroyCommandPool(CommandPool commandPool, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator = null)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(commandPool, null) ? new CommandPool_T() : (CommandPool_T)commandPool;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkDestroyCommandPool(arg0, arg1, arg2);
            Marshal.FreeHGlobal(arg2);
        }

        public Result ResetCommandPool(CommandPool commandPool, uint flags)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(commandPool, null) ? new CommandPool_T() : (CommandPool_T)commandPool;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkResetCommandPool(arg0, arg1, flags);
        }

        public Result AllocateCommandBuffers(in AdamantiumVulkan.Core.CommandBufferAllocateInfo pAllocateInfo, CommandBuffer[] pCommandBuffers)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pCommandBuffers, null) ? null : new CommandBuffer_T[pCommandBuffers.Length];
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkAllocateCommandBuffers(arg0, pAllocateInfo, arg2);
            if (!ReferenceEquals(pCommandBuffers, null))
            {
                for (int i = 0; i < pCommandBuffers.Length; i++)
                {
                    pCommandBuffers[i] = arg2[i];
                }
            }
            return result;
        }

        public void FreeCommandBuffers(CommandPool commandPool, uint commandBufferCount, CommandBuffer[] pCommandBuffers)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(commandPool, null) ? new CommandPool_T() : (CommandPool_T)commandPool;
            var arg3 = ReferenceEquals(pCommandBuffers, null) ? null : new CommandBuffer_T[pCommandBuffers.Length];
            if (!ReferenceEquals(pCommandBuffers, null))
            {
                for (int i = 0; i < pCommandBuffers.Length; i++)
                {
                    arg3[i] = pCommandBuffers[i];
                }
            }
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkFreeCommandBuffers(arg0, arg1, commandBufferCount, arg3);
        }

        public Result BindBufferMemory2(uint bindInfoCount, in AdamantiumVulkan.Core.BindBufferMemoryInfo pBindInfos)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkBindBufferMemory2(arg0, bindInfoCount, pBindInfos);
        }

        public Result BindImageMemory2(uint bindInfoCount, in AdamantiumVulkan.Core.BindImageMemoryInfo pBindInfos)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkBindImageMemory2(arg0, bindInfoCount, pBindInfos);
        }

        public void GetDeviceGroupPeerMemoryFeatures(uint heapIndex, uint localDeviceIndex, uint remoteDeviceIndex, ref uint pPeerMemoryFeatures)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetDeviceGroupPeerMemoryFeatures(arg0, heapIndex, localDeviceIndex, remoteDeviceIndex, ref pPeerMemoryFeatures);
        }

        public void GetImageMemoryRequirements2(in AdamantiumVulkan.Core.ImageMemoryRequirementsInfo2 pInfo, AdamantiumVulkan.Core.MemoryRequirements2 pMemoryRequirements)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetImageMemoryRequirements2(arg0, pInfo, pMemoryRequirements);
        }

        public void GetBufferMemoryRequirements2(in AdamantiumVulkan.Core.BufferMemoryRequirementsInfo2 pInfo, AdamantiumVulkan.Core.MemoryRequirements2 pMemoryRequirements)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetBufferMemoryRequirements2(arg0, pInfo, pMemoryRequirements);
        }

        public void GetImageSparseMemoryRequirements2(in AdamantiumVulkan.Core.ImageSparseMemoryRequirementsInfo2 pInfo, ref uint pSparseMemoryRequirementCount, AdamantiumVulkan.Core.SparseImageMemoryRequirements2 pSparseMemoryRequirements)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetImageSparseMemoryRequirements2(arg0, pInfo, ref pSparseMemoryRequirementCount, pSparseMemoryRequirements);
        }

        public void TrimCommandPool(CommandPool commandPool, uint flags)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(commandPool, null) ? new CommandPool_T() : (CommandPool_T)commandPool;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkTrimCommandPool(arg0, arg1, flags);
        }

        public void GetDeviceQueue2(in AdamantiumVulkan.Core.DeviceQueueInfo2 pQueueInfo, out Queue pQueue)
        {
            var arg0 = this;
            Queue_T arg2;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetDeviceQueue2(arg0, pQueueInfo, out arg2);
            pQueue = arg2;
        }

        public Result CreateSamplerYcbcrConversion(in AdamantiumVulkan.Core.SamplerYcbcrConversionCreateInfo pCreateInfo, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator, out SamplerYcbcrConversion pYcbcrConversion)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            SamplerYcbcrConversion_T arg3;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkCreateSamplerYcbcrConversion(arg0, pCreateInfo, arg2, out arg3);
            Marshal.FreeHGlobal(arg2);
            pYcbcrConversion = arg3;
            return result;
        }

        public void DestroySamplerYcbcrConversion(SamplerYcbcrConversion ycbcrConversion, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator = null)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(ycbcrConversion, null) ? new SamplerYcbcrConversion_T() : (SamplerYcbcrConversion_T)ycbcrConversion;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkDestroySamplerYcbcrConversion(arg0, arg1, arg2);
            Marshal.FreeHGlobal(arg2);
        }

        public Result CreateDescriptorUpdateTemplate(in AdamantiumVulkan.Core.DescriptorUpdateTemplateCreateInfo pCreateInfo, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator, out DescriptorUpdateTemplate pDescriptorUpdateTemplate)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            DescriptorUpdateTemplate_T arg3;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkCreateDescriptorUpdateTemplate(arg0, pCreateInfo, arg2, out arg3);
            Marshal.FreeHGlobal(arg2);
            pDescriptorUpdateTemplate = arg3;
            return result;
        }

        public void DestroyDescriptorUpdateTemplate(DescriptorUpdateTemplate descriptorUpdateTemplate, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator = null)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(descriptorUpdateTemplate, null) ? new DescriptorUpdateTemplate_T() : (DescriptorUpdateTemplate_T)descriptorUpdateTemplate;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkDestroyDescriptorUpdateTemplate(arg0, arg1, arg2);
            Marshal.FreeHGlobal(arg2);
        }

        public void UpdateDescriptorSetWithTemplate(DescriptorSet descriptorSet, DescriptorUpdateTemplate descriptorUpdateTemplate, in System.IntPtr pData)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(descriptorSet, null) ? new DescriptorSet_T() : (DescriptorSet_T)descriptorSet;
            var arg2 = ReferenceEquals(descriptorUpdateTemplate, null) ? new DescriptorUpdateTemplate_T() : (DescriptorUpdateTemplate_T)descriptorUpdateTemplate;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkUpdateDescriptorSetWithTemplate(arg0, arg1, arg2, pData);
        }

        public void GetDescriptorSetLayoutSupport(in AdamantiumVulkan.Core.DescriptorSetLayoutCreateInfo pCreateInfo, AdamantiumVulkan.Core.DescriptorSetLayoutSupport pSupport)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetDescriptorSetLayoutSupport(arg0, pCreateInfo, pSupport);
        }

        public Result CreateSwapchainKHR(in AdamantiumVulkan.Core.SwapchainCreateInfoKHR pCreateInfo, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator, out SwapchainKHR pSwapchain)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            SwapchainKHR_T arg3;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkCreateSwapchainKHR(arg0, pCreateInfo, arg2, out arg3);
            Marshal.FreeHGlobal(arg2);
            pSwapchain = arg3;
            return result;
        }

        public void DestroySwapchainKHR(SwapchainKHR swapchain, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator = null)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(swapchain, null) ? new SwapchainKHR_T() : (SwapchainKHR_T)swapchain;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkDestroySwapchainKHR(arg0, arg1, arg2);
            Marshal.FreeHGlobal(arg2);
        }

        public Result GetSwapchainImagesKHR(SwapchainKHR swapchain, ref uint pSwapchainImageCount, Image[] pSwapchainImages)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(swapchain, null) ? new SwapchainKHR_T() : (SwapchainKHR_T)swapchain;
            var arg3 = ReferenceEquals(pSwapchainImages, null) ? null : new Image_T[pSwapchainImages.Length];
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetSwapchainImagesKHR(arg0, arg1, ref pSwapchainImageCount, arg3);
            if (!ReferenceEquals(pSwapchainImages, null))
            {
                for (int i = 0; i < pSwapchainImages.Length; i++)
                {
                    pSwapchainImages[i] = arg3[i];
                }
            }
            return result;
        }

        public Result AcquireNextImageKHR(SwapchainKHR swapchain, ulong timeout, Semaphore semaphore, Fence fence, ref uint pImageIndex)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(swapchain, null) ? new SwapchainKHR_T() : (SwapchainKHR_T)swapchain;
            var arg3 = ReferenceEquals(semaphore, null) ? new Semaphore_T() : (Semaphore_T)semaphore;
            var arg4 = ReferenceEquals(fence, null) ? new Fence_T() : (Fence_T)fence;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkAcquireNextImageKHR(arg0, arg1, timeout, arg3, arg4, ref pImageIndex);
        }

        public Result GetDeviceGroupPresentCapabilitiesKHR(AdamantiumVulkan.Core.DeviceGroupPresentCapabilitiesKHR pDeviceGroupPresentCapabilities)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetDeviceGroupPresentCapabilitiesKHR(arg0, pDeviceGroupPresentCapabilities);
        }

        public Result GetDeviceGroupSurfacePresentModesKHR(SurfaceKHR surface, ref uint pModes)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(surface, null) ? new SurfaceKHR_T() : (SurfaceKHR_T)surface;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetDeviceGroupSurfacePresentModesKHR(arg0, arg1, ref pModes);
        }

        public Result AcquireNextImage2KHR(in AdamantiumVulkan.Core.AcquireNextImageInfoKHR pAcquireInfo, ref uint pImageIndex)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkAcquireNextImage2KHR(arg0, pAcquireInfo, ref pImageIndex);
        }

        public Result CreateSharedSwapchainsKHR(uint swapchainCount, in AdamantiumVulkan.Core.SwapchainCreateInfoKHR pCreateInfos, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator, out SwapchainKHR pSwapchains)
        {
            var arg0 = this;
            var arg3 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            SwapchainKHR_T arg4;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkCreateSharedSwapchainsKHR(arg0, swapchainCount, pCreateInfos, arg3, out arg4);
            Marshal.FreeHGlobal(arg3);
            pSwapchains = arg4;
            return result;
        }

        public void GetDeviceGroupPeerMemoryFeaturesKHR(uint heapIndex, uint localDeviceIndex, uint remoteDeviceIndex, ref uint pPeerMemoryFeatures)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetDeviceGroupPeerMemoryFeaturesKHR(arg0, heapIndex, localDeviceIndex, remoteDeviceIndex, ref pPeerMemoryFeatures);
        }

        public void TrimCommandPoolKHR(CommandPool commandPool, uint flags)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(commandPool, null) ? new CommandPool_T() : (CommandPool_T)commandPool;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkTrimCommandPoolKHR(arg0, arg1, flags);
        }

        public Result GetMemoryFdKHR(in AdamantiumVulkan.Core.MemoryGetFdInfoKHR pGetFdInfo, ref int pFd)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetMemoryFdKHR(arg0, pGetFdInfo, ref pFd);
        }

        public Result GetMemoryFdPropertiesKHR(ExternalMemoryHandleTypeFlagBits handleType, int fd, AdamantiumVulkan.Core.MemoryFdPropertiesKHR pMemoryFdProperties)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetMemoryFdPropertiesKHR(arg0, handleType, fd, pMemoryFdProperties);
        }

        public Result ImportSemaphoreFdKHR(in AdamantiumVulkan.Core.ImportSemaphoreFdInfoKHR pImportSemaphoreFdInfo)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkImportSemaphoreFdKHR(arg0, pImportSemaphoreFdInfo);
        }

        public Result GetSemaphoreFdKHR(in AdamantiumVulkan.Core.SemaphoreGetFdInfoKHR pGetFdInfo, ref int pFd)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetSemaphoreFdKHR(arg0, pGetFdInfo, ref pFd);
        }

        public Result CreateDescriptorUpdateTemplateKHR(in AdamantiumVulkan.Core.DescriptorUpdateTemplateCreateInfo pCreateInfo, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator, out DescriptorUpdateTemplate pDescriptorUpdateTemplate)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            DescriptorUpdateTemplate_T arg3;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkCreateDescriptorUpdateTemplateKHR(arg0, pCreateInfo, arg2, out arg3);
            Marshal.FreeHGlobal(arg2);
            pDescriptorUpdateTemplate = arg3;
            return result;
        }

        public void DestroyDescriptorUpdateTemplateKHR(DescriptorUpdateTemplate descriptorUpdateTemplate, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator = null)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(descriptorUpdateTemplate, null) ? new DescriptorUpdateTemplate_T() : (DescriptorUpdateTemplate_T)descriptorUpdateTemplate;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkDestroyDescriptorUpdateTemplateKHR(arg0, arg1, arg2);
            Marshal.FreeHGlobal(arg2);
        }

        public void UpdateDescriptorSetWithTemplateKHR(DescriptorSet descriptorSet, DescriptorUpdateTemplate descriptorUpdateTemplate, in System.IntPtr pData)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(descriptorSet, null) ? new DescriptorSet_T() : (DescriptorSet_T)descriptorSet;
            var arg2 = ReferenceEquals(descriptorUpdateTemplate, null) ? new DescriptorUpdateTemplate_T() : (DescriptorUpdateTemplate_T)descriptorUpdateTemplate;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkUpdateDescriptorSetWithTemplateKHR(arg0, arg1, arg2, pData);
        }

        public Result CreateRenderPass2KHR(in AdamantiumVulkan.Core.RenderPassCreateInfo2KHR pCreateInfo, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator, out RenderPass pRenderPass)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            RenderPass_T arg3;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkCreateRenderPass2KHR(arg0, pCreateInfo, arg2, out arg3);
            Marshal.FreeHGlobal(arg2);
            pRenderPass = arg3;
            return result;
        }

        public Result GetSwapchainStatusKHR(SwapchainKHR swapchain)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(swapchain, null) ? new SwapchainKHR_T() : (SwapchainKHR_T)swapchain;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetSwapchainStatusKHR(arg0, arg1);
        }

        public Result ImportFenceFdKHR(in AdamantiumVulkan.Core.ImportFenceFdInfoKHR pImportFenceFdInfo)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkImportFenceFdKHR(arg0, pImportFenceFdInfo);
        }

        public Result GetFenceFdKHR(in AdamantiumVulkan.Core.FenceGetFdInfoKHR pGetFdInfo, ref int pFd)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetFenceFdKHR(arg0, pGetFdInfo, ref pFd);
        }

        public void GetImageMemoryRequirements2KHR(in AdamantiumVulkan.Core.ImageMemoryRequirementsInfo2 pInfo, AdamantiumVulkan.Core.MemoryRequirements2 pMemoryRequirements)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetImageMemoryRequirements2KHR(arg0, pInfo, pMemoryRequirements);
        }

        public void GetBufferMemoryRequirements2KHR(in AdamantiumVulkan.Core.BufferMemoryRequirementsInfo2 pInfo, AdamantiumVulkan.Core.MemoryRequirements2 pMemoryRequirements)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetBufferMemoryRequirements2KHR(arg0, pInfo, pMemoryRequirements);
        }

        public void GetImageSparseMemoryRequirements2KHR(in AdamantiumVulkan.Core.ImageSparseMemoryRequirementsInfo2 pInfo, ref uint pSparseMemoryRequirementCount, AdamantiumVulkan.Core.SparseImageMemoryRequirements2 pSparseMemoryRequirements)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetImageSparseMemoryRequirements2KHR(arg0, pInfo, ref pSparseMemoryRequirementCount, pSparseMemoryRequirements);
        }

        public Result CreateSamplerYcbcrConversionKHR(in AdamantiumVulkan.Core.SamplerYcbcrConversionCreateInfo pCreateInfo, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator, out SamplerYcbcrConversion pYcbcrConversion)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            SamplerYcbcrConversion_T arg3;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkCreateSamplerYcbcrConversionKHR(arg0, pCreateInfo, arg2, out arg3);
            Marshal.FreeHGlobal(arg2);
            pYcbcrConversion = arg3;
            return result;
        }

        public void DestroySamplerYcbcrConversionKHR(SamplerYcbcrConversion ycbcrConversion, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator = null)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(ycbcrConversion, null) ? new SamplerYcbcrConversion_T() : (SamplerYcbcrConversion_T)ycbcrConversion;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkDestroySamplerYcbcrConversionKHR(arg0, arg1, arg2);
            Marshal.FreeHGlobal(arg2);
        }

        public Result BindBufferMemory2KHR(uint bindInfoCount, in AdamantiumVulkan.Core.BindBufferMemoryInfo pBindInfos)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkBindBufferMemory2KHR(arg0, bindInfoCount, pBindInfos);
        }

        public Result BindImageMemory2KHR(uint bindInfoCount, in AdamantiumVulkan.Core.BindImageMemoryInfo pBindInfos)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkBindImageMemory2KHR(arg0, bindInfoCount, pBindInfos);
        }

        public void GetDescriptorSetLayoutSupportKHR(in AdamantiumVulkan.Core.DescriptorSetLayoutCreateInfo pCreateInfo, AdamantiumVulkan.Core.DescriptorSetLayoutSupport pSupport)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetDescriptorSetLayoutSupportKHR(arg0, pCreateInfo, pSupport);
        }

        public Result DebugMarkerSetObjectTagEXT(in AdamantiumVulkan.Core.DebugMarkerObjectTagInfoEXT pTagInfo)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkDebugMarkerSetObjectTagEXT(arg0, pTagInfo);
        }

        public Result DebugMarkerSetObjectNameEXT(in AdamantiumVulkan.Core.DebugMarkerObjectNameInfoEXT pNameInfo)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkDebugMarkerSetObjectNameEXT(arg0, pNameInfo);
        }

        public Result GetShaderInfoAMD(Pipeline pipeline, ShaderStageFlagBits shaderStage, ShaderInfoTypeAMD infoType, ref ulong pInfoSize, ref System.IntPtr pInfo)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(pipeline, null) ? new Pipeline_T() : (Pipeline_T)pipeline;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetShaderInfoAMD(arg0, arg1, shaderStage, infoType, ref pInfoSize, ref pInfo);
        }

        public Result CreateIndirectCommandsLayoutNVX(in AdamantiumVulkan.Core.IndirectCommandsLayoutCreateInfoNVX pCreateInfo, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator, out IndirectCommandsLayoutNVX pIndirectCommandsLayout)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            IndirectCommandsLayoutNVX_T arg3;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkCreateIndirectCommandsLayoutNVX(arg0, pCreateInfo, arg2, out arg3);
            Marshal.FreeHGlobal(arg2);
            pIndirectCommandsLayout = arg3;
            return result;
        }

        public void DestroyIndirectCommandsLayoutNVX(IndirectCommandsLayoutNVX indirectCommandsLayout, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator = null)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(indirectCommandsLayout, null) ? new IndirectCommandsLayoutNVX_T() : (IndirectCommandsLayoutNVX_T)indirectCommandsLayout;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkDestroyIndirectCommandsLayoutNVX(arg0, arg1, arg2);
            Marshal.FreeHGlobal(arg2);
        }

        public Result CreateObjectTableNVX(in AdamantiumVulkan.Core.ObjectTableCreateInfoNVX pCreateInfo, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator, out ObjectTableNVX pObjectTable)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            ObjectTableNVX_T arg3;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkCreateObjectTableNVX(arg0, pCreateInfo, arg2, out arg3);
            Marshal.FreeHGlobal(arg2);
            pObjectTable = arg3;
            return result;
        }

        public void DestroyObjectTableNVX(ObjectTableNVX objectTable, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator = null)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(objectTable, null) ? new ObjectTableNVX_T() : (ObjectTableNVX_T)objectTable;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkDestroyObjectTableNVX(arg0, arg1, arg2);
            Marshal.FreeHGlobal(arg2);
        }

        public Result RegisterObjectsNVX(ObjectTableNVX objectTable, uint objectCount, in System.IntPtr ppObjectTableEntries, in uint pObjectIndices)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(objectTable, null) ? new ObjectTableNVX_T() : (ObjectTableNVX_T)objectTable;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkRegisterObjectsNVX(arg0, arg1, objectCount, ppObjectTableEntries, pObjectIndices);
        }

        public Result UnregisterObjectsNVX(ObjectTableNVX objectTable, uint objectCount, in ObjectEntryTypeNVX pObjectEntryTypes, in uint pObjectIndices)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(objectTable, null) ? new ObjectTableNVX_T() : (ObjectTableNVX_T)objectTable;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkUnregisterObjectsNVX(arg0, arg1, objectCount, pObjectEntryTypes, pObjectIndices);
        }

        public Result DisplayPowerControlEXT(DisplayKHR display, in AdamantiumVulkan.Core.DisplayPowerInfoEXT pDisplayPowerInfo)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(display, null) ? new DisplayKHR_T() : (DisplayKHR_T)display;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkDisplayPowerControlEXT(arg0, arg1, pDisplayPowerInfo);
        }

        public Result RegisterDeviceEventEXT(in AdamantiumVulkan.Core.DeviceEventInfoEXT pDeviceEventInfo, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator, out Fence pFence)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            Fence_T arg3;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkRegisterDeviceEventEXT(arg0, pDeviceEventInfo, arg2, out arg3);
            Marshal.FreeHGlobal(arg2);
            pFence = arg3;
            return result;
        }

        public Result RegisterDisplayEventEXT(DisplayKHR display, in AdamantiumVulkan.Core.DisplayEventInfoEXT pDisplayEventInfo, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator, out Fence pFence)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(display, null) ? new DisplayKHR_T() : (DisplayKHR_T)display;
            var arg3 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            Fence_T arg4;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkRegisterDisplayEventEXT(arg0, arg1, pDisplayEventInfo, arg3, out arg4);
            Marshal.FreeHGlobal(arg3);
            pFence = arg4;
            return result;
        }

        public Result GetSwapchainCounterEXT(SwapchainKHR swapchain, SurfaceCounterFlagBitsEXT counter, ref ulong pCounterValue)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(swapchain, null) ? new SwapchainKHR_T() : (SwapchainKHR_T)swapchain;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetSwapchainCounterEXT(arg0, arg1, counter, ref pCounterValue);
        }

        public Result GetRefreshCycleDurationGOOGLE(SwapchainKHR swapchain, AdamantiumVulkan.Core.RefreshCycleDurationGOOGLE pDisplayTimingProperties)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(swapchain, null) ? new SwapchainKHR_T() : (SwapchainKHR_T)swapchain;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetRefreshCycleDurationGOOGLE(arg0, arg1, pDisplayTimingProperties);
        }

        public Result GetPastPresentationTimingGOOGLE(SwapchainKHR swapchain, ref uint pPresentationTimingCount, AdamantiumVulkan.Core.PastPresentationTimingGOOGLE pPresentationTimings)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(swapchain, null) ? new SwapchainKHR_T() : (SwapchainKHR_T)swapchain;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetPastPresentationTimingGOOGLE(arg0, arg1, ref pPresentationTimingCount, pPresentationTimings);
        }

        public void SetHdrMetadataEXT(uint swapchainCount, in SwapchainKHR pSwapchains, in AdamantiumVulkan.Core.HdrMetadataEXT pMetadata)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pSwapchains, null) ? new SwapchainKHR_T() : (SwapchainKHR_T)pSwapchains;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkSetHdrMetadataEXT(arg0, swapchainCount, arg2, pMetadata);
        }

        public Result SetDebugUtilsObjectNameEXT(in AdamantiumVulkan.Core.DebugUtilsObjectNameInfoEXT pNameInfo)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkSetDebugUtilsObjectNameEXT(arg0, pNameInfo);
        }

        public Result SetDebugUtilsObjectTagEXT(in AdamantiumVulkan.Core.DebugUtilsObjectTagInfoEXT pTagInfo)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkSetDebugUtilsObjectTagEXT(arg0, pTagInfo);
        }

        public Result GetImageDrmFormatModifierPropertiesEXT(Image image, AdamantiumVulkan.Core.ImageDrmFormatModifierPropertiesEXT pProperties)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(image, null) ? new Image_T() : (Image_T)image;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetImageDrmFormatModifierPropertiesEXT(arg0, arg1, pProperties);
        }

        public Result CreateValidationCacheEXT(in AdamantiumVulkan.Core.ValidationCacheCreateInfoEXT pCreateInfo, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator, out ValidationCacheEXT pValidationCache)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            ValidationCacheEXT_T arg3;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkCreateValidationCacheEXT(arg0, pCreateInfo, arg2, out arg3);
            Marshal.FreeHGlobal(arg2);
            pValidationCache = arg3;
            return result;
        }

        public void DestroyValidationCacheEXT(ValidationCacheEXT validationCache, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator = null)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(validationCache, null) ? new ValidationCacheEXT_T() : (ValidationCacheEXT_T)validationCache;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkDestroyValidationCacheEXT(arg0, arg1, arg2);
            Marshal.FreeHGlobal(arg2);
        }

        public Result MergeValidationCachesEXT(ValidationCacheEXT dstCache, uint srcCacheCount, in ValidationCacheEXT pSrcCaches)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(dstCache, null) ? new ValidationCacheEXT_T() : (ValidationCacheEXT_T)dstCache;
            var arg3 = ReferenceEquals(pSrcCaches, null) ? new ValidationCacheEXT_T() : (ValidationCacheEXT_T)pSrcCaches;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkMergeValidationCachesEXT(arg0, arg1, srcCacheCount, arg3);
        }

        public Result GetValidationCacheDataEXT(ValidationCacheEXT validationCache, ref ulong pDataSize, ref System.IntPtr pData)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(validationCache, null) ? new ValidationCacheEXT_T() : (ValidationCacheEXT_T)validationCache;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetValidationCacheDataEXT(arg0, arg1, ref pDataSize, ref pData);
        }

        public Result CreateAccelerationStructureNV(in AdamantiumVulkan.Core.AccelerationStructureCreateInfoNV pCreateInfo, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator, out AccelerationStructureNV pAccelerationStructure)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            AccelerationStructureNV_T arg3;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkCreateAccelerationStructureNV(arg0, pCreateInfo, arg2, out arg3);
            Marshal.FreeHGlobal(arg2);
            pAccelerationStructure = arg3;
            return result;
        }

        public void DestroyAccelerationStructureNV(AccelerationStructureNV accelerationStructure, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator = null)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(accelerationStructure, null) ? new AccelerationStructureNV_T() : (AccelerationStructureNV_T)accelerationStructure;
            var arg2 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkDestroyAccelerationStructureNV(arg0, arg1, arg2);
            Marshal.FreeHGlobal(arg2);
        }

        public void GetAccelerationStructureMemoryRequirementsNV(in AdamantiumVulkan.Core.AccelerationStructureMemoryRequirementsInfoNV pInfo, AdamantiumVulkan.Core.MemoryRequirements2 pMemoryRequirements)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetAccelerationStructureMemoryRequirementsNV(arg0, pInfo, pMemoryRequirements);
        }

        public Result BindAccelerationStructureMemoryNV(uint bindInfoCount, in AdamantiumVulkan.Core.BindAccelerationStructureMemoryInfoNV pBindInfos)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkBindAccelerationStructureMemoryNV(arg0, bindInfoCount, pBindInfos);
        }

        public Result CreateRayTracingPipelinesNV(PipelineCache pipelineCache, uint createInfoCount, in AdamantiumVulkan.Core.RayTracingPipelineCreateInfoNV pCreateInfos, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator, out Pipeline pPipelines)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(pipelineCache, null) ? new PipelineCache_T() : (PipelineCache_T)pipelineCache;
            var arg4 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            Pipeline_T arg5;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkCreateRayTracingPipelinesNV(arg0, arg1, createInfoCount, pCreateInfos, arg4, out arg5);
            Marshal.FreeHGlobal(arg4);
            pPipelines = arg5;
            return result;
        }

        public Result GetRayTracingShaderGroupHandlesNV(Pipeline pipeline, uint firstGroup, uint groupCount, ulong dataSize, ref System.IntPtr pData)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(pipeline, null) ? new Pipeline_T() : (Pipeline_T)pipeline;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetRayTracingShaderGroupHandlesNV(arg0, arg1, firstGroup, groupCount, dataSize, ref pData);
        }

        public Result GetAccelerationStructureHandleNV(AccelerationStructureNV accelerationStructure, ulong dataSize, ref System.IntPtr pData)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(accelerationStructure, null) ? new AccelerationStructureNV_T() : (AccelerationStructureNV_T)accelerationStructure;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetAccelerationStructureHandleNV(arg0, arg1, dataSize, ref pData);
        }

        public Result CompileDeferredNV(Pipeline pipeline, uint shader)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(pipeline, null) ? new Pipeline_T() : (Pipeline_T)pipeline;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkCompileDeferredNV(arg0, arg1, shader);
        }

        public Result GetMemoryHostPointerPropertiesEXT(ExternalMemoryHandleTypeFlagBits handleType, in System.IntPtr pHostPointer, AdamantiumVulkan.Core.MemoryHostPointerPropertiesEXT pMemoryHostPointerProperties)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetMemoryHostPointerPropertiesEXT(arg0, handleType, pHostPointer, pMemoryHostPointerProperties);
        }

        public Result GetCalibratedTimestampsEXT(uint timestampCount, in AdamantiumVulkan.Core.CalibratedTimestampInfoEXT pTimestampInfos, ref ulong pTimestamps, ref ulong pMaxDeviation)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetCalibratedTimestampsEXT(arg0, timestampCount, pTimestampInfos, ref pTimestamps, ref pMaxDeviation);
        }

        public DeviceAddress GetBufferDeviceAddressEXT(in AdamantiumVulkan.Core.BufferDeviceAddressInfoEXT pInfo)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetBufferDeviceAddressEXT(arg0, pInfo);
        }

        public static implicit operator AdamantiumVulkan.Core.Interop.Device_T(Device d)
        {
            return d.__Instance;
        }

        public static implicit operator Device(AdamantiumVulkan.Core.Interop.Device_T d)
        {
            return new Device(){__Instance = d};
        }

    }

    // File: C:\VulkanSDK\1.1.101.0\Include\vulkan/vulkan_core.h Line: 72 Column: 1
    public partial class Queue
    {
        internal Queue_T __Instance;

        public Queue()
        {
        }

        public Queue(AdamantiumVulkan.Core.Interop.Queue_T __Instance)
        {
            this.__Instance = __Instance;
        }

        public System.IntPtr NativePointer
        {
            get => __Instance.pointer;
        }

        public Result QueueSubmit(uint submitCount, AdamantiumVulkan.Core.SubmitInfo[] pSubmits, Fence fence)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.SubmitInfo[] arg2 = null;
            if (!ReferenceEquals(pSubmits, null))
            {
                arg2 = new AdamantiumVulkan.Core.Interop.SubmitInfo[pSubmits.Length];
                for(int i = 0; i< pSubmits.Length; ++i)
                {
                    arg2[i] = pSubmits[i];
                }
            }
            var arg3 = ReferenceEquals(fence, null) ? new Fence_T() : (Fence_T)fence;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkQueueSubmit(arg0, submitCount, arg2, arg3);
        }

        public Result QueueWaitIdle()
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkQueueWaitIdle(arg0);
        }

        public Result QueueBindSparse(uint bindInfoCount, in AdamantiumVulkan.Core.BindSparseInfo pBindInfo, Fence fence)
        {
            var arg0 = this;
            var arg3 = ReferenceEquals(fence, null) ? new Fence_T() : (Fence_T)fence;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkQueueBindSparse(arg0, bindInfoCount, pBindInfo, arg3);
        }

        public Result QueuePresentKHR(in AdamantiumVulkan.Core.PresentInfoKHR pPresentInfo)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkQueuePresentKHR(arg0, pPresentInfo);
        }

        public void QueueBeginDebugUtilsLabelEXT(in AdamantiumVulkan.Core.DebugUtilsLabelEXT pLabelInfo)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkQueueBeginDebugUtilsLabelEXT(arg0, pLabelInfo);
        }

        public void QueueEndDebugUtilsLabelEXT()
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkQueueEndDebugUtilsLabelEXT(arg0);
        }

        public void QueueInsertDebugUtilsLabelEXT(in AdamantiumVulkan.Core.DebugUtilsLabelEXT pLabelInfo)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkQueueInsertDebugUtilsLabelEXT(arg0, pLabelInfo);
        }

        public void GetQueueCheckpointDataNV(ref uint pCheckpointDataCount, AdamantiumVulkan.Core.CheckpointDataNV pCheckpointData)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkGetQueueCheckpointDataNV(arg0, ref pCheckpointDataCount, pCheckpointData);
        }

        public static implicit operator AdamantiumVulkan.Core.Interop.Queue_T(Queue q)
        {
            return q.__Instance;
        }

        public static implicit operator Queue(AdamantiumVulkan.Core.Interop.Queue_T q)
        {
            return new Queue(){__Instance = q};
        }

    }

    // File: C:\VulkanSDK\1.1.101.0\Include\vulkan/vulkan_core.h Line: 73 Column: 1
    public partial class Semaphore
    {
        internal Semaphore_T __Instance;

        public Semaphore()
        {
        }

        public Semaphore(AdamantiumVulkan.Core.Interop.Semaphore_T __Instance)
        {
            this.__Instance = __Instance;
        }

        public System.IntPtr NativePointer
        {
            get => __Instance.pointer;
        }

        public static implicit operator AdamantiumVulkan.Core.Interop.Semaphore_T(Semaphore s)
        {
            return s.__Instance;
        }

        public static implicit operator Semaphore(AdamantiumVulkan.Core.Interop.Semaphore_T s)
        {
            return new Semaphore(){__Instance = s};
        }

    }

    // File: C:\VulkanSDK\1.1.101.0\Include\vulkan/vulkan_core.h Line: 74 Column: 1
    public partial class CommandBuffer
    {
        internal CommandBuffer_T __Instance;

        public CommandBuffer()
        {
        }

        public CommandBuffer(AdamantiumVulkan.Core.Interop.CommandBuffer_T __Instance)
        {
            this.__Instance = __Instance;
        }

        public System.IntPtr NativePointer
        {
            get => __Instance.pointer;
        }

        public Result BeginCommandBuffer(in AdamantiumVulkan.Core.CommandBufferBeginInfo pBeginInfo)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkBeginCommandBuffer(arg0, pBeginInfo);
        }

        public Result EndCommandBuffer()
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkEndCommandBuffer(arg0);
        }

        public Result ResetCommandBuffer(uint flags)
        {
            var arg0 = this;
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkResetCommandBuffer(arg0, flags);
        }

        public void CmdBindPipeline(PipelineBindPoint pipelineBindPoint, Pipeline pipeline)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pipeline, null) ? new Pipeline_T() : (Pipeline_T)pipeline;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdBindPipeline(arg0, pipelineBindPoint, arg2);
        }

        public void CmdSetViewport(uint firstViewport, uint viewportCount, in AdamantiumVulkan.Core.Viewport pViewports)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdSetViewport(arg0, firstViewport, viewportCount, pViewports);
        }

        public void CmdSetScissor(uint firstScissor, uint scissorCount, in AdamantiumVulkan.Core.Rect2D pScissors)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdSetScissor(arg0, firstScissor, scissorCount, pScissors);
        }

        public void CmdSetLineWidth(float lineWidth)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdSetLineWidth(arg0, lineWidth);
        }

        public void CmdSetDepthBias(float depthBiasConstantFactor, float depthBiasClamp, float depthBiasSlopeFactor)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdSetDepthBias(arg0, depthBiasConstantFactor, depthBiasClamp, depthBiasSlopeFactor);
        }

        public void CmdSetBlendConstants(in float[] blendConstants)
        {
            var arg0 = this;
            if (blendConstants == null || blendConstants.Length != 4)
            {
                throw new ArgumentOutOfRangeException("blendConstants", "The dimensions of the provided array don't match the required size. Size should be = 4");
            }
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdSetBlendConstants(arg0, blendConstants);
        }

        public void CmdSetDepthBounds(float minDepthBounds, float maxDepthBounds)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdSetDepthBounds(arg0, minDepthBounds, maxDepthBounds);
        }

        public void CmdSetStencilCompareMask(uint faceMask, uint compareMask)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdSetStencilCompareMask(arg0, faceMask, compareMask);
        }

        public void CmdSetStencilWriteMask(uint faceMask, uint writeMask)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdSetStencilWriteMask(arg0, faceMask, writeMask);
        }

        public void CmdSetStencilReference(uint faceMask, uint reference)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdSetStencilReference(arg0, faceMask, reference);
        }

        public void CmdBindDescriptorSets(PipelineBindPoint pipelineBindPoint, PipelineLayout layout, uint firstSet, uint descriptorSetCount, in DescriptorSet pDescriptorSets, uint dynamicOffsetCount, in uint pDynamicOffsets)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(layout, null) ? new PipelineLayout_T() : (PipelineLayout_T)layout;
            var arg5 = ReferenceEquals(pDescriptorSets, null) ? new DescriptorSet_T() : (DescriptorSet_T)pDescriptorSets;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdBindDescriptorSets(arg0, pipelineBindPoint, arg2, firstSet, descriptorSetCount, arg5, dynamicOffsetCount, pDynamicOffsets);
        }

        public void CmdBindIndexBuffer(Buffer buffer, ulong offset, IndexType indexType)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(buffer, null) ? new Buffer_T() : (Buffer_T)buffer;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdBindIndexBuffer(arg0, arg1, offset, indexType);
        }

        public void CmdBindVertexBuffers(uint firstBinding, uint bindingCount, Buffer[] pBuffers, ulong[] pOffsets)
        {
            var arg0 = this;
            var arg3 = ReferenceEquals(pBuffers, null) ? null : new Buffer_T[pBuffers.Length];
            if (!ReferenceEquals(pBuffers, null))
            {
                for (int i = 0; i < pBuffers.Length; i++)
                {
                    arg3[i] = pBuffers[i];
                }
            }
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdBindVertexBuffers(arg0, firstBinding, bindingCount, arg3, pOffsets);
        }

        public void CmdDraw(uint vertexCount, uint instanceCount, uint firstVertex, uint firstInstance)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdDraw(arg0, vertexCount, instanceCount, firstVertex, firstInstance);
        }

        public void CmdDrawIndexed(uint indexCount, uint instanceCount, uint firstIndex, int vertexOffset, uint firstInstance)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdDrawIndexed(arg0, indexCount, instanceCount, firstIndex, vertexOffset, firstInstance);
        }

        public void CmdDrawIndirect(Buffer buffer, ulong offset, uint drawCount, uint stride)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(buffer, null) ? new Buffer_T() : (Buffer_T)buffer;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdDrawIndirect(arg0, arg1, offset, drawCount, stride);
        }

        public void CmdDrawIndexedIndirect(Buffer buffer, ulong offset, uint drawCount, uint stride)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(buffer, null) ? new Buffer_T() : (Buffer_T)buffer;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdDrawIndexedIndirect(arg0, arg1, offset, drawCount, stride);
        }

        public void CmdDispatch(uint groupCountX, uint groupCountY, uint groupCountZ)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdDispatch(arg0, groupCountX, groupCountY, groupCountZ);
        }

        public void CmdDispatchIndirect(Buffer buffer, ulong offset)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(buffer, null) ? new Buffer_T() : (Buffer_T)buffer;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdDispatchIndirect(arg0, arg1, offset);
        }

        public void CmdCopyBuffer(Buffer srcBuffer, Buffer dstBuffer, uint regionCount, AdamantiumVulkan.Core.BufferCopy[] pRegions)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(srcBuffer, null) ? new Buffer_T() : (Buffer_T)srcBuffer;
            var arg2 = ReferenceEquals(dstBuffer, null) ? new Buffer_T() : (Buffer_T)dstBuffer;
            AdamantiumVulkan.Core.Interop.BufferCopy[] arg4 = null;
            if (!ReferenceEquals(pRegions, null))
            {
                arg4 = new AdamantiumVulkan.Core.Interop.BufferCopy[pRegions.Length];
                for(int i = 0; i< pRegions.Length; ++i)
                {
                    arg4[i] = pRegions[i];
                }
            }
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdCopyBuffer(arg0, arg1, arg2, regionCount, arg4);
        }

        public void CmdCopyImage(Image srcImage, ImageLayout srcImageLayout, Image dstImage, ImageLayout dstImageLayout, uint regionCount, in AdamantiumVulkan.Core.ImageCopy pRegions)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(srcImage, null) ? new Image_T() : (Image_T)srcImage;
            var arg3 = ReferenceEquals(dstImage, null) ? new Image_T() : (Image_T)dstImage;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdCopyImage(arg0, arg1, srcImageLayout, arg3, dstImageLayout, regionCount, pRegions);
        }

        public void CmdBlitImage(Image srcImage, ImageLayout srcImageLayout, Image dstImage, ImageLayout dstImageLayout, uint regionCount, in AdamantiumVulkan.Core.ImageBlit pRegions, Filter filter)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(srcImage, null) ? new Image_T() : (Image_T)srcImage;
            var arg3 = ReferenceEquals(dstImage, null) ? new Image_T() : (Image_T)dstImage;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdBlitImage(arg0, arg1, srcImageLayout, arg3, dstImageLayout, regionCount, pRegions, filter);
        }

        public void CmdCopyBufferToImage(Buffer srcBuffer, Image dstImage, ImageLayout dstImageLayout, uint regionCount, in AdamantiumVulkan.Core.BufferImageCopy pRegions)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(srcBuffer, null) ? new Buffer_T() : (Buffer_T)srcBuffer;
            var arg2 = ReferenceEquals(dstImage, null) ? new Image_T() : (Image_T)dstImage;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdCopyBufferToImage(arg0, arg1, arg2, dstImageLayout, regionCount, pRegions);
        }

        public void CmdCopyImageToBuffer(Image srcImage, ImageLayout srcImageLayout, Buffer dstBuffer, uint regionCount, in AdamantiumVulkan.Core.BufferImageCopy pRegions)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(srcImage, null) ? new Image_T() : (Image_T)srcImage;
            var arg3 = ReferenceEquals(dstBuffer, null) ? new Buffer_T() : (Buffer_T)dstBuffer;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdCopyImageToBuffer(arg0, arg1, srcImageLayout, arg3, regionCount, pRegions);
        }

        public void CmdUpdateBuffer(Buffer dstBuffer, ulong dstOffset, ulong dataSize, in System.IntPtr pData)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(dstBuffer, null) ? new Buffer_T() : (Buffer_T)dstBuffer;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdUpdateBuffer(arg0, arg1, dstOffset, dataSize, pData);
        }

        public void CmdFillBuffer(Buffer dstBuffer, ulong dstOffset, ulong size, uint data)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(dstBuffer, null) ? new Buffer_T() : (Buffer_T)dstBuffer;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdFillBuffer(arg0, arg1, dstOffset, size, data);
        }

        public void CmdClearColorImage(Image image, ImageLayout imageLayout, in ClearColorValue pColor, uint rangeCount, in AdamantiumVulkan.Core.ImageSubresourceRange pRanges)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(image, null) ? new Image_T() : (Image_T)image;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdClearColorImage(arg0, arg1, imageLayout, pColor, rangeCount, pRanges);
        }

        public void CmdClearDepthStencilImage(Image image, ImageLayout imageLayout, in AdamantiumVulkan.Core.ClearDepthStencilValue pDepthStencil, uint rangeCount, in AdamantiumVulkan.Core.ImageSubresourceRange pRanges)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(image, null) ? new Image_T() : (Image_T)image;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdClearDepthStencilImage(arg0, arg1, imageLayout, pDepthStencil, rangeCount, pRanges);
        }

        public void CmdClearAttachments(uint attachmentCount, in AdamantiumVulkan.Core.ClearAttachment pAttachments, uint rectCount, in AdamantiumVulkan.Core.ClearRect pRects)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdClearAttachments(arg0, attachmentCount, pAttachments, rectCount, pRects);
        }

        public void CmdResolveImage(Image srcImage, ImageLayout srcImageLayout, Image dstImage, ImageLayout dstImageLayout, uint regionCount, in AdamantiumVulkan.Core.ImageResolve pRegions)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(srcImage, null) ? new Image_T() : (Image_T)srcImage;
            var arg3 = ReferenceEquals(dstImage, null) ? new Image_T() : (Image_T)dstImage;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdResolveImage(arg0, arg1, srcImageLayout, arg3, dstImageLayout, regionCount, pRegions);
        }

        public void CmdSetEvent(Event @event, uint stageMask)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(@event, null) ? new Event_T() : (Event_T)@event;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdSetEvent(arg0, arg1, stageMask);
        }

        public void CmdResetEvent(Event @event, uint stageMask)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(@event, null) ? new Event_T() : (Event_T)@event;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdResetEvent(arg0, arg1, stageMask);
        }

        public void CmdWaitEvents(uint eventCount, in Event pEvents, uint srcStageMask, uint dstStageMask, uint memoryBarrierCount, in AdamantiumVulkan.Core.MemoryBarrier pMemoryBarriers, uint bufferMemoryBarrierCount, in AdamantiumVulkan.Core.BufferMemoryBarrier pBufferMemoryBarriers, uint imageMemoryBarrierCount, in AdamantiumVulkan.Core.ImageMemoryBarrier pImageMemoryBarriers)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pEvents, null) ? new Event_T() : (Event_T)pEvents;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdWaitEvents(arg0, eventCount, arg2, srcStageMask, dstStageMask, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers);
        }

        public void CmdPipelineBarrier(uint srcStageMask, uint dstStageMask, uint dependencyFlags, uint memoryBarrierCount, in AdamantiumVulkan.Core.MemoryBarrier pMemoryBarriers, uint bufferMemoryBarrierCount, in AdamantiumVulkan.Core.BufferMemoryBarrier pBufferMemoryBarriers, uint imageMemoryBarrierCount, in AdamantiumVulkan.Core.ImageMemoryBarrier pImageMemoryBarriers)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdPipelineBarrier(arg0, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers);
        }

        public void CmdBeginQuery(QueryPool queryPool, uint query, uint flags)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(queryPool, null) ? new QueryPool_T() : (QueryPool_T)queryPool;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdBeginQuery(arg0, arg1, query, flags);
        }

        public void CmdEndQuery(QueryPool queryPool, uint query)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(queryPool, null) ? new QueryPool_T() : (QueryPool_T)queryPool;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdEndQuery(arg0, arg1, query);
        }

        public void CmdResetQueryPool(QueryPool queryPool, uint firstQuery, uint queryCount)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(queryPool, null) ? new QueryPool_T() : (QueryPool_T)queryPool;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdResetQueryPool(arg0, arg1, firstQuery, queryCount);
        }

        public void CmdWriteTimestamp(PipelineStageFlagBits pipelineStage, QueryPool queryPool, uint query)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(queryPool, null) ? new QueryPool_T() : (QueryPool_T)queryPool;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdWriteTimestamp(arg0, pipelineStage, arg2, query);
        }

        public void CmdCopyQueryPoolResults(QueryPool queryPool, uint firstQuery, uint queryCount, Buffer dstBuffer, ulong dstOffset, ulong stride, uint flags)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(queryPool, null) ? new QueryPool_T() : (QueryPool_T)queryPool;
            var arg4 = ReferenceEquals(dstBuffer, null) ? new Buffer_T() : (Buffer_T)dstBuffer;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdCopyQueryPoolResults(arg0, arg1, firstQuery, queryCount, arg4, dstOffset, stride, flags);
        }

        public void CmdPushConstants(PipelineLayout layout, uint stageFlags, uint offset, uint size, in System.IntPtr pValues)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(layout, null) ? new PipelineLayout_T() : (PipelineLayout_T)layout;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdPushConstants(arg0, arg1, stageFlags, offset, size, pValues);
        }

        public void CmdBeginRenderPass(in AdamantiumVulkan.Core.RenderPassBeginInfo pRenderPassBegin, SubpassContents contents)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdBeginRenderPass(arg0, pRenderPassBegin, contents);
        }

        public void CmdNextSubpass(SubpassContents contents)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdNextSubpass(arg0, contents);
        }

        public void CmdEndRenderPass()
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdEndRenderPass(arg0);
        }

        public void CmdExecuteCommands(uint commandBufferCount, in CommandBuffer pCommandBuffers)
        {
            var arg0 = this;
            var arg2 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdExecuteCommands(arg0, commandBufferCount, arg2);
        }

        public void CmdSetDeviceMask(uint deviceMask)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdSetDeviceMask(arg0, deviceMask);
        }

        public void CmdDispatchBase(uint baseGroupX, uint baseGroupY, uint baseGroupZ, uint groupCountX, uint groupCountY, uint groupCountZ)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdDispatchBase(arg0, baseGroupX, baseGroupY, baseGroupZ, groupCountX, groupCountY, groupCountZ);
        }

        public void CmdSetDeviceMaskKHR(uint deviceMask)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdSetDeviceMaskKHR(arg0, deviceMask);
        }

        public void CmdDispatchBaseKHR(uint baseGroupX, uint baseGroupY, uint baseGroupZ, uint groupCountX, uint groupCountY, uint groupCountZ)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdDispatchBaseKHR(arg0, baseGroupX, baseGroupY, baseGroupZ, groupCountX, groupCountY, groupCountZ);
        }

        public void CmdPushDescriptorSetKHR(PipelineBindPoint pipelineBindPoint, PipelineLayout layout, uint set, uint descriptorWriteCount, in AdamantiumVulkan.Core.WriteDescriptorSet pDescriptorWrites)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(layout, null) ? new PipelineLayout_T() : (PipelineLayout_T)layout;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdPushDescriptorSetKHR(arg0, pipelineBindPoint, arg2, set, descriptorWriteCount, pDescriptorWrites);
        }

        public void CmdPushDescriptorSetWithTemplateKHR(DescriptorUpdateTemplate descriptorUpdateTemplate, PipelineLayout layout, uint set, in System.IntPtr pData)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(descriptorUpdateTemplate, null) ? new DescriptorUpdateTemplate_T() : (DescriptorUpdateTemplate_T)descriptorUpdateTemplate;
            var arg2 = ReferenceEquals(layout, null) ? new PipelineLayout_T() : (PipelineLayout_T)layout;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdPushDescriptorSetWithTemplateKHR(arg0, arg1, arg2, set, pData);
        }

        public void CmdBeginRenderPass2KHR(in AdamantiumVulkan.Core.RenderPassBeginInfo pRenderPassBegin, in AdamantiumVulkan.Core.SubpassBeginInfoKHR pSubpassBeginInfo)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdBeginRenderPass2KHR(arg0, pRenderPassBegin, pSubpassBeginInfo);
        }

        public void CmdNextSubpass2KHR(in AdamantiumVulkan.Core.SubpassBeginInfoKHR pSubpassBeginInfo, in AdamantiumVulkan.Core.SubpassEndInfoKHR pSubpassEndInfo)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdNextSubpass2KHR(arg0, pSubpassBeginInfo, pSubpassEndInfo);
        }

        public void CmdEndRenderPass2KHR(in AdamantiumVulkan.Core.SubpassEndInfoKHR pSubpassEndInfo)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdEndRenderPass2KHR(arg0, pSubpassEndInfo);
        }

        public void CmdDrawIndirectCountKHR(Buffer buffer, ulong offset, Buffer countBuffer, ulong countBufferOffset, uint maxDrawCount, uint stride)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(buffer, null) ? new Buffer_T() : (Buffer_T)buffer;
            var arg3 = ReferenceEquals(countBuffer, null) ? new Buffer_T() : (Buffer_T)countBuffer;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdDrawIndirectCountKHR(arg0, arg1, offset, arg3, countBufferOffset, maxDrawCount, stride);
        }

        public void CmdDrawIndexedIndirectCountKHR(Buffer buffer, ulong offset, Buffer countBuffer, ulong countBufferOffset, uint maxDrawCount, uint stride)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(buffer, null) ? new Buffer_T() : (Buffer_T)buffer;
            var arg3 = ReferenceEquals(countBuffer, null) ? new Buffer_T() : (Buffer_T)countBuffer;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdDrawIndexedIndirectCountKHR(arg0, arg1, offset, arg3, countBufferOffset, maxDrawCount, stride);
        }

        public void CmdDebugMarkerBeginEXT(in AdamantiumVulkan.Core.DebugMarkerMarkerInfoEXT pMarkerInfo)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdDebugMarkerBeginEXT(arg0, pMarkerInfo);
        }

        public void CmdDebugMarkerEndEXT()
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdDebugMarkerEndEXT(arg0);
        }

        public void CmdDebugMarkerInsertEXT(in AdamantiumVulkan.Core.DebugMarkerMarkerInfoEXT pMarkerInfo)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdDebugMarkerInsertEXT(arg0, pMarkerInfo);
        }

        public void CmdBindTransformFeedbackBuffersEXT(uint firstBinding, uint bindingCount, in Buffer pBuffers, ulong[] pOffsets, ulong[] pSizes)
        {
            var arg0 = this;
            var arg3 = ReferenceEquals(pBuffers, null) ? new Buffer_T() : (Buffer_T)pBuffers;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdBindTransformFeedbackBuffersEXT(arg0, firstBinding, bindingCount, arg3, pOffsets, pSizes);
        }

        public void CmdBeginTransformFeedbackEXT(uint firstCounterBuffer, uint counterBufferCount, in Buffer pCounterBuffers, ulong[] pCounterBufferOffsets)
        {
            var arg0 = this;
            var arg3 = ReferenceEquals(pCounterBuffers, null) ? new Buffer_T() : (Buffer_T)pCounterBuffers;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdBeginTransformFeedbackEXT(arg0, firstCounterBuffer, counterBufferCount, arg3, pCounterBufferOffsets);
        }

        public void CmdEndTransformFeedbackEXT(uint firstCounterBuffer, uint counterBufferCount, in Buffer pCounterBuffers, ulong[] pCounterBufferOffsets)
        {
            var arg0 = this;
            var arg3 = ReferenceEquals(pCounterBuffers, null) ? new Buffer_T() : (Buffer_T)pCounterBuffers;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdEndTransformFeedbackEXT(arg0, firstCounterBuffer, counterBufferCount, arg3, pCounterBufferOffsets);
        }

        public void CmdBeginQueryIndexedEXT(QueryPool queryPool, uint query, uint flags, uint index)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(queryPool, null) ? new QueryPool_T() : (QueryPool_T)queryPool;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdBeginQueryIndexedEXT(arg0, arg1, query, flags, index);
        }

        public void CmdEndQueryIndexedEXT(QueryPool queryPool, uint query, uint index)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(queryPool, null) ? new QueryPool_T() : (QueryPool_T)queryPool;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdEndQueryIndexedEXT(arg0, arg1, query, index);
        }

        public void CmdDrawIndirectByteCountEXT(uint instanceCount, uint firstInstance, Buffer counterBuffer, ulong counterBufferOffset, uint counterOffset, uint vertexStride)
        {
            var arg0 = this;
            var arg3 = ReferenceEquals(counterBuffer, null) ? new Buffer_T() : (Buffer_T)counterBuffer;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdDrawIndirectByteCountEXT(arg0, instanceCount, firstInstance, arg3, counterBufferOffset, counterOffset, vertexStride);
        }

        public void CmdDrawIndirectCountAMD(Buffer buffer, ulong offset, Buffer countBuffer, ulong countBufferOffset, uint maxDrawCount, uint stride)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(buffer, null) ? new Buffer_T() : (Buffer_T)buffer;
            var arg3 = ReferenceEquals(countBuffer, null) ? new Buffer_T() : (Buffer_T)countBuffer;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdDrawIndirectCountAMD(arg0, arg1, offset, arg3, countBufferOffset, maxDrawCount, stride);
        }

        public void CmdDrawIndexedIndirectCountAMD(Buffer buffer, ulong offset, Buffer countBuffer, ulong countBufferOffset, uint maxDrawCount, uint stride)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(buffer, null) ? new Buffer_T() : (Buffer_T)buffer;
            var arg3 = ReferenceEquals(countBuffer, null) ? new Buffer_T() : (Buffer_T)countBuffer;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdDrawIndexedIndirectCountAMD(arg0, arg1, offset, arg3, countBufferOffset, maxDrawCount, stride);
        }

        public void CmdBeginConditionalRenderingEXT(in AdamantiumVulkan.Core.ConditionalRenderingBeginInfoEXT pConditionalRenderingBegin)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdBeginConditionalRenderingEXT(arg0, pConditionalRenderingBegin);
        }

        public void CmdEndConditionalRenderingEXT()
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdEndConditionalRenderingEXT(arg0);
        }

        public void CmdProcessCommandsNVX(in AdamantiumVulkan.Core.CmdProcessCommandsInfoNVX pProcessCommandsInfo)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdProcessCommandsNVX(arg0, pProcessCommandsInfo);
        }

        public void CmdReserveSpaceForCommandsNVX(in AdamantiumVulkan.Core.CmdReserveSpaceForCommandsInfoNVX pReserveSpaceInfo)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdReserveSpaceForCommandsNVX(arg0, pReserveSpaceInfo);
        }

        public void CmdSetViewportWScalingNV(uint firstViewport, uint viewportCount, in AdamantiumVulkan.Core.ViewportWScalingNV pViewportWScalings)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdSetViewportWScalingNV(arg0, firstViewport, viewportCount, pViewportWScalings);
        }

        public void CmdSetDiscardRectangleEXT(uint firstDiscardRectangle, uint discardRectangleCount, in AdamantiumVulkan.Core.Rect2D pDiscardRectangles)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdSetDiscardRectangleEXT(arg0, firstDiscardRectangle, discardRectangleCount, pDiscardRectangles);
        }

        public void CmdBeginDebugUtilsLabelEXT(in AdamantiumVulkan.Core.DebugUtilsLabelEXT pLabelInfo)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdBeginDebugUtilsLabelEXT(arg0, pLabelInfo);
        }

        public void CmdEndDebugUtilsLabelEXT()
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdEndDebugUtilsLabelEXT(arg0);
        }

        public void CmdInsertDebugUtilsLabelEXT(in AdamantiumVulkan.Core.DebugUtilsLabelEXT pLabelInfo)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdInsertDebugUtilsLabelEXT(arg0, pLabelInfo);
        }

        public void CmdSetSampleLocationsEXT(in AdamantiumVulkan.Core.SampleLocationsInfoEXT pSampleLocationsInfo)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdSetSampleLocationsEXT(arg0, pSampleLocationsInfo);
        }

        public void CmdBindShadingRateImageNV(ImageView imageView, ImageLayout imageLayout)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(imageView, null) ? new ImageView_T() : (ImageView_T)imageView;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdBindShadingRateImageNV(arg0, arg1, imageLayout);
        }

        public void CmdSetViewportShadingRatePaletteNV(uint firstViewport, uint viewportCount, in AdamantiumVulkan.Core.ShadingRatePaletteNV pShadingRatePalettes)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdSetViewportShadingRatePaletteNV(arg0, firstViewport, viewportCount, pShadingRatePalettes);
        }

        public void CmdSetCoarseSampleOrderNV(CoarseSampleOrderTypeNV sampleOrderType, uint customSampleOrderCount, in AdamantiumVulkan.Core.CoarseSampleOrderCustomNV pCustomSampleOrders)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdSetCoarseSampleOrderNV(arg0, sampleOrderType, customSampleOrderCount, pCustomSampleOrders);
        }

        public void CmdBuildAccelerationStructureNV(in AdamantiumVulkan.Core.AccelerationStructureInfoNV pInfo, Buffer instanceData, ulong instanceOffset, bool update, AccelerationStructureNV dst, AccelerationStructureNV src, Buffer scratch, ulong scratchOffset)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(instanceData, null) ? new Buffer_T() : (Buffer_T)instanceData;
            var arg5 = ReferenceEquals(dst, null) ? new AccelerationStructureNV_T() : (AccelerationStructureNV_T)dst;
            var arg6 = ReferenceEquals(src, null) ? new AccelerationStructureNV_T() : (AccelerationStructureNV_T)src;
            var arg7 = ReferenceEquals(scratch, null) ? new Buffer_T() : (Buffer_T)scratch;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdBuildAccelerationStructureNV(arg0, pInfo, arg2, instanceOffset, update, arg5, arg6, arg7, scratchOffset);
        }

        public void CmdCopyAccelerationStructureNV(AccelerationStructureNV dst, AccelerationStructureNV src, CopyAccelerationStructureModeNV mode)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(dst, null) ? new AccelerationStructureNV_T() : (AccelerationStructureNV_T)dst;
            var arg2 = ReferenceEquals(src, null) ? new AccelerationStructureNV_T() : (AccelerationStructureNV_T)src;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdCopyAccelerationStructureNV(arg0, arg1, arg2, mode);
        }

        public void CmdTraceRaysNV(Buffer raygenShaderBindingTableBuffer, ulong raygenShaderBindingOffset, Buffer missShaderBindingTableBuffer, ulong missShaderBindingOffset, ulong missShaderBindingStride, Buffer hitShaderBindingTableBuffer, ulong hitShaderBindingOffset, ulong hitShaderBindingStride, Buffer callableShaderBindingTableBuffer, ulong callableShaderBindingOffset, ulong callableShaderBindingStride, uint width, uint height, uint depth)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(raygenShaderBindingTableBuffer, null) ? new Buffer_T() : (Buffer_T)raygenShaderBindingTableBuffer;
            var arg3 = ReferenceEquals(missShaderBindingTableBuffer, null) ? new Buffer_T() : (Buffer_T)missShaderBindingTableBuffer;
            var arg6 = ReferenceEquals(hitShaderBindingTableBuffer, null) ? new Buffer_T() : (Buffer_T)hitShaderBindingTableBuffer;
            var arg9 = ReferenceEquals(callableShaderBindingTableBuffer, null) ? new Buffer_T() : (Buffer_T)callableShaderBindingTableBuffer;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdTraceRaysNV(arg0, arg1, raygenShaderBindingOffset, arg3, missShaderBindingOffset, missShaderBindingStride, arg6, hitShaderBindingOffset, hitShaderBindingStride, arg9, callableShaderBindingOffset, callableShaderBindingStride, width, height, depth);
        }

        public void CmdWriteAccelerationStructuresPropertiesNV(uint accelerationStructureCount, in AccelerationStructureNV pAccelerationStructures, QueryType queryType, QueryPool queryPool, uint firstQuery)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(pAccelerationStructures, null) ? new AccelerationStructureNV_T() : (AccelerationStructureNV_T)pAccelerationStructures;
            var arg4 = ReferenceEquals(queryPool, null) ? new QueryPool_T() : (QueryPool_T)queryPool;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdWriteAccelerationStructuresPropertiesNV(arg0, accelerationStructureCount, arg2, queryType, arg4, firstQuery);
        }

        public void CmdWriteBufferMarkerAMD(PipelineStageFlagBits pipelineStage, Buffer dstBuffer, ulong dstOffset, uint marker)
        {
            var arg0 = this;
            var arg2 = ReferenceEquals(dstBuffer, null) ? new Buffer_T() : (Buffer_T)dstBuffer;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdWriteBufferMarkerAMD(arg0, pipelineStage, arg2, dstOffset, marker);
        }

        public void CmdDrawMeshTasksNV(uint taskCount, uint firstTask)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdDrawMeshTasksNV(arg0, taskCount, firstTask);
        }

        public void CmdDrawMeshTasksIndirectNV(Buffer buffer, ulong offset, uint drawCount, uint stride)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(buffer, null) ? new Buffer_T() : (Buffer_T)buffer;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdDrawMeshTasksIndirectNV(arg0, arg1, offset, drawCount, stride);
        }

        public void CmdDrawMeshTasksIndirectCountNV(Buffer buffer, ulong offset, Buffer countBuffer, ulong countBufferOffset, uint maxDrawCount, uint stride)
        {
            var arg0 = this;
            var arg1 = ReferenceEquals(buffer, null) ? new Buffer_T() : (Buffer_T)buffer;
            var arg3 = ReferenceEquals(countBuffer, null) ? new Buffer_T() : (Buffer_T)countBuffer;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdDrawMeshTasksIndirectCountNV(arg0, arg1, offset, arg3, countBufferOffset, maxDrawCount, stride);
        }

        public void CmdSetExclusiveScissorNV(uint firstExclusiveScissor, uint exclusiveScissorCount, in AdamantiumVulkan.Core.Rect2D pExclusiveScissors)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdSetExclusiveScissorNV(arg0, firstExclusiveScissor, exclusiveScissorCount, pExclusiveScissors);
        }

        public void CmdSetCheckpointNV(in System.IntPtr pCheckpointMarker)
        {
            var arg0 = this;
            AdamantiumVulkan.Core.Interop.VulkanInterop.vkCmdSetCheckpointNV(arg0, pCheckpointMarker);
        }

        public static implicit operator AdamantiumVulkan.Core.Interop.CommandBuffer_T(CommandBuffer c)
        {
            return c.__Instance;
        }

        public static implicit operator CommandBuffer(AdamantiumVulkan.Core.Interop.CommandBuffer_T c)
        {
            return new CommandBuffer(){__Instance = c};
        }

    }

    // File: C:\VulkanSDK\1.1.101.0\Include\vulkan/vulkan_core.h Line: 75 Column: 1
    public partial class Fence
    {
        internal Fence_T __Instance;

        public Fence()
        {
        }

        public Fence(AdamantiumVulkan.Core.Interop.Fence_T __Instance)
        {
            this.__Instance = __Instance;
        }

        public System.IntPtr NativePointer
        {
            get => __Instance.pointer;
        }

        public static implicit operator AdamantiumVulkan.Core.Interop.Fence_T(Fence f)
        {
            return f.__Instance;
        }

        public static implicit operator Fence(AdamantiumVulkan.Core.Interop.Fence_T f)
        {
            return new Fence(){__Instance = f};
        }

    }

    // File: C:\VulkanSDK\1.1.101.0\Include\vulkan/vulkan_core.h Line: 76 Column: 1
    public partial class DeviceMemory
    {
        internal DeviceMemory_T __Instance;

        public DeviceMemory()
        {
        }

        public DeviceMemory(AdamantiumVulkan.Core.Interop.DeviceMemory_T __Instance)
        {
            this.__Instance = __Instance;
        }

        public System.IntPtr NativePointer
        {
            get => __Instance.pointer;
        }

        public static implicit operator AdamantiumVulkan.Core.Interop.DeviceMemory_T(DeviceMemory d)
        {
            return d.__Instance;
        }

        public static implicit operator DeviceMemory(AdamantiumVulkan.Core.Interop.DeviceMemory_T d)
        {
            return new DeviceMemory(){__Instance = d};
        }

    }

    // File: C:\VulkanSDK\1.1.101.0\Include\vulkan/vulkan_core.h Line: 77 Column: 1
    public partial class Buffer
    {
        internal Buffer_T __Instance;

        public Buffer()
        {
        }

        public Buffer(AdamantiumVulkan.Core.Interop.Buffer_T __Instance)
        {
            this.__Instance = __Instance;
        }

        public System.IntPtr NativePointer
        {
            get => __Instance.pointer;
        }

        public static implicit operator AdamantiumVulkan.Core.Interop.Buffer_T(Buffer b)
        {
            return b.__Instance;
        }

        public static implicit operator Buffer(AdamantiumVulkan.Core.Interop.Buffer_T b)
        {
            return new Buffer(){__Instance = b};
        }

    }

    // File: C:\VulkanSDK\1.1.101.0\Include\vulkan/vulkan_core.h Line: 78 Column: 1
    public partial class Image
    {
        internal Image_T __Instance;

        public Image()
        {
        }

        public Image(AdamantiumVulkan.Core.Interop.Image_T __Instance)
        {
            this.__Instance = __Instance;
        }

        public System.IntPtr NativePointer
        {
            get => __Instance.pointer;
        }

        public static implicit operator AdamantiumVulkan.Core.Interop.Image_T(Image i)
        {
            return i.__Instance;
        }

        public static implicit operator Image(AdamantiumVulkan.Core.Interop.Image_T i)
        {
            return new Image(){__Instance = i};
        }

    }

    // File: C:\VulkanSDK\1.1.101.0\Include\vulkan/vulkan_core.h Line: 79 Column: 1
    public partial class Event
    {
        internal Event_T __Instance;

        public Event()
        {
        }

        public Event(AdamantiumVulkan.Core.Interop.Event_T __Instance)
        {
            this.__Instance = __Instance;
        }

        public System.IntPtr NativePointer
        {
            get => __Instance.pointer;
        }

        public static implicit operator AdamantiumVulkan.Core.Interop.Event_T(Event e)
        {
            return e.__Instance;
        }

        public static implicit operator Event(AdamantiumVulkan.Core.Interop.Event_T e)
        {
            return new Event(){__Instance = e};
        }

    }

    // File: C:\VulkanSDK\1.1.101.0\Include\vulkan/vulkan_core.h Line: 80 Column: 1
    public partial class QueryPool
    {
        internal QueryPool_T __Instance;

        public QueryPool()
        {
        }

        public QueryPool(AdamantiumVulkan.Core.Interop.QueryPool_T __Instance)
        {
            this.__Instance = __Instance;
        }

        public System.IntPtr NativePointer
        {
            get => __Instance.pointer;
        }

        public static implicit operator AdamantiumVulkan.Core.Interop.QueryPool_T(QueryPool q)
        {
            return q.__Instance;
        }

        public static implicit operator QueryPool(AdamantiumVulkan.Core.Interop.QueryPool_T q)
        {
            return new QueryPool(){__Instance = q};
        }

    }

    // File: C:\VulkanSDK\1.1.101.0\Include\vulkan/vulkan_core.h Line: 81 Column: 1
    public partial class BufferView
    {
        internal BufferView_T __Instance;

        public BufferView()
        {
        }

        public BufferView(AdamantiumVulkan.Core.Interop.BufferView_T __Instance)
        {
            this.__Instance = __Instance;
        }

        public System.IntPtr NativePointer
        {
            get => __Instance.pointer;
        }

        public static implicit operator AdamantiumVulkan.Core.Interop.BufferView_T(BufferView b)
        {
            return b.__Instance;
        }

        public static implicit operator BufferView(AdamantiumVulkan.Core.Interop.BufferView_T b)
        {
            return new BufferView(){__Instance = b};
        }

    }

    // File: C:\VulkanSDK\1.1.101.0\Include\vulkan/vulkan_core.h Line: 82 Column: 1
    public partial class ImageView
    {
        internal ImageView_T __Instance;

        public ImageView()
        {
        }

        public ImageView(AdamantiumVulkan.Core.Interop.ImageView_T __Instance)
        {
            this.__Instance = __Instance;
        }

        public System.IntPtr NativePointer
        {
            get => __Instance.pointer;
        }

        public static implicit operator AdamantiumVulkan.Core.Interop.ImageView_T(ImageView i)
        {
            return i.__Instance;
        }

        public static implicit operator ImageView(AdamantiumVulkan.Core.Interop.ImageView_T i)
        {
            return new ImageView(){__Instance = i};
        }

    }

    // File: C:\VulkanSDK\1.1.101.0\Include\vulkan/vulkan_core.h Line: 83 Column: 1
    public partial class ShaderModule
    {
        internal ShaderModule_T __Instance;

        public ShaderModule()
        {
        }

        public ShaderModule(AdamantiumVulkan.Core.Interop.ShaderModule_T __Instance)
        {
            this.__Instance = __Instance;
        }

        public System.IntPtr NativePointer
        {
            get => __Instance.pointer;
        }

        public static implicit operator AdamantiumVulkan.Core.Interop.ShaderModule_T(ShaderModule s)
        {
            return s.__Instance;
        }

        public static implicit operator ShaderModule(AdamantiumVulkan.Core.Interop.ShaderModule_T s)
        {
            return new ShaderModule(){__Instance = s};
        }

    }

    // File: C:\VulkanSDK\1.1.101.0\Include\vulkan/vulkan_core.h Line: 84 Column: 1
    public partial class PipelineCache
    {
        internal PipelineCache_T __Instance;

        public PipelineCache()
        {
        }

        public PipelineCache(AdamantiumVulkan.Core.Interop.PipelineCache_T __Instance)
        {
            this.__Instance = __Instance;
        }

        public System.IntPtr NativePointer
        {
            get => __Instance.pointer;
        }

        public static implicit operator AdamantiumVulkan.Core.Interop.PipelineCache_T(PipelineCache p)
        {
            return p.__Instance;
        }

        public static implicit operator PipelineCache(AdamantiumVulkan.Core.Interop.PipelineCache_T p)
        {
            return new PipelineCache(){__Instance = p};
        }

    }

    // File: C:\VulkanSDK\1.1.101.0\Include\vulkan/vulkan_core.h Line: 85 Column: 1
    public partial class PipelineLayout
    {
        internal PipelineLayout_T __Instance;

        public PipelineLayout()
        {
        }

        public PipelineLayout(AdamantiumVulkan.Core.Interop.PipelineLayout_T __Instance)
        {
            this.__Instance = __Instance;
        }

        public System.IntPtr NativePointer
        {
            get => __Instance.pointer;
        }

        public static implicit operator AdamantiumVulkan.Core.Interop.PipelineLayout_T(PipelineLayout p)
        {
            return p.__Instance;
        }

        public static implicit operator PipelineLayout(AdamantiumVulkan.Core.Interop.PipelineLayout_T p)
        {
            return new PipelineLayout(){__Instance = p};
        }

    }

    // File: C:\VulkanSDK\1.1.101.0\Include\vulkan/vulkan_core.h Line: 86 Column: 1
    public partial class RenderPass
    {
        internal RenderPass_T __Instance;

        public RenderPass()
        {
        }

        public RenderPass(AdamantiumVulkan.Core.Interop.RenderPass_T __Instance)
        {
            this.__Instance = __Instance;
        }

        public System.IntPtr NativePointer
        {
            get => __Instance.pointer;
        }

        public static implicit operator AdamantiumVulkan.Core.Interop.RenderPass_T(RenderPass r)
        {
            return r.__Instance;
        }

        public static implicit operator RenderPass(AdamantiumVulkan.Core.Interop.RenderPass_T r)
        {
            return new RenderPass(){__Instance = r};
        }

    }

    // File: C:\VulkanSDK\1.1.101.0\Include\vulkan/vulkan_core.h Line: 87 Column: 1
    public partial class Pipeline
    {
        internal Pipeline_T __Instance;

        public Pipeline()
        {
        }

        public Pipeline(AdamantiumVulkan.Core.Interop.Pipeline_T __Instance)
        {
            this.__Instance = __Instance;
        }

        public System.IntPtr NativePointer
        {
            get => __Instance.pointer;
        }

        public static implicit operator AdamantiumVulkan.Core.Interop.Pipeline_T(Pipeline p)
        {
            return p.__Instance;
        }

        public static implicit operator Pipeline(AdamantiumVulkan.Core.Interop.Pipeline_T p)
        {
            return new Pipeline(){__Instance = p};
        }

    }

    // File: C:\VulkanSDK\1.1.101.0\Include\vulkan/vulkan_core.h Line: 88 Column: 1
    public partial class DescriptorSetLayout
    {
        internal DescriptorSetLayout_T __Instance;

        public DescriptorSetLayout()
        {
        }

        public DescriptorSetLayout(AdamantiumVulkan.Core.Interop.DescriptorSetLayout_T __Instance)
        {
            this.__Instance = __Instance;
        }

        public System.IntPtr NativePointer
        {
            get => __Instance.pointer;
        }

        public static implicit operator AdamantiumVulkan.Core.Interop.DescriptorSetLayout_T(DescriptorSetLayout d)
        {
            return d.__Instance;
        }

        public static implicit operator DescriptorSetLayout(AdamantiumVulkan.Core.Interop.DescriptorSetLayout_T d)
        {
            return new DescriptorSetLayout(){__Instance = d};
        }

    }

    // File: C:\VulkanSDK\1.1.101.0\Include\vulkan/vulkan_core.h Line: 89 Column: 1
    public partial class Sampler
    {
        internal Sampler_T __Instance;

        public Sampler()
        {
        }

        public Sampler(AdamantiumVulkan.Core.Interop.Sampler_T __Instance)
        {
            this.__Instance = __Instance;
        }

        public System.IntPtr NativePointer
        {
            get => __Instance.pointer;
        }

        public static implicit operator AdamantiumVulkan.Core.Interop.Sampler_T(Sampler s)
        {
            return s.__Instance;
        }

        public static implicit operator Sampler(AdamantiumVulkan.Core.Interop.Sampler_T s)
        {
            return new Sampler(){__Instance = s};
        }

    }

    // File: C:\VulkanSDK\1.1.101.0\Include\vulkan/vulkan_core.h Line: 90 Column: 1
    public partial class DescriptorPool
    {
        internal DescriptorPool_T __Instance;

        public DescriptorPool()
        {
        }

        public DescriptorPool(AdamantiumVulkan.Core.Interop.DescriptorPool_T __Instance)
        {
            this.__Instance = __Instance;
        }

        public System.IntPtr NativePointer
        {
            get => __Instance.pointer;
        }

        public static implicit operator AdamantiumVulkan.Core.Interop.DescriptorPool_T(DescriptorPool d)
        {
            return d.__Instance;
        }

        public static implicit operator DescriptorPool(AdamantiumVulkan.Core.Interop.DescriptorPool_T d)
        {
            return new DescriptorPool(){__Instance = d};
        }

    }

    // File: C:\VulkanSDK\1.1.101.0\Include\vulkan/vulkan_core.h Line: 91 Column: 1
    public partial class DescriptorSet
    {
        internal DescriptorSet_T __Instance;

        public DescriptorSet()
        {
        }

        public DescriptorSet(AdamantiumVulkan.Core.Interop.DescriptorSet_T __Instance)
        {
            this.__Instance = __Instance;
        }

        public System.IntPtr NativePointer
        {
            get => __Instance.pointer;
        }

        public static implicit operator AdamantiumVulkan.Core.Interop.DescriptorSet_T(DescriptorSet d)
        {
            return d.__Instance;
        }

        public static implicit operator DescriptorSet(AdamantiumVulkan.Core.Interop.DescriptorSet_T d)
        {
            return new DescriptorSet(){__Instance = d};
        }

    }

    // File: C:\VulkanSDK\1.1.101.0\Include\vulkan/vulkan_core.h Line: 92 Column: 1
    public partial class Framebuffer
    {
        internal Framebuffer_T __Instance;

        public Framebuffer()
        {
        }

        public Framebuffer(AdamantiumVulkan.Core.Interop.Framebuffer_T __Instance)
        {
            this.__Instance = __Instance;
        }

        public System.IntPtr NativePointer
        {
            get => __Instance.pointer;
        }

        public static implicit operator AdamantiumVulkan.Core.Interop.Framebuffer_T(Framebuffer f)
        {
            return f.__Instance;
        }

        public static implicit operator Framebuffer(AdamantiumVulkan.Core.Interop.Framebuffer_T f)
        {
            return new Framebuffer(){__Instance = f};
        }

    }

    // File: C:\VulkanSDK\1.1.101.0\Include\vulkan/vulkan_core.h Line: 93 Column: 1
    public partial class CommandPool
    {
        internal CommandPool_T __Instance;

        public CommandPool()
        {
        }

        public CommandPool(AdamantiumVulkan.Core.Interop.CommandPool_T __Instance)
        {
            this.__Instance = __Instance;
        }

        public System.IntPtr NativePointer
        {
            get => __Instance.pointer;
        }

        public static implicit operator AdamantiumVulkan.Core.Interop.CommandPool_T(CommandPool c)
        {
            return c.__Instance;
        }

        public static implicit operator CommandPool(AdamantiumVulkan.Core.Interop.CommandPool_T c)
        {
            return new CommandPool(){__Instance = c};
        }

    }

    // File: C:\VulkanSDK\1.1.101.0\Include\vulkan/vulkan_core.h Line: 3838 Column: 1
    public partial class SamplerYcbcrConversion
    {
        internal SamplerYcbcrConversion_T __Instance;

        public SamplerYcbcrConversion()
        {
        }

        public SamplerYcbcrConversion(AdamantiumVulkan.Core.Interop.SamplerYcbcrConversion_T __Instance)
        {
            this.__Instance = __Instance;
        }

        public System.IntPtr NativePointer
        {
            get => __Instance.pointer;
        }

        public static implicit operator AdamantiumVulkan.Core.Interop.SamplerYcbcrConversion_T(SamplerYcbcrConversion s)
        {
            return s.__Instance;
        }

        public static implicit operator SamplerYcbcrConversion(AdamantiumVulkan.Core.Interop.SamplerYcbcrConversion_T s)
        {
            return new SamplerYcbcrConversion(){__Instance = s};
        }

    }

    // File: C:\VulkanSDK\1.1.101.0\Include\vulkan/vulkan_core.h Line: 3839 Column: 1
    public partial class DescriptorUpdateTemplate
    {
        internal DescriptorUpdateTemplate_T __Instance;

        public DescriptorUpdateTemplate()
        {
        }

        public DescriptorUpdateTemplate(AdamantiumVulkan.Core.Interop.DescriptorUpdateTemplate_T __Instance)
        {
            this.__Instance = __Instance;
        }

        public System.IntPtr NativePointer
        {
            get => __Instance.pointer;
        }

        public static implicit operator AdamantiumVulkan.Core.Interop.DescriptorUpdateTemplate_T(DescriptorUpdateTemplate d)
        {
            return d.__Instance;
        }

        public static implicit operator DescriptorUpdateTemplate(AdamantiumVulkan.Core.Interop.DescriptorUpdateTemplate_T d)
        {
            return new DescriptorUpdateTemplate(){__Instance = d};
        }

    }

    // File: C:\VulkanSDK\1.1.101.0\Include\vulkan/vulkan_core.h Line: 4712 Column: 1
    public partial class SurfaceKHR
    {
        internal SurfaceKHR_T __Instance;

        public SurfaceKHR()
        {
        }

        public SurfaceKHR(AdamantiumVulkan.Core.Interop.SurfaceKHR_T __Instance)
        {
            this.__Instance = __Instance;
        }

        public System.IntPtr NativePointer
        {
            get => __Instance.pointer;
        }

        public static implicit operator AdamantiumVulkan.Core.Interop.SurfaceKHR_T(SurfaceKHR s)
        {
            return s.__Instance;
        }

        public static implicit operator SurfaceKHR(AdamantiumVulkan.Core.Interop.SurfaceKHR_T s)
        {
            return new SurfaceKHR(){__Instance = s};
        }

    }

    // File: C:\VulkanSDK\1.1.101.0\Include\vulkan/vulkan_core.h Line: 4834 Column: 1
    public partial class SwapchainKHR
    {
        internal SwapchainKHR_T __Instance;

        public SwapchainKHR()
        {
        }

        public SwapchainKHR(AdamantiumVulkan.Core.Interop.SwapchainKHR_T __Instance)
        {
            this.__Instance = __Instance;
        }

        public System.IntPtr NativePointer
        {
            get => __Instance.pointer;
        }

        public static implicit operator AdamantiumVulkan.Core.Interop.SwapchainKHR_T(SwapchainKHR s)
        {
            return s.__Instance;
        }

        public static implicit operator SwapchainKHR(AdamantiumVulkan.Core.Interop.SwapchainKHR_T s)
        {
            return new SwapchainKHR(){__Instance = s};
        }

    }

    // File: C:\VulkanSDK\1.1.101.0\Include\vulkan/vulkan_core.h Line: 4996 Column: 1
    public partial class DisplayKHR
    {
        internal DisplayKHR_T __Instance;

        public DisplayKHR()
        {
        }

        public DisplayKHR(AdamantiumVulkan.Core.Interop.DisplayKHR_T __Instance)
        {
            this.__Instance = __Instance;
        }

        public System.IntPtr NativePointer
        {
            get => __Instance.pointer;
        }

        public static implicit operator AdamantiumVulkan.Core.Interop.DisplayKHR_T(DisplayKHR d)
        {
            return d.__Instance;
        }

        public static implicit operator DisplayKHR(AdamantiumVulkan.Core.Interop.DisplayKHR_T d)
        {
            return new DisplayKHR(){__Instance = d};
        }

    }

    // File: C:\VulkanSDK\1.1.101.0\Include\vulkan/vulkan_core.h Line: 4997 Column: 1
    public partial class DisplayModeKHR
    {
        internal DisplayModeKHR_T __Instance;

        public DisplayModeKHR()
        {
        }

        public DisplayModeKHR(AdamantiumVulkan.Core.Interop.DisplayModeKHR_T __Instance)
        {
            this.__Instance = __Instance;
        }

        public System.IntPtr NativePointer
        {
            get => __Instance.pointer;
        }

        public static implicit operator AdamantiumVulkan.Core.Interop.DisplayModeKHR_T(DisplayModeKHR d)
        {
            return d.__Instance;
        }

        public static implicit operator DisplayModeKHR(AdamantiumVulkan.Core.Interop.DisplayModeKHR_T d)
        {
            return new DisplayModeKHR(){__Instance = d};
        }

    }

    // File: C:\VulkanSDK\1.1.101.0\Include\vulkan/vulkan_core.h Line: 5566 Column: 36
    public partial class DescriptorUpdateTemplateKHR
    {
        internal DescriptorUpdateTemplate_T __Instance;

        public DescriptorUpdateTemplateKHR()
        {
        }

        public DescriptorUpdateTemplateKHR(AdamantiumVulkan.Core.Interop.DescriptorUpdateTemplate_T __Instance)
        {
            this.__Instance = __Instance;
        }

        public System.IntPtr NativePointer
        {
            get => __Instance.pointer;
        }

        public static implicit operator AdamantiumVulkan.Core.Interop.DescriptorUpdateTemplate_T(DescriptorUpdateTemplateKHR d)
        {
            return d.__Instance;
        }

        public static implicit operator DescriptorUpdateTemplateKHR(AdamantiumVulkan.Core.Interop.DescriptorUpdateTemplate_T d)
        {
            return new DescriptorUpdateTemplateKHR(){__Instance = d};
        }

    }

    // File: C:\VulkanSDK\1.1.101.0\Include\vulkan/vulkan_core.h Line: 6009 Column: 34
    public partial class SamplerYcbcrConversionKHR
    {
        internal SamplerYcbcrConversion_T __Instance;

        public SamplerYcbcrConversionKHR()
        {
        }

        public SamplerYcbcrConversionKHR(AdamantiumVulkan.Core.Interop.SamplerYcbcrConversion_T __Instance)
        {
            this.__Instance = __Instance;
        }

        public System.IntPtr NativePointer
        {
            get => __Instance.pointer;
        }

        public static implicit operator AdamantiumVulkan.Core.Interop.SamplerYcbcrConversion_T(SamplerYcbcrConversionKHR s)
        {
            return s.__Instance;
        }

        public static implicit operator SamplerYcbcrConversionKHR(AdamantiumVulkan.Core.Interop.SamplerYcbcrConversion_T s)
        {
            return new SamplerYcbcrConversionKHR(){__Instance = s};
        }

    }

    // File: C:\VulkanSDK\1.1.101.0\Include\vulkan/vulkan_core.h Line: 6271 Column: 1
    public partial class DebugReportCallbackEXT
    {
        internal DebugReportCallbackEXT_T __Instance;

        public DebugReportCallbackEXT()
        {
        }

        public DebugReportCallbackEXT(AdamantiumVulkan.Core.Interop.DebugReportCallbackEXT_T __Instance)
        {
            this.__Instance = __Instance;
        }

        public System.IntPtr NativePointer
        {
            get => __Instance.pointer;
        }

        public static implicit operator AdamantiumVulkan.Core.Interop.DebugReportCallbackEXT_T(DebugReportCallbackEXT d)
        {
            return d.__Instance;
        }

        public static implicit operator DebugReportCallbackEXT(AdamantiumVulkan.Core.Interop.DebugReportCallbackEXT_T d)
        {
            return new DebugReportCallbackEXT(){__Instance = d};
        }

    }

    // File: C:\VulkanSDK\1.1.101.0\Include\vulkan/vulkan_core.h Line: 6886 Column: 1
    public partial class ObjectTableNVX
    {
        internal ObjectTableNVX_T __Instance;

        public ObjectTableNVX()
        {
        }

        public ObjectTableNVX(AdamantiumVulkan.Core.Interop.ObjectTableNVX_T __Instance)
        {
            this.__Instance = __Instance;
        }

        public System.IntPtr NativePointer
        {
            get => __Instance.pointer;
        }

        public static implicit operator AdamantiumVulkan.Core.Interop.ObjectTableNVX_T(ObjectTableNVX o)
        {
            return o.__Instance;
        }

        public static implicit operator ObjectTableNVX(AdamantiumVulkan.Core.Interop.ObjectTableNVX_T o)
        {
            return new ObjectTableNVX(){__Instance = o};
        }

    }

    // File: C:\VulkanSDK\1.1.101.0\Include\vulkan/vulkan_core.h Line: 6887 Column: 1
    public partial class IndirectCommandsLayoutNVX
    {
        internal IndirectCommandsLayoutNVX_T __Instance;

        public IndirectCommandsLayoutNVX()
        {
        }

        public IndirectCommandsLayoutNVX(AdamantiumVulkan.Core.Interop.IndirectCommandsLayoutNVX_T __Instance)
        {
            this.__Instance = __Instance;
        }

        public System.IntPtr NativePointer
        {
            get => __Instance.pointer;
        }

        public static implicit operator AdamantiumVulkan.Core.Interop.IndirectCommandsLayoutNVX_T(IndirectCommandsLayoutNVX i)
        {
            return i.__Instance;
        }

        public static implicit operator IndirectCommandsLayoutNVX(AdamantiumVulkan.Core.Interop.IndirectCommandsLayoutNVX_T i)
        {
            return new IndirectCommandsLayoutNVX(){__Instance = i};
        }

    }

    // File: C:\VulkanSDK\1.1.101.0\Include\vulkan/vulkan_core.h Line: 7541 Column: 1
    public partial class DebugUtilsMessengerEXT
    {
        internal DebugUtilsMessengerEXT_T __Instance;

        public DebugUtilsMessengerEXT()
        {
        }

        public DebugUtilsMessengerEXT(AdamantiumVulkan.Core.Interop.DebugUtilsMessengerEXT_T __Instance)
        {
            this.__Instance = __Instance;
        }

        public System.IntPtr NativePointer
        {
            get => __Instance.pointer;
        }

        public static implicit operator AdamantiumVulkan.Core.Interop.DebugUtilsMessengerEXT_T(DebugUtilsMessengerEXT d)
        {
            return d.__Instance;
        }

        public static implicit operator DebugUtilsMessengerEXT(AdamantiumVulkan.Core.Interop.DebugUtilsMessengerEXT_T d)
        {
            return new DebugUtilsMessengerEXT(){__Instance = d};
        }

    }

    // File: C:\VulkanSDK\1.1.101.0\Include\vulkan/vulkan_core.h Line: 8001 Column: 1
    public partial class ValidationCacheEXT
    {
        internal ValidationCacheEXT_T __Instance;

        public ValidationCacheEXT()
        {
        }

        public ValidationCacheEXT(AdamantiumVulkan.Core.Interop.ValidationCacheEXT_T __Instance)
        {
            this.__Instance = __Instance;
        }

        public System.IntPtr NativePointer
        {
            get => __Instance.pointer;
        }

        public static implicit operator AdamantiumVulkan.Core.Interop.ValidationCacheEXT_T(ValidationCacheEXT v)
        {
            return v.__Instance;
        }

        public static implicit operator ValidationCacheEXT(AdamantiumVulkan.Core.Interop.ValidationCacheEXT_T v)
        {
            return new ValidationCacheEXT(){__Instance = v};
        }

    }

    // File: C:\VulkanSDK\1.1.101.0\Include\vulkan/vulkan_core.h Line: 8265 Column: 1
    public partial class AccelerationStructureNV
    {
        internal AccelerationStructureNV_T __Instance;

        public AccelerationStructureNV()
        {
        }

        public AccelerationStructureNV(AdamantiumVulkan.Core.Interop.AccelerationStructureNV_T __Instance)
        {
            this.__Instance = __Instance;
        }

        public System.IntPtr NativePointer
        {
            get => __Instance.pointer;
        }

        public static implicit operator AdamantiumVulkan.Core.Interop.AccelerationStructureNV_T(AccelerationStructureNV a)
        {
            return a.__Instance;
        }

        public static implicit operator AccelerationStructureNV(AdamantiumVulkan.Core.Interop.AccelerationStructureNV_T a)
        {
            return new AccelerationStructureNV(){__Instance = a};
        }

    }

    public static class VulkanNative
    {
        public static Result CreateInstance(in AdamantiumVulkan.Core.InstanceCreateInfo pCreateInfo, in AdamantiumVulkan.Core.AllocationCallbacks pAllocator, out Instance pInstance)
        {
            var arg1 = ReferenceEquals(pAllocator, null) ? IntPtr.Zero : MarshalUtils.MarshalStructToPtr<AdamantiumVulkan.Core.Interop.AllocationCallbacks>(pAllocator);
            Instance_T arg2;
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkCreateInstance(pCreateInfo, arg1, out arg2);
            Marshal.FreeHGlobal(arg1);
            pInstance = arg2;
            return result;
        }

        public static Result EnumerateInstanceExtensionProperties(string pLayerName, ref uint pPropertyCount, AdamantiumVulkan.Core.ExtensionProperties[] pProperties)
        {
            AdamantiumVulkan.Core.Interop.ExtensionProperties[] arg2 = null;
            if (!ReferenceEquals(pProperties, null))
            {
                arg2 = new AdamantiumVulkan.Core.Interop.ExtensionProperties[pProperties.Length];
            }
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkEnumerateInstanceExtensionProperties(pLayerName, ref pPropertyCount, arg2);
            if (!ReferenceEquals(pProperties, null))
            {
                for (int i = 0; i < pProperties.Length; i++)
                {
                    pProperties[i] = arg2[i];
                }
            }
            return result;
        }

        public static Result EnumerateInstanceLayerProperties(ref uint pPropertyCount, AdamantiumVulkan.Core.LayerProperties[] pProperties)
        {
            AdamantiumVulkan.Core.Interop.LayerProperties[] arg1 = null;
            if (!ReferenceEquals(pProperties, null))
            {
                arg1 = new AdamantiumVulkan.Core.Interop.LayerProperties[pProperties.Length];
            }
            var result = AdamantiumVulkan.Core.Interop.VulkanInterop.vkEnumerateInstanceLayerProperties(ref pPropertyCount, arg1);
            if (!ReferenceEquals(pProperties, null))
            {
                for (int i = 0; i < pProperties.Length; i++)
                {
                    pProperties[i] = arg1[i];
                }
            }
            return result;
        }

        public static Result EnumerateInstanceVersion(ref uint pApiVersion)
        {
            return AdamantiumVulkan.Core.Interop.VulkanInterop.vkEnumerateInstanceVersion(ref pApiVersion);
        }

    }

}

