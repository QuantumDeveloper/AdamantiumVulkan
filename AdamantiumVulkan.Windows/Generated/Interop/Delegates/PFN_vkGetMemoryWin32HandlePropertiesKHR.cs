// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

using System.Security;
using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using QuantumBinding.Utils;
using AdamantiumVulkan.Core;
using AdamantiumVulkan.Core.Interop;

namespace AdamantiumVulkan.Windows.Interop;

// File: C:\VulkanSDK\1.3.275.0\Include\vulkan/vulkan_win32.h Line: 85 Column: 30
public unsafe struct PFN_vkGetMemoryWin32HandlePropertiesKHR
{
    public PFN_vkGetMemoryWin32HandlePropertiesKHR(void* ptr)
    {
        NativePointer = ptr;
        InvokeFunc = (delegate* unmanaged<AdamantiumVulkan.Core.Interop.VkDevice_T, ExternalMemoryHandleTypeFlagBits, System.IntPtr, AdamantiumVulkan.Windows.Interop.VkMemoryWin32HandlePropertiesKHR*, Result>)ptr;
    }

    private delegate* unmanaged<AdamantiumVulkan.Core.Interop.VkDevice_T, ExternalMemoryHandleTypeFlagBits, System.IntPtr, AdamantiumVulkan.Windows.Interop.VkMemoryWin32HandlePropertiesKHR*, Result> InvokeFunc;

    public void* NativePointer { get; }

    public Result Invoke(AdamantiumVulkan.Core.Interop.VkDevice_T device, ExternalMemoryHandleTypeFlagBits handleType, System.IntPtr handle, AdamantiumVulkan.Windows.Interop.VkMemoryWin32HandlePropertiesKHR* pMemoryWin32HandleProperties)
    {
        return InvokeFunc(device, handleType, handle, pMemoryWin32HandleProperties);
    }
    public static Result Invoke(void* ptr, AdamantiumVulkan.Core.Interop.VkDevice_T device, ExternalMemoryHandleTypeFlagBits handleType, System.IntPtr handle, AdamantiumVulkan.Windows.Interop.VkMemoryWin32HandlePropertiesKHR* pMemoryWin32HandleProperties)
    {
        return ((delegate* unmanaged<AdamantiumVulkan.Core.Interop.VkDevice_T, ExternalMemoryHandleTypeFlagBits, System.IntPtr, AdamantiumVulkan.Windows.Interop.VkMemoryWin32HandlePropertiesKHR*, Result>)ptr)(device, handleType, handle, pMemoryWin32HandleProperties);
    }

    public static explicit operator PFN_vkGetMemoryWin32HandlePropertiesKHR(void* ptr) => new(ptr);
}


