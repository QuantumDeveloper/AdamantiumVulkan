// ----------------------------------------------------------------------------------------------
// <auto-generated>
// This file was autogenerated by QuantumBindingGenerator.
// Do not edit this file manually, because you will lose all your changes after next generation.
// </auto-generated>
// ----------------------------------------------------------------------------------------------

namespace AdamantiumVulkan.Windows.Interop
{
    using System.Security;
    using System;
    using System.Runtime.InteropServices;
    using AdamantiumVulkan.Core;
    using AdamantiumVulkan.Core.Interop;

    public static class VulkanInterop
    {
        public const string LibraryPath = "vulkan-1";

        [DllImport(LibraryPath, EntryPoint = "vkAcquireFullScreenExclusiveModeEXT", CallingConvention = CallingConvention.Winapi)]
        internal static extern Result vkAcquireFullScreenExclusiveModeEXT([In] AdamantiumVulkan.Core.Interop.VkDevice_T device, [In] AdamantiumVulkan.Core.Interop.VkSwapchainKHR_T swapchain);

        [DllImport(LibraryPath, EntryPoint = "vkCreateWin32SurfaceKHR", CallingConvention = CallingConvention.Winapi)]
        internal static extern Result vkCreateWin32SurfaceKHR([In] AdamantiumVulkan.Core.Interop.VkInstance_T instance, System.IntPtr pCreateInfo, System.IntPtr pAllocator, [Out] out AdamantiumVulkan.Core.Interop.VkSurfaceKHR_T pSurface);

        [DllImport(LibraryPath, EntryPoint = "vkGetDeviceGroupSurfacePresentModes2EXT", CallingConvention = CallingConvention.Winapi)]
        internal static extern Result vkGetDeviceGroupSurfacePresentModes2EXT([In] AdamantiumVulkan.Core.Interop.VkDevice_T device, System.IntPtr pSurfaceInfo, ref uint pModes);

        [DllImport(LibraryPath, EntryPoint = "vkGetFenceWin32HandleKHR", CallingConvention = CallingConvention.Winapi)]
        internal static extern Result vkGetFenceWin32HandleKHR([In] AdamantiumVulkan.Core.Interop.VkDevice_T device, System.IntPtr pGetWin32HandleInfo, [In, Out] System.IntPtr pHandle);

        [DllImport(LibraryPath, EntryPoint = "vkGetMemoryWin32HandleKHR", CallingConvention = CallingConvention.Winapi)]
        internal static extern Result vkGetMemoryWin32HandleKHR([In] AdamantiumVulkan.Core.Interop.VkDevice_T device, System.IntPtr pGetWin32HandleInfo, [In, Out] System.IntPtr pHandle);

        [DllImport(LibraryPath, EntryPoint = "vkGetMemoryWin32HandleNV", CallingConvention = CallingConvention.Winapi)]
        internal static extern Result vkGetMemoryWin32HandleNV([In] AdamantiumVulkan.Core.Interop.VkDevice_T device, [In] AdamantiumVulkan.Core.Interop.VkDeviceMemory_T memory, [In] uint handleType, [In, Out] System.IntPtr pHandle);

        [DllImport(LibraryPath, EntryPoint = "vkGetMemoryWin32HandlePropertiesKHR", CallingConvention = CallingConvention.Winapi)]
        internal static extern Result vkGetMemoryWin32HandlePropertiesKHR([In] AdamantiumVulkan.Core.Interop.VkDevice_T device, [In] ExternalMemoryHandleTypeFlagBits handleType, [In] System.IntPtr handle, [In] System.IntPtr pMemoryWin32HandleProperties);

        [DllImport(LibraryPath, EntryPoint = "vkGetPhysicalDeviceSurfacePresentModes2EXT", CallingConvention = CallingConvention.Winapi)]
        internal static extern Result vkGetPhysicalDeviceSurfacePresentModes2EXT([In] AdamantiumVulkan.Core.Interop.VkPhysicalDevice_T physicalDevice, System.IntPtr pSurfaceInfo, ref uint pPresentModeCount, ref int pPresentModes);

        [DllImport(LibraryPath, EntryPoint = "vkGetPhysicalDeviceWin32PresentationSupportKHR", CallingConvention = CallingConvention.Winapi)]
        internal static extern bool vkGetPhysicalDeviceWin32PresentationSupportKHR([In] AdamantiumVulkan.Core.Interop.VkPhysicalDevice_T physicalDevice, [In] uint queueFamilyIndex);

        [DllImport(LibraryPath, EntryPoint = "vkGetSemaphoreWin32HandleKHR", CallingConvention = CallingConvention.Winapi)]
        internal static extern Result vkGetSemaphoreWin32HandleKHR([In] AdamantiumVulkan.Core.Interop.VkDevice_T device, System.IntPtr pGetWin32HandleInfo, [In, Out] System.IntPtr pHandle);

        [DllImport(LibraryPath, EntryPoint = "vkImportFenceWin32HandleKHR", CallingConvention = CallingConvention.Winapi)]
        internal static extern Result vkImportFenceWin32HandleKHR([In] AdamantiumVulkan.Core.Interop.VkDevice_T device, System.IntPtr pImportFenceWin32HandleInfo);

        [DllImport(LibraryPath, EntryPoint = "vkImportSemaphoreWin32HandleKHR", CallingConvention = CallingConvention.Winapi)]
        internal static extern Result vkImportSemaphoreWin32HandleKHR([In] AdamantiumVulkan.Core.Interop.VkDevice_T device, System.IntPtr pImportSemaphoreWin32HandleInfo);

        [DllImport(LibraryPath, EntryPoint = "vkReleaseFullScreenExclusiveModeEXT", CallingConvention = CallingConvention.Winapi)]
        internal static extern Result vkReleaseFullScreenExclusiveModeEXT([In] AdamantiumVulkan.Core.Interop.VkDevice_T device, [In] AdamantiumVulkan.Core.Interop.VkSwapchainKHR_T swapchain);

    }


}

